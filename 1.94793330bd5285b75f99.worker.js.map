{"version":3,"sources":["../../src/kernels/types.ts","../../src/kernels/AddN.ts","../../src/kernels/ArgMax.ts","../../src/kernels/AvgPool.ts","../../src/kernels/BatchMatMul.ts","../../src/kernels/ClipByValue.ts","../../src/kernels/Conv2D.ts","../../src/kernels/CropAndResize.ts","../../src/kernels/DepthwiseConv2dNative.ts","../../src/kernels/FusedBatchNorm.ts","../../src/kernels/FusedConv2D.ts","../../src/kernels/FusedDepthwiseConv2D.ts","../../src/kernels/Max.ts","../../src/kernels/MaxPool.ts","../../src/kernels/Min.ts","../../src/kernels/NonMaxSuppressionV3.ts","../../src/kernels/PadV2.ts","../../src/kernels/Prelu.ts","../../src/kernels/ResizeBilinear.ts","../../src/kernels/Sum.ts","../../src/kernels/Tile.ts","../../src/kernels/Transpose.ts","../../src/kernels/unary_kernel.ts","../../src/kernels/binary_kernel.ts","../../src/kernels/Cast.ts","../../src/kernels/Slice.ts","../../src/kernels/Abs.ts","../../src/kernels/Add.ts","../../src/kernels/Concat.ts","../../src/kernels/Cos.ts","../../src/kernels/Div.ts","../../src/kernels/Exp.ts","../../src/kernels/FloorDiv.ts","../../src/kernels/Greater.ts","../../src/kernels/GreaterEqual.ts","../../src/kernels/LogicalAnd.ts","../../src/kernels/Less.ts","../../src/kernels/LessEqual.ts","../../src/kernels/Log.ts","../../src/kernels/Maximum.ts","../../src/kernels/Minimum.ts","../../src/kernels/Mul.ts","../../src/kernels/Relu.ts","../../src/kernels/Relu6.ts","../../src/kernels/Reshape.ts","../../src/kernels/Rsqrt.ts","../../src/kernels/Sigmoid.ts","../../src/kernels/Sin.ts","../../src/kernels/Square.ts","../../src/kernels/Sub.ts","../../src/kernels/Tanh.ts","../../src/kernels/Unpack.ts","../../wasm-out/tfjs-backend-wasm.js","../../src/backend_wasm.ts"],"names":["CppDType","wasmFunc","wasmAvgPool","wasmBatchMatMul","wasmClip","wasmConv2d","InterpolationMethod","wasmCropAndResize","wasmDepthwiseConv2d","wasmBatchNorm","wasmFusedConv2d","FusableActivation","wasmFusedDepthwiseConv2d","wasmMax","wasmMaxPool","wasmMin","wasmPadV2","wasmPrelu","wasmResizeBilinear","wasmSum","wasmTile","wasmTranspose","registerUnaryKernel","kernelName","registerKernel","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","x","xId","dataIdMap","get","dataId","id","out","makeOutput","shape","dtype","outId","util","sizeFromShape","registerBinaryKernel","supportsFullBroadcast","inputs","a","b","aId","bId","outputType","newShape","backend_util","assertAndGetBroadcastShape","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","length","aBroadcastDims","getBroadcastDims","bBroadcastDims","loopsOverAllOfA","every","v","i","loopsOverAllOfB","Error","cast","inVals","typedArrayFromHeap","set","slice","_a","begin","size","isContinous","slice_util","isSliceContinous","xVals","outVals","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","rank","xStride","outOffset","beginI","beginJ","endI","xOffset","xStride1","xStride2","beginK","endJ","j","xStride3","endK","beginL","k","xInfo","outBuf","xBuf","xLoc","indexToLoc","map","idx","inputIds","inputIdsBytes","axis","outShape","outerSize","innerSize","attrs","convInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","transposeA","transposeB","leftDim","rightDim","batchDim","min","max","computeOutShape","sumInnerDims","innerDims","innerDim","input","inOffset","vals","filter","filterId","inputChannels","outputChannels","outChannels","isSamePad","type","castedData","method","extrapolationValue","cropSize","images","boxes","boxInd","numBoxes","cropHeight","cropWidth","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","disposeData","varianceEpsilon","mean","variance","offset","scale","meanId","varianceId","offsetId","scaleId","activation","fusedActivation","bias","preluActivationWeights","biasId","biasData","batchSize","inHeight","inWidth","preluActivationWeightsId","axes","assertAxesAreInnerMostDims","reduceShape","reduceSize","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","resOffset","result","HEAPU8","memOffset","_free","paddings","constantValue","p","xShapeBytes","paddingsFlat","concat","paddingsBytes","alpha","weightsId","alignCorners","newHeight","newWidth","batch","oldHeight","oldWidth","numChannels","xData","reps","Array","newShapeBytes","perm","newPerm","push","minValIdx","reducedShape","permIsNoOp","inShape","permBytes","numOutputs","outIndex","outs","fill","_scriptDir","WasmBackendModule","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","require$$0","require$$1","toString","assert","replace","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","wasmBinary","wasmMemory","bind","err","WebAssembly","wasmTable","Table","initial","maximum","element","ABORT","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","opts","toC","string","str","len","outPtr","maxBytesToWrite","outU8Array","outIdx","endIdx","u","charCodeAt","stringToUTF8Array","stringToUTF8","stackAlloc","array","arr","HEAP8","writeArrayToMemory","cArgs","stack","converter","stackSave","apply","UTF8ToString","Boolean","stackRestore","HEAP32","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","maxBytesToRead","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","ptr","alignUp","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","arg","Memory","byteLength","DYNAMICTOP_PTR","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","addOnPreRun","cb","unshift","addOnPostRun","Math_ceil","Math","ceil","Math_floor","floor","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","dataURIPrefix","isDataURI","prototype","startsWith","wasmBinaryFile","getBinary","path","locateFile","___wasm_call_ctors","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","get64","low","getZero","asmLibraryArg","d","dest","num","e","requestedSize","oldSize","newSize","grow","emscripten_realloc_buffer","fd","FS","ErrnoError","errno","c","offset_low","offset_high","whence","newOffset","g","iov","iovcnt","pnum","memory","table","asm","info","env","wasi_unstable","receiveInstance","instance","module","exports","clearInterval","removeRunDependency","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","then","catch","instantiate","reason","instantiateStreaming","createWasm","calledRun","arguments","status","this","name","message","run","doRun","postRun","preRun","setTimeout","numericArgs","old","runCaller","_super","_this","tfjs","init","DataStorage","engine","tslib_1.__extends","BackendWasm","values","move","numDataIds","start","now","kernelMs","dataIdNextNumber","numBytes","bytesPerElement","memoryOffset","_malloc","registerTensor","stringBytes","readSync","delete","dispose","unreliable","write","factoryConfig","wasmPath","prefix","endsWith","wasmFactory","initialized","onRuntimeInitialized","initAborted","onAbort","registerBackend","setWasmPath"],"mappings":"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","file":"1.94793330bd5285b75f99.worker.js","sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap('AddN', null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AddN',\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelFunc, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\ninterface ArgMaxInputs {\n  x: TensorInfo;\n}\n\ninterface ArgMaxAttrs {\n  axis: number;\n}\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap('ArgMax', null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const outShape = x.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = x.shape[axis];\n  wasmFunc(xId, CppDType[x.dtype], outerSize, innerSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ArgMax',\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface AvgPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap('AvgPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(args: {\n  inputs: AvgPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'AvgPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchMatMulInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n\ninterface BatchMatMulAttrs extends NamedAttrMap {\n  transposeA: boolean;\n  transposeB: boolean;\n}\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap('BatchMatMul', null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDim = a.shape[0];\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmBatchMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, outId);\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'BatchMatMul',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ClipByValueInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ClipByValueAttrs extends NamedAttrMap {\n  min: number;\n  max: number;\n}\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap('ClipByValue', null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {min, max} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, min, max, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ClipByValue',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface Conv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap('Conv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(args: {\n  inputs: Conv2DInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Conv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\ninterface CropAndResizeInputs extends NamedTensorInfoMap {\n  images: TensorInfo;\n  boxes: TensorInfo;\n  boxInd: TensorInfo;\n}\n\ninterface CropAndResizeAttrs extends NamedAttrMap {\n  method: keyof InterpolationMethod;\n  extrapolationValue: number;\n  cropSize: [number, number];\n}\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap('CropAndResize', null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {images, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, images.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (images.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(images.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'CropAndResize',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface DepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap('DepthwiseConv2dNative', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'DepthwiseConv2dNative',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface BatchNormInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  mean: TensorInfo;\n  variance: TensorInfo;\n  offset: TensorInfo;\n  scale: TensorInfo;\n}\n\ninterface BatchNormAttrs extends NamedAttrMap {\n  varianceEpsilon: number;\n}\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      'FusedBatchNorm', null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(\n    args:\n        {backend: BackendWasm, inputs: BatchNormInputs, attrs: BatchNormAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'BatchNormalization',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface FusedConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap('FusedConv2D', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // outId\n  ]);\n}\n\n// Must match enum in conv2d_impl.h.\nenum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface FusedDepthwiseConv2DInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n  bias?: TensorInfo;\n}\n\nlet wasmFusedDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, biasId: number,\n    padTop: number, padRight: number, padBottom: number, padLeft: number,\n    isSamePad: number, dilationHeight: number, dilationWidth: number,\n    strideHeight: number, strideWidth: number, inputChannels: number,\n    outputChannels: number, activation: number,\n    preluActivationWeightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap('FusedDepthwiseConv2D', null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // outId\n      ]);\n}\n\n// Must match enum in conv2d_impl.h.\nenum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs:\n      {convInfo: backend_util.Conv2DInfo, activation: backend_util.Activation}\n}) {\n  const {inputs, attrs, backend} = args;\n  const {convInfo, activation} = attrs;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'FusedDepthwiseConv2D',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MaxInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface MaxAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmMax: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax =\n      backend.wasm.cwrap('Max', null /*void*/, ['number, number, number']);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('max', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMax(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Max',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MaxPoolInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  filter: TensorInfo;\n}\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap('MaxPool', null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(args: {\n  inputs: MaxPoolInputs,\n  backend: BackendWasm,\n  attrs: backend_util.Conv2DInfo\n}) {\n  const {inputs, attrs, backend} = args;\n  const convInfo = attrs;\n\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'MaxPool',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface MinInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface MinAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmMin: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin =\n      backend.wasm.cwrap('Min', null /*void*/, ['number, number, number']);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMin(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Min',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface NonMaxSuppressionInputs extends NamedTensorInfoMap {\n  boxes: TensorInfo;\n  scores: TensorInfo;\n}\n\ninterface NonMaxSuppressionAttrs extends NamedAttrMap {\n  maxOutputSize: number;\n  iouThreshold: number;\n  scoreThreshold: number;\n}\n\n// Analogous to `struct Result` in `NonMaxSuppressionV3.cc`.\ninterface Result {\n  memOffset: number;\n  size: number;\n}\n\n/**\n * Parse the result of the c++ method, which is a data structure with two ints\n * (memOffset and size).\n */\nfunction parseResultStruct(backend: BackendWasm, resOffset: number): Result {\n  // The result of c++ method is a data structure with two ints (memOffset, and\n  // size).\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 2);\n  const memOffset = result[0];\n  const size = result[1];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {memOffset, size};\n}\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      'NonMaxSuppressionV3',\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionInputs,\n  attrs: NonMaxSuppressionAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {memOffset, size} = parseResultStruct(backend, resOffset);\n\n  const outShape = [size];\n  return backend.makeOutput(outShape, 'int32', memOffset);\n}\n\nregisterKernel({\n  kernelName: 'NonMaxSuppressionV3',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface PadInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface PadAttrs extends NamedAttrMap {\n  paddings: Array<[number, number]>;\n  constantValue: number;\n}\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    paddingsBytes: Uint8Array, constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap('PadV2', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(args: {inputs: PadInputs, backend: BackendWasm, attrs: PadAttrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const paddingsFlat = [].concat(...paddings);\n  const paddingsBytes = new Uint8Array(new Int32Array(paddingsFlat).buffer);\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], paddingsBytes,\n      constantValue, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'PadV2',\n  backendName: 'wasm',\n  kernelFunc: pad,\n  setupFunc: setup\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface PreluInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n  alpha: TensorInfo;\n}\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap('Prelu', null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(xId, weightsId, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Prelu',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\ninterface ResizeBilinearInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ResizeBilinearAttrs extends NamedAttrMap {\n  newWidth: number;\n  newHeight: number;\n  alignCorners: boolean;\n}\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap('ResizeBilinear', null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {alignCorners, newHeight, newWidth} = attrs;\n\n  const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(x.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'ResizeBilinear',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SumInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SumAttrs extends NamedAttrMap {\n  axes: number[];\n}\n\nlet wasmSum: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum =\n      backend.wasm.cwrap('Sum', null /*void*/, ['number, number, number']);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axes} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  backend_util.assertAxesAreInnerMostDims('sum', axes, x.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmSum(xId, reduceSize, outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Sum',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TileInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TileAttrs extends NamedAttrMap {\n  reps: number[];\n}\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap('Tile', null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Tile',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\ninterface TransposeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface TransposeAttrs extends NamedAttrMap {\n  perm: number[];\n}\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap('Transpose', null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nfunction transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  if (permIsNoOp) {\n    return {dataId: x.dataId, shape: outShape, dtype: x.dtype};\n  }\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nregisterKernel({\n  kernelName: 'Transpose',\n  backendName: 'wasm',\n  kernelFunc: transpose,\n  setupFunc: setup,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface UnaryInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\nexport function registerUnaryKernel(kernelName: string) {\n  let wasmFunc: (xId: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc =\n        backend.wasm.cwrap(kernelName, null /* void */, ['number', 'number']);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, outId);\n    return out;\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DataType, NamedTensorInfoMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nexport function registerBinaryKernel(\n    kernelName: string, supportsFullBroadcast: boolean, dtype?: DataType) {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    if (supportsFullBroadcast) {\n      kernelFunc();\n      return out;\n    }\n\n    const aBroadcastDims = backend_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(b.shape, newShape);\n    const loopsOverAllOfA = aBroadcastDims.every((v, i) => v === i);\n    const loopsOverAllOfB = bBroadcastDims.every((v, i) => v === i);\n    if (loopsOverAllOfA && loopsOverAllOfB) {\n      kernelFunc();\n      return out;\n    } else {\n      throw new Error(\n          `Broadcasting along outer dims is not yet ` +\n          `supported for ${kernelName}.`);\n    }\n  }\n\n  registerKernel({kernelName, backendName: 'wasm', setupFunc, kernelFunc});\n}\n\ninterface BinaryInputs extends NamedTensorInfoMap {\n  a: TensorInfo;\n  b: TensorInfo;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface CastInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface CastAttrs extends NamedAttrMap {\n  dtype: DataType;\n}\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Cast',\n  backendName: 'wasm',\n  kernelFunc: cast,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, buffer, NamedAttrMap, NamedTensorInfoMap, registerKernel, slice_util, util} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface SliceInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface SliceAttrs extends NamedAttrMap {\n  begin: number[];\n  size: number[];\n}\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n  const isContinous = slice_util.isSliceContinous(x.shape, begin, size);\n  const xVals = backend.typedArrayFromHeap(x);\n  const out = backend.makeOutput(size, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  const xStrides = util.computeStrides(x.shape);\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n    outVals.set(\n        xVals.subarray(flatOffset, flatOffset + util.sizeFromShape(size)));\n    return out;\n  }\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals, xStrides[0], outVals, begin as [number, number],\n        size as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals, xStrides[0], xStrides[1], outVals,\n        begin as [number, number, number], size as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin as [number, number, number, number],\n        size as [number, number, number, number]);\n  } else {\n    genericSliceSlow(xVals, x, outVals, begin, size);\n  }\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nfunction genericSliceSlow(\n    xVals: backend_util.TypedArray, xInfo: TensorInfo,\n    outVals: backend_util.TypedArray, begin: number[], size: number[]): void {\n  const outBuf = buffer(size, xInfo.dtype, outVals);\n  const xBuf = buffer(xInfo.shape, xInfo.dtype, xVals);\n  for (let i = 0; i < outBuf.size; ++i) {\n    const loc = outBuf.indexToLoc(i);\n    const xLoc = loc.map((idx, j) => idx + begin[j]);\n    outVals[i] = xBuf.get(...xLoc) as number;\n  }\n}\n\nregisterKernel({\n  kernelName: 'Slice',\n  backendName: 'wasm',\n  kernelFunc: slice,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Abs');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Add', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelFunc, NamedAttrMap, registerKernel, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ConcatAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction concat(\n    args: {inputs: TensorInfo[], backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend, attrs: {axis}} = args;\n  const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  const batchDim = util.sizeFromShape(inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nregisterKernel({\n  kernelName: 'Concat',\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Cos');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Div', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Exp');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('FloorDiv', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Greater', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('GreaterEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LogicalAnd', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Less', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('LessEqual', supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Log');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Maximum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = false;\nregisterBinaryKernel('Minimum', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Mul', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Relu6');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\ninterface ReshapeInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface ReshapeAttrs extends NamedAttrMap {\n  shape: number[];\n}\n\nfunction reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {shape}} = args;\n  return {dataId: x.dataId, shape, dtype: x.dtype};\n}\n\nregisterKernel({\n  kernelName: 'Reshape',\n  backendName: 'wasm',\n  kernelFunc: reshape,\n});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Rsqrt');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Sigmoid');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Sin');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Square');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerBinaryKernel} from './binary_kernel';\nconst supportsFullBroadcast = true;\nregisterBinaryKernel('Sub', supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {registerUnaryKernel} from './unary_kernel';\nregisterUnaryKernel('Tanh');\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedAttrMap, NamedTensorInfoMap, registerKernel, TensorInfo} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\ninterface UnpackInputs extends NamedTensorInfoMap {\n  x: TensorInfo;\n}\n\ninterface UnpackAttrs extends NamedAttrMap {\n  axis: number;\n}\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs: {x}, backend, attrs: {axis}} = args;\n  const numOutputs = x.shape[axis];\n  const rank = x.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = x.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nregisterKernel({\n  kernelName: 'Unpack',\n  backendName: 'wasm',\n  kernelFunc: unpack,\n});\n","\nvar WasmBackendModule = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_HAS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":96,\"maximum\":96+0,\"element\":\"anyfunc\"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var DYNAMIC_BASE=5252032,DYNAMICTOP_PTR=8992;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_ceil=Math.ceil;var Math_floor=Math.floor;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(what)}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_unstable\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function _abort(){abort()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _emscripten_get_heap_size(){return HEAP8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function _fd_close(fd){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _roundf(d){d=+d;return d>=+0?+Math_floor(d+ +.5):+Math_ceil(d-+.5)}var asmLibraryArg={\"a\":_abort,\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"f\":_fd_close,\"c\":_fd_seek,\"g\":_fd_write,\"memory\":wasmMemory,\"b\":_roundf,\"table\":wasmTable};var asm=createWasm();Module[\"asm\"]=asm;var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return Module[\"asm\"][\"h\"].apply(null,arguments)};var _init=Module[\"_init\"]=function(){return Module[\"asm\"][\"i\"].apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return Module[\"asm\"][\"j\"].apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return Module[\"asm\"][\"k\"].apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return Module[\"asm\"][\"l\"].apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return Module[\"asm\"][\"m\"].apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return Module[\"asm\"][\"n\"].apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return Module[\"asm\"][\"o\"].apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return Module[\"asm\"][\"p\"].apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return Module[\"asm\"][\"q\"].apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return Module[\"asm\"][\"r\"].apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return Module[\"asm\"][\"s\"].apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return Module[\"asm\"][\"t\"].apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return Module[\"asm\"][\"u\"].apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return Module[\"asm\"][\"v\"].apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return Module[\"asm\"][\"w\"].apply(null,arguments)};var _Div=Module[\"_Div\"]=function(){return Module[\"asm\"][\"x\"].apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return Module[\"asm\"][\"y\"].apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return Module[\"asm\"][\"z\"].apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return Module[\"asm\"][\"A\"].apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return Module[\"asm\"][\"B\"].apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return Module[\"asm\"][\"C\"].apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return Module[\"asm\"][\"D\"].apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return Module[\"asm\"][\"E\"].apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return Module[\"asm\"][\"F\"].apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var _Mul=Module[\"_Mul\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"da\"].apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return Module[\"asm\"][\"ea\"].apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return Module[\"asm\"][\"fa\"].apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return Module[\"asm\"][\"ga\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"ha\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"ia\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;var calledRun;Module[\"then\"]=function(func){if(calledRun){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return WasmBackendModule\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = WasmBackendModule;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return WasmBackendModule; });\n    else if (typeof exports === 'object')\n      exports[\"WasmBackendModule\"] = WasmBackendModule;\n    ","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, engine, KernelBackend, registerBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\nconst WASM_PRIORITY = 2;\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule) {\n    super();\n    this.wasm.tfjs.init();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {};\n    this.move(dataId, values, shape, dtype);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId, {id, stringBytes, shape, dtype, memoryOffset: null});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer, 0, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId): backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      return stringBytes;\n    }\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset,\n        memoryOffset + util.sizeFromShape(shape) * util.bytesPerElement(dtype));\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  disposeData(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    this.wasm._free(data.memoryOffset);\n    this.wasm.tfjs.disposeData(data.id);\n    this.dataIdMap.delete(dataId);\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      dataId = {};\n      const id = this.dataIdNextNumber++;\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Uknown dtype ${dtype}`);\n    }\n  }\n}\n\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested in\n * Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n    if (wasmPath != null) {\n      factoryConfig.locateFile = (path, prefix) => {\n        if (path.endsWith('.wasm')) {\n          return wasmPath;\n        }\n        return prefix + path;\n      };\n    }\n    const wasm = wasmFactory(factoryConfig);\n    const voidReturnType: string = null;\n    // Using the tfjs namespace to avoid conflict with emscripten's API.\n    wasm.tfjs = {\n      init: wasm.cwrap('init', null, []),\n      registerTensor: wasm.cwrap(\n          'register_tensor', null,\n          [\n            'number',  // id\n            'number',  // size\n            'number',  // memoryOffset\n          ]),\n      disposeData: wasm.cwrap('dispose_data', voidReturnType, ['number']),\n      dispose: wasm.cwrap('dispose', voidReturnType, []),\n    };\n    let initialized = false;\n    wasm.onRuntimeInitialized = () => {\n      initialized = true;\n      initAborted = false;\n      resolve({wasm});\n    };\n    wasm.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nlet wasmPath: string = null;\nlet initAborted = false;\n\n/**\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n */\n/** @doc {heading: 'Environment', namespace: 'wasm'} */\nexport function setWasmPath(path: string): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n}\n"],"sourceRoot":""}