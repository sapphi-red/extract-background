{"version":3,"sources":["../webpack/bootstrap","../../src/index.ts","../../src/util.ts","../../src/engine.ts","../../src/tensor_util_env.ts","../../../src/ops/operation.ts","../../src/environment.ts","../../../src/ops/tensor_ops.ts","../../../../src/backends/webgl/shader_compiler.ts","../../../src/ops/broadcast_util.ts","../../src/globals.ts","../node_modules/webpack/buildin/amd-define.js","../../../src/ops/ops.ts","../../src/tensor.ts","../../../../src/backends/webgl/tex_util.ts","../../../../src/backends/webgl/glsl_version.ts","../../../src/ops/array_ops.ts","../../../src/ops/axis_util.ts","../../../src/backends/packing_util.ts","../../src/serialization.ts","../../src/tensor_util.ts","../../../../src/backends/webgl/shader_compiler_util.ts","../../../src/ops/binary_ops.ts","../../../src/optimizers/optimizer.ts","../../src/kernel_registry.ts","../../src/types.ts","../../../src/ops/concat_util.ts","../node_modules/webpack/buildin/module.js","../node_modules/webpack/buildin/amd-options.js","../../../src/ops/logical_ops.ts","../../../src/io/io_utils.ts","../../../src/io/router_registry.ts","../../../../src/backends/webgl/webgl_util.ts","../../../src/ops/complex_ops.ts","../../../src/ops/slice_util.ts","../../src/gradients.ts","../node_modules/webpack/buildin/global.js","../node_modules/process/browser.js","../../../../src/backends/webgl/canvas_util.ts","../../../src/ops/concat_split.ts","../../../src/ops/conv_util.ts","../../../src/optimizers/sgd_optimizer.ts","../../src/device_util.ts","../../../src/ops/scatter_nd_util.ts","../../../src/backends/backend.ts","../../../src/backends/backend_util.ts","../../../src/backends/non_max_suppression_impl.ts","../../../src/backends/where_impl.ts","../../../../src/backends/webgl/unaryop_gpu.ts","../../../src/ops/selu_util.ts","../../../src/ops/unary_ops.ts","../../../src/ops/conv.ts","../../../src/ops/slice.ts","../../../src/ops/spectral_ops.ts","../../../src/io/model_management.ts","../../../src/optimizers/adadelta_optimizer.ts","../../../src/optimizers/adagrad_optimizer.ts","../../../src/optimizers/adam_optimizer.ts","../../../src/optimizers/adamax_optimizer.ts","../../../src/optimizers/momentum_optimizer.ts","../../../src/optimizers/rmsprop_optimizer.ts","../../src/data/compiled_api.ts","../../src/operations/custom_op/register.ts","../../src/operations/executors/utils.ts","../../src/operations/op_list/arithmetic.ts","../../src/operations/op_list/basic_math.ts","../../src/operations/op_list/control.ts","../../src/operations/op_list/convolution.ts","../../src/operations/op_list/creation.ts","../../src/operations/op_list/dynamic.ts","../../src/operations/op_list/evaluation.ts","../../src/operations/op_list/graph.ts","../../src/operations/op_list/image.ts","../../src/operations/op_list/logical.ts","../../src/operations/op_list/matrices.ts","../../src/operations/op_list/normalization.ts","../../src/operations/op_list/reduction.ts","../../src/operations/op_list/slice_join.ts","../../src/operations/op_list/spectral.ts","../../src/operations/op_list/transformation.ts","../../src/operations/operation_mapper.ts","../../src/operations/custom_op/node_value_impl.ts","../../src/operations/executors/arithmetic_executor.ts","../../src/operations/executors/basic_math_executor.ts","../../src/executor/tensor_array.ts","../../src/operations/executors/convolution_executor.ts","../../src/operations/executors/creation_executor.ts","../../src/operations/executors/evaluation_executor.ts","../../src/operations/executors/graph_executor.ts","../../src/operations/executors/image_executor.ts","../../src/operations/executors/logical_executor.ts","../../src/operations/executors/matrices_executor.ts","../../src/operations/executors/normalization_executor.ts","../../src/operations/executors/reduction_executor.ts","../../src/operations/executors/slice_join_executor.ts","../../src/operations/executors/spectral_executor.ts","../../src/operations/executors/transformation_executor.ts","../../src/operations/operation_executor.ts","../../src/operations/executors/control_executor.ts","../../src/operations/executors/dynamic_executor.ts","../../src/executor/execution_context.ts","../../src/executor/model_analysis.ts","../../src/executor/graph_executor.ts","../../src/executor/graph_model.ts","../../../../src/backends/webgl/backend_webgl.ts","../../src/log.ts","../node_modules/seedrandom/index.js","../../../src/ops/array_ops_util.ts","../../../src/ops/gather_nd_util.ts","../../../src/ops/reduce_util.ts","../../../src/ops/segment_util.ts","../../../src/ops/softmax.ts","../../../src/backends/complex_util.ts","../../../src/backends/split_shared.ts","../../../src/backends/tile_impl.ts","../../../src/backends/topk_impl.ts","../../../../src/backends/webgl/binaryop_complex_gpu.ts","../../../../src/backends/webgl/binaryop_gpu.ts","../../../../src/backends/webgl/binaryop_packed_gpu.ts","../../../../src/backends/webgl/fft_gpu.ts","../../../../src/backends/webgl/gpgpu_context.ts","../../../../src/backends/webgl/gpgpu_util.ts","../../../src/ops/erf_util.ts","../../../../src/backends/webgl/unaryop_packed_gpu.ts","../../../src/ops/segment_ops.ts","../../../src/ops/compare.ts","../../../src/ops/matmul.ts","../../../src/ops/reduction_ops.ts","../../../src/ops/relu_ops.ts","../../../src/ops/norm.ts","../../../src/ops/signal_ops.ts","../../../src/ops/loss_ops.ts","../../../../src/backends/cpu/cpu_util.ts","../node_modules/buffer/index.js","../../../src/io/types.ts","../../../src/io/weights_loader.ts","../../src/profiler.ts","../../src/tape.ts","../../src/tensor_format.ts","../../src/flags.ts","../../../../src/backends/webgl/flags_webgl.ts","../../../src/ops/rand.ts","../node_modules/seedrandom/lib/alea.js","../node_modules/seedrandom/lib/xor128.js","../node_modules/seedrandom/lib/xorwow.js","../node_modules/seedrandom/lib/xorshift7.js","../node_modules/seedrandom/lib/xor4096.js","../node_modules/seedrandom/lib/tychei.js","../node_modules/seedrandom/seedrandom.js","../../../../src/backends/webgl/addn_gpu.ts","../../../../src/backends/webgl/addn_packed_gpu.ts","../../../../src/backends/webgl/argminmax_gpu.ts","../../../../src/backends/webgl/argminmax_packed_gpu.ts","../../../../src/backends/webgl/avg_pool_backprop_gpu.ts","../../../../src/backends/webgl/batchnorm_gpu.ts","../../../../src/backends/webgl/batchnorm_packed_gpu.ts","../../../../src/backends/webgl/clip_gpu.ts","../../../../src/backends/webgl/clip_packed_gpu.ts","../../../../src/backends/webgl/complex_abs_gpu.ts","../../../../src/backends/webgl/concat_gpu.ts","../../../../src/backends/webgl/concat_packed_gpu.ts","../../../../src/backends/webgl/conv_backprop_gpu.ts","../../../../src/backends/webgl/conv_backprop_gpu_depthwise.ts","../../../../src/backends/webgl/conv_gpu.ts","../../../../src/backends/webgl/conv_gpu_depthwise.ts","../../../../src/backends/webgl/conv_packed_gpu_depthwise.ts","../../../../src/backends/webgl/crop_and_resize_gpu.ts","../../../../src/backends/webgl/cumsum_gpu.ts","../../../../src/backends/webgl/decode_matrix_gpu.ts","../../../../src/backends/webgl/decode_matrix_packed_gpu.ts","../../../../src/backends/webgl/depth_to_space_gpu.ts","../../../../src/backends/webgl/diag_gpu.ts","../../../../src/backends/webgl/encode_float_gpu.ts","../../../../src/backends/webgl/encode_float_packed_gpu.ts","../../../../src/backends/webgl/encode_matrix_gpu.ts","../../../../src/backends/webgl/encode_matrix_packed_gpu.ts","../../../../src/backends/webgl/fill_gpu.ts","../../../../src/backends/webgl/gather_gpu.ts","../../../../src/backends/webgl/gather_nd_gpu.ts","../../../../src/backends/webgl/gpgpu_math.ts","../../../../src/backends/webgl/im2col_packed_gpu.ts","../../../../src/backends/webgl/lrn_gpu.ts","../../../../src/backends/webgl/lrn_grad_gpu.ts","../../../../src/backends/webgl/lrn_packed_gpu.ts","../../../../src/backends/webgl/max_pool_backprop_gpu.ts","../../../../src/backends/webgl/mulmat_packed_gpu.ts","../../../../src/backends/webgl/multinomial_gpu.ts","../../../../src/backends/webgl/onehot_gpu.ts","../../../../src/backends/webgl/pack_gpu.ts","../../../../src/backends/webgl/pad_gpu.ts","../../../../src/backends/webgl/pad_packed_gpu.ts","../../../../src/backends/webgl/pool_gpu.ts","../../../../src/backends/webgl/reduce_gpu.ts","../../../../src/backends/webgl/reshape_packed_gpu.ts","../../../../src/backends/webgl/resize_bilinear_backprop_gpu.ts","../../../../src/backends/webgl/resize_bilinear_gpu.ts","../../../../src/backends/webgl/resize_bilinear_packed_gpu.ts","../../../../src/backends/webgl/resize_nearest_neighbor_backprop_gpu.ts","../../../../src/backends/webgl/resize_nearest_neighbor_gpu.ts","../../../../src/backends/webgl/reverse_gpu.ts","../../../../src/backends/webgl/reverse_packed_gpu.ts","../../../../src/backends/webgl/scatter_gpu.ts","../../../../src/backends/webgl/segment_gpu.ts","../../../../src/backends/webgl/select_gpu.ts","../../../../src/backends/webgl/slice_gpu.ts","../../../../src/backends/webgl/slice_packed_gpu.ts","../../../../src/backends/webgl/strided_slice_gpu.ts","../../../../src/backends/webgl/texture_manager.ts","../../../../src/backends/webgl/tile_gpu.ts","../../../../src/backends/webgl/transpose_gpu.ts","../../../../src/backends/webgl/transpose_packed_gpu.ts","../../../../src/backends/webgl/unpack_gpu.ts","../../../../src/backends/cpu/backend_cpu.ts","../../../src/ops/square.ts","../../../src/ops/batchnorm.ts","../../../src/ops/boolean_mask.ts","../../../src/ops/reverse.ts","../../../src/ops/pool.ts","../../../src/ops/transpose.ts","../../../src/ops/lrn.ts","../../../src/ops/lstm.ts","../../../src/ops/moving_average.ts","../../../src/ops/strided_slice.ts","../../../src/ops/topk.ts","../../../src/ops/scatter_nd.ts","../../../src/ops/sparse_to_dense.ts","../../../src/ops/sparse_to_dense_util.ts","../../../src/ops/gather_nd.ts","../../../src/ops/diag.ts","../../../src/ops/dropout.ts","../../../src/ops/dropout_util.ts","../../../src/ops/in_top_k.ts","../../../src/ops/linalg_ops.ts","../../../src/ops/image_ops.ts","../../../src/ops/fused_ops.ts","../../../src/ops/fused_util.ts","../../../../src/backends/cpu/all_kernels.ts","../../../../src/backends/cpu/square.ts","../../../../src/backends/webgl/all_kernels.ts","../../../../src/backends/webgl/square.ts","../../../../src/backends/webgl/fromPixels.ts","../../../../src/backends/webgl/from_pixels_gpu.ts","../../../../src/backends/webgl/from_pixels_packed_gpu.ts","../../../src/platforms/platform_browser.ts","../../../src/platforms/platform_node.ts","../../../src/io/io.ts","../../../src/io/indexed_db.ts","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../../../src/io/local_storage.ts","../../../src/io/browser_files.ts","../../../src/io/http.ts","../../../src/io/progress.ts","../../../src/io/passthrough.ts","../../src/math.ts","../../../src/ops/confusion_matrix.ts","../../../src/ops/browser.ts","../../src/test_util.ts","../../src/version.ts","../../src/webgl.ts","../../src/train.ts","../../../src/optimizers/optimizer_constructors.ts","../../src/browser_util.ts","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../../src/decode_part_map.ts","../../src/base_model.ts","../../src/mobilenet.ts","../../src/keypoints.ts","../../src/multi_person/util.ts","../../src/multi_person/decode_multiple_masks_cpu.ts","../../src/multi_person/decode_multiple_masks_webgl.ts","../../src/multi_person/decode_instance_masks.ts","../../src/multi_person/max_heap.ts","../../src/multi_person/build_part_with_score_queue.ts","../../src/multi_person/decode_pose.ts","../../src/multi_person/decode_multiple_poses.ts","../../src/resnet.ts","../../src/saved_models.ts","../../src/body_pix_model.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../src/comlink.ts","worker/Child.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","backend_util","Engine","this","state","util_1","Environment","inInfo","texShape","inRank","inShape","length","dims","result","engine_1","environment_1","disableDeprecationWarnings","Error","__export","Tensor","TextureUsage","PhysicalTextureType","defineSpecialInf","defineRound","util","ENGINE","a","loc","coords","types_1","buildVec","x","strides","computeStrides","shape","rank","shapes","computeOutShape","webpackPolyfill","deprecate","paths","children","__webpack_amd_options__","dataPromises","debug","operation_1","tensor_util_env_1","convertToTensor","input","begin","g","Function","e","window","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","alpha","antialias","premultipliedAlpha","preserveDrawingBuffer","depth","stencil","failIfMajorPerformanceCaveat","gl","KernelBackend","dtype","tensor_ops_1","min","max","array_ops_1","$x","save","assert","v","_this","DataType","SaverDef","CheckpointFormatVersion","CUSTOM_OPS","getRegisteredOp","getParamValue","paramName","node","tensorMap","context","inputParam","inputParams","inputIndexStart","start","end","inputIndexEnd","undefined","type","getTensor","inputNames","slice","map","data","dataSync","attrParam","attrParams","tensorsMap","nodeName","index","contextId","currentContextIds","find","getNodeNameWithContextId","getNodeNameAndIndex","inputName","currentContextId","parseNodeName","lastIndexOf","substring","Number","split","arr","size","res","json","tfOpName","category","inputs","attrs","tfName","notSupported","defaultValue","tfDeprecatedName","ops","arithmetic","basicMath","control","convolution","creation","dynamic","evaluation","logical","image","graph","matrices","normalization","reduction","sliceJoin","spectral","transformation","mappersJson","opMappers","reduce","mapper","OperationMapper","_instance","signature","placeholders","weights","nodes","mapNode","op","startsWith","outputs","inputNodeNameToKey","outputNodeNameToKey","mapSignatureEntries","allNodes","keys","forEach","signatureKey","entries","prev","curr","attr","newNode","substr","rawAttrs","param","getStringParam","getStringArrayParam","getNumberParam","getNumericArrayParam","getBoolParam","getBoolArrayParam","getTensorShapeParam","getTensorShapeArrayParam","getDtypeParam","getDtypeArrayParam","parseStringParam","keepCase","isArray","String","fromCharCode","text","global","atob","Buffer","toString","decodeBase64","toLowerCase","def","b","parseInt","parseDtypeParam","tensorflow.DataType","DT_FLOAT","DT_INT32","DT_INT64","DT_BOOL","DT_DOUBLE","DT_STRING","list","parseTensorShapeParam","unknownRank","dim","f","getInput","getAttr","NodeValueImpl","tensor","executeOp","tfc.add","tfc.addN","tfc.mod","tfc.mul","tfc.div","tfc.divNoNan","tfc.floorDiv","tfc.sub","tfc.minimum","tfc.maximum","tfc.pow","tfc.squaredDifference","TypeError","tfc.abs","tfc.acos","tfc.acosh","tfc.asin","tfc.asinh","tfc.atan","tfc.atan2","tfc.atanh","tfc.ceil","tfc.complex","tfc.cos","tfc.cosh","tfc.elu","tfc.erf","tfc.exp","tfc.expm1","tfc.floor","tfc.log","tfc.log1p","tfc.imag","tfc.neg","tfc.reciprocal","tfc.real","tfc.relu","tfc.round","tfc.selu","tfc.sigmoid","tfc.sin","tfc.sign","tfc.sinh","tfc.softplus","tfc.sqrt","tfc.square","tfc.tanh","tfc.tan","tfc.clipByValue","tfc.rsqrt","tfc.prod","tfc.leakyRelu","tfc.prelu","maxSize","elementShape","identicalElementShapes","dynamicSize","clearAfterRead","id","TensorArray","nextId","closed_","tensors","dispose","tensorWithState","cleared","read","indices","assertShapesMatchAllowUndefinedSize","written","write","readMany","stack","maxIndex","Math","writeMany","unstack","totalLength","cumulativeLengths","elementPerRow","tidy","reshape","indices_1","sizes","shapeA","shapeB","errorMessagePrefix","shapesEqualAllowUndefinedSize","n1","n2","stride","pad","dataFormat","toUpperCase","dilation","tfc.conv1d","dilations","tfc.conv2d","activationFunc","isBiasAdd","extraOp","isPrelu","isBatchNorm","numArgs","biasArg","preluArg","tfc.fused","conv2d","depthwiseConv2d","filter","bias","activation","preluActivationWeights","tfc.conv2dTranspose","tfc.depthwiseConv2d","tfc.conv3d","kernelSize","tfc.avgPool","tfc.maxPool","tfc.avgPool3d","tfc.maxPool3d","tfc.fill","stop_1","num","tfc.linspace","logits","numSamples","seed","tfc.multinomial","onValue","offValue","tfc.oneHot","tfc.ones","tfc.onesLike","tfc.randomUniform","stop_2","step","tfc.range","mean","stdDev","tfc.truncatedNormal","tfc.zeros","tfc.zerosLike","k","sorted","tfc.topk","values","clone","tfc.tensor1d","tfc.scalar","message","summarize","console","warn","log","images","alignCorners","tfc.image","resizeBilinear","resizeNearestNeighbor","boxes","boxInd","cropSize","method","extrapolationValue","cropAndResize","tfc.equal","tfc.notEqual","tfc.greater","tfc.greaterEqual","tfc.less","tfc.lessEqual","tfc.logicalAnd","tfc.logicalNot","tfc.logicalOr","tfc.where","tfc.matMul","tfc.transpose","matMul","transposeA","transposeB","tfc.batchNorm","tfc.localResponseNormalization","tfc.softmax","tfc.logSoftmax","tfc.sparseToDense","axis","keepDims","tfc.max","tfc.mean","tfc.min","tfc.sum","tfc.all","tfc.any","tfc.argMax","tfc.argMin","tfc.concat","tfc.gather","asType","tfc.reverse","tfc.slice","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","tfc.stridedSlice","tfc.tidy","squeezedShape","squeeze","mapped","sameShape","tfc.util","arraysEqual","tfc.stack","tfc.unstack","reps","tfc.tile","numOrSizeSplits","tfc.split","tfc.scatterND","tfc.gatherND","sparseValues","tfc.fft","tfc.ifft","tfc.rfft","tfc.irfft","tfc.cast","tfc.expandDims","tfc.squeeze","tfc.reshape","tfc.pad","blockShape","paddings","tfc.spaceToBatchND","crops","tfc.batchToSpaceND","blockSize","tfc.depthToSpace","arithmetic.executeOp","basicMath.executeOp","pred","data_1","frameId","enterFrame","exitFrame","nextIteration","name_1","tensorArray","addTensorArray","scalar","writeTensor","getTensorArray","readId","readIndex","gatherId","gatherIndices","gatherDtype","gather","scatterId","scatterIndices","scatterTensor","scatter","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","sizeId","sizeTensorArray","closeId","clearAndClose","control.executeOp","convolution.executeOp","creation.executeOp","scores","maxOutputSize","iouThreshold","scoreThreshold","nonMaxSuppressionAsync","tfc.whereAsync","tfc.setdiff1dAsync","dynamic.executeOp","evaluation.executeOp","image.executeOp","graph.executeOp","logical.executeOp","matrices.executeOp","normalization.executeOp","reduction.executeOp","sliceJoin.executeOp","spectral.executeOp","transformation.executeOp","opMapper","customExecutor","Promise","then","weightMap","tensorArrayMap","frameName","iterationId","rootContext","generateCurrentContextIds","ExecutionContext","contexts","_currentContextIds","names","contextIdforContexts","join","lastId","newFrame","unshift","splice","shift","assign","getExecutionSubgraph","usedNodes","Set","missingInputs","dynamicNode","syncInputs","seen","inputNodeNames","frontier","pop","isControlFlow","isDynamicShape","has","add","indexOf","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","Map","_outputs","_inputs","_signature","GraphExecutor","_weightMap","weightIds","sortedInputs","sort","sortedOutputs","SEPERATOR","executionInfo","outNames","inNames","weight","orderedNodes","child","every","getNodesInTopologicalOrder","mapInputs","checkInputs","checkInputShapeAndType","mapOutputs","checkOutputs","inputNodes","outputNodes","compilationKey","getCompilationKey","compiledMap","compile","set","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","checkTensorForDisposal","ids","outputNames","getTensorsForCurrentContenxt","count","executeWithControlFlow","results","outputIds","inputIds","isDisposed","_a","currentContext","added","promises","processStack","all","_b","missingOutputs","alternativeMsg","item","currentContext_1","processChildNodes","this_1","childNode","some","shape_1","match","notInGraph","normalizedName","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","modelUrl","loadOptions","GraphModel","executor","path","load","handler","requestInit","io","browserHTTPRequest","handlers","getLoadHandlers","onProgress","findIOHandler","artifacts","modelTopology","userDefinedMetadata","producer","minConsumer","decodeWeights","weightData","weightSpecs","Instance","transformGraph","convertTensorMapToTensorsMap","config","execute","normalizeInputs","normalizeOutputs","executeAsync","newMap","loadGraphModel","options","fromTFHub","endsWith","model","MathBackendWebGL","alea","require","xor128","xorwow","xorshift7","xor4096","tychei","sr","reshaped","permuted","sliceSize","uncroppedShape","imag","real","complex","getComplexWithIndex","gpgpu_util","webgl_util","tensor_util_1","Reduction","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","from","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","obj","isBuffer","checked","copy","buffer","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","y","pos","swap16","swap32","swap64","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","allManifestWeightNames","lines","ENV","registerFlag","u","define","Alea","me","mash","h","Mash","next","s0","s1","s2","impl","opts","xg","prng","int32","double","quick","XorGen","strseed","z","w","X","init","Date","pool","math","nodecrypto","width","chunks","rngname","startdenom","significance","overflow","mask","seedrandom","callback","shortseed","mixkey","flatten","prop","typ","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","navigator","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","keylen","smear","stringseed","random","ex","AddNProgram","AddNPackedProgram","BatchNormProgram","BatchNormPackedProgram","ComplexAbsProgram","offsets","CropAndResizeProgram","shader_compiler_1","CumSumProgram","shader_util","tex_util_1","DecodeMatrixProgram","DecodeMatrixPackedProgram","DepthToSpaceProgram","DiagProgram","shader_compiler_util_1","EncodeFloatProgram","EncodeFloatPackedProgram","EncodeMatrixProgram","GatherProgram","glsl_version_1","powOperator","LRNProgram","LRNGradProgram","LRNPackedProgram","MatMulPackedProgram","OneHotProgram","PadProgram","initializationValue","returnValue","ReshapePackedProgram","ResizeBilinearProgram","ResizeBilinearPackedProgram","ResizeNearestNeighborProgram","ReverseProgram","ReversePackedProgram","ScatterProgram","SelectProgram","StridedSliceProgram","newTexture","shapeRC","freeTextures","TileProgram","TransposeProgram","MathBackendCPU","tensors2D","cpu_util_1","assertNotComplex","resultValues","topk","newDimension","globals_1","nonMaxSuppSanityCheck","FromPixelsProgram","FromPixelsPackedProgram","resetSystemFetch","PlatformNode","browser_files_1","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","modelPath","BrowserLocalStorage","confusion_matrix_1","isVideo","momentum_optimizer_1","MomentumOptimizer","optimizer_constructors_1","OptimizerConstructors","nextFrame","scope","self","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","onGlobalMessage","event","source","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","task","toFlattenedOneHotPartMap","partHeatmapScores","numParts","partMapFlattened","argMax","tf.oneHot","toMaskTensor","segmentScores","threshold","tf.tidy","greater","tf.scalar","toInt","decodePartSegmentation","segmentationMask","partMapHeight","partMapWidth","flattenedMap","partNumbers","tf.range","expandDims","clipByMask2d","decodeOnlyPartSegmentation","outputStride","inputShape","tf.util","BaseModel","asBatch","preprocessInput","toFloat","results3d","predict","namedResults","nameOutputResults","heatmapScores","heatmap","sigmoid","displacementFwd","displacementBwd","segmentation","partHeatmaps","longOffsets","partOffsets","tslib_1.__extends","MobileNet","PART_NAMES","NUM_KEYPOINTS","PART_IDS","jointName","CONNECTED_PART_NAMES","jointNameA","jointNameB","getScale","padding","height","inputResolutionY","inputResolutionX","padT","padB","getOffsetPoint","keypoint","getImageCoords","part","heatmapX","heatmapY","clamp","addVectors","computeDistance","embedding","pose","minPartScore","distance","numKpt","keypoints","score","position","getEmbedding","location","keypointIndex","convertToPosition","outputResolutionX","refineSteps","newLocation","nn","dy","dx","newPos","nn_1","matchEmbeddingToInstance","poses","numKptForMatching","_c","padL","scaleX","scaleY","embed","pair","round","convertToPositionInOuput","keypointsIndex","kMin","kMinDist","dist","getOutputResolution","dataArrays","decodeMultipleMasksWebGl","posesAboveScore","minKptScore","maxNumPeople","inHeight","inWidth","origHeight","origWidth","outHeight","outWidth","shapedLongOffsets","poseVals","Float32Array","poseOffset","kp","posesTensor","tf.tensor","program","variableNames","outputShape","userCode","tf.backend","compileAndRun","isWebGlBackend","getBackend","decodePersonInstanceMasks","minPoseScore","minKeypointScore","personSegmentations","masksTensor","_","equal","toPersonKSegmentation","personSegmentationsData","segmentationsData","longOffsetsData","decodeMultipleMasksCPU","decodePersonInstancePartMasks","partSegmentation","partSegmentations","bodyParts","toPersonKPartSegmentation","partSegmentationsByPersonData","partSegmentaionData","partSegmentaion","Int32Array","decodeMultiplePartMasksCPU","half","getElementValue","priorityQueue","numberOfElements","MaxHeap","swim","exchange","sink","less","getValueAt","scoreIsMaximumInLocalWindow","keypointId","localMaximumRadius","localMaximum","yStart","yEnd","yCurrent","xStart","xEnd","xCurrent","parentChildrenTuples","POSE_CHAIN","parentJoinName","childJoinName","parentToChildEdges","childToParentEdges","getStridedIndexNearPoint","point","traverseToTargetKeypoint","edgeId","sourceKeypoint","targetKeypointId","scoresBuffer","displacements","offsetRefineStep","displacement","numEdges","getDisplacement","targetKeypoint","targetKeypointIndices","offsetPoint","targetKeyPointIndices","decodePose","root","displacementsFwd","displacementsBwd","instanceKeypoints","rootPart","rootScore","rootPoint","edge","sourceKeypointId","withinNmsRadiusOfCorrespondingPoint","squaredNmsRadius","correspondingKeypoint","y1","x1","y2","x2","squaredDistance","getInstanceScore","existingPoses","kLocalMaximumRadius","decodeMultiplePoses","offsetsBuffer","displacementsFwdBuffer","displacementsBwdBuffer","maxPoseDetections","nmsRadius","numKeypoints","enqueue","buildPartWithScoreQueue","empty","dequeue","imageNetMean","ResNet","RESNET50_BASE_URL","MOBILENET_BASE_URL","getInputSize","HTMLCanvasElement","HTMLImageElement","graphJson","offsetHeight","offsetWidth","getSizeFromImageLikeElement","ImageData","HTMLVideoElement","videoHeight","videoWidth","getSizeFromVideoElement","tf.Tensor","toValidInputResolution","inputResolution","resolution","isValidInputResolution","INTERNAL_RESOLUTION_STRING_OPTIONS","low","medium","high","full","INTERNAL_RESOLUTION_PERCENTAGES","MIN_INTERNAL_RESOLUTION","MAX_INTERNAL_RESOLUTION","toInputResolutionHeightAndWidth","internalResolution","inputHeight","inputWidth","internalResolutionPercentage","toInternalResolutionPercentage","scaleAndCropToInputTensorShape","applySigmoidActivation","inputTensorHeight","inputTensorWidth","resizedAndPaddedHeight","resizedAndPaddedWidth","_d","_e","padR","inResizedAndPadded","resizedAndPadded","originalHeight","originalWidth","tf.image","removePaddingAndResizeBack","padAndResizeTo","targetH","targetW","targetAspect","resized","imageTensor","tf.browser","fromPixels","toInputTensor","tf.pad3d","top","left","right","bottom","toTensorBuffers3D","scaleAndFlipPoses","flipHorizontal","inputResolutionHeight","inputResolutionWidth","scaledPoses","offsetY","offsetX","scalePose","scalePoses","imageWidth","flipPoseHorizontal","flipPosesHorizontal","MOBILENET_V1_CONFIG","architecture","quantBytes","multiplier","VALID_ARCHITECTURE","VALID_STRIDE","MobileNetV1","ResNet50","VALID_MULTIPLIER","VALID_QUANT_BYTES","PERSON_INFERENCE_CONFIG","segmentationThreshold","maxDetections","MULTI_PERSON_INSTANCE_INFERENCE_CONFIG","validatePersonInferenceConfig","validateMultiPersonInstanceInferenceConfig","net","baseModel","BodyPix","segmentLogits","partHeatmapLogits","internalResolutionHeightAndWidth","APPLY_SIGMOID_ACTIVATION","segmentPersonActivation","scoresBuf","offsetsBuf","displacementsFwdBuf","displacementsBwdBuf","FLIP_POSES_AFTER_SCALING","allPoses","scaledLongOffsets","heatmapScoresRaw","offsetsRaw","displacementFwdRaw","displacementBwdRaw","instanceMasks","segmentPersonPartsActivation","scaledSegmentScores","scaledPartSegmentationScores","loadMobileNet","tf","url","toStr","1","0.75","0.5","mobileNetSavedModel","tfconv.loadGraphModel","graphModel","mobilenet","loadResNet","resNet50SavedModel","resnet","validateModelConfig","_slicedToArray","iterator","_n","_s","_i","done","err","proxyMarker","createEndpoint","releaseProxy","throwSet","WeakSet","transferHandlers","canHandle","expose","deserialize","port","ep","createProxy","isProxyReleased","proxy","Proxy","_target","throwIfProxyReleased","requestResponseMessage","closeEndPoint","fromWireValue","rawValue","toWireValue","transferables","_thisArg","rawArgumentList","last","processArguments","argumentList","wrap","isError","serialized","ev","parent","transfer","resolve","catch","wireValue","removeEventListener","endpoint","constructor","isMessagePort","isReleased","processed","transferCache","WeakMap","transfers","serialize","msg","MAX_SAFE_INTEGER","ChildWorker","number","inputCanvas","bodyPixLoading","bodyPix","OffscreenCanvas","loadBodyPix","_getPersonSeg","theshold","debugFlag","getContext","drawImage","imageData","getImageData","segmentPerson","personSeg"],"mappings":"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","file":"fddc3a6c201cc111b2ea.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 226);\n","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview\n * @suppress {partialAlias} Optimization disabled due to passing the module\n * object into a function below:\n *\n *   import * as ops from './ops/ops';\n *   setOpHandler(ops);\n */\n// Engine is the global singleton that needs to be initialized before the rest\n// of the app.\nrequire(\"./engine\");\n// Register backend-agnostic flags.\nrequire(\"./flags\");\n// backend_cpu.ts and backend_webgl.ts are standalone files and should be\n// explicitly included here.\nrequire(\"./backends/webgl/backend_webgl\");\nrequire(\"./backends/cpu/backend_cpu\");\n// Import all kernels from cpu.\nrequire(\"./backends/cpu/all_kernels\");\n// Import all kernels from webgl.\nrequire(\"./backends/webgl/all_kernels\");\nrequire(\"./platforms/platform_browser\");\nrequire(\"./platforms/platform_node\");\nvar backend_util = require(\"./backends/backend_util\");\nexports.backend_util = backend_util;\n// Serialization.\nvar io = require(\"./io/io\");\nexports.io = io;\nvar math = require(\"./math\");\nexports.math = math;\nvar browser = require(\"./ops/browser\");\nexports.browser = browser;\nvar slice_util = require(\"./ops/slice_util\");\nexports.slice_util = slice_util;\nvar serialization = require(\"./serialization\");\nexports.serialization = serialization;\nvar tensor_1 = require(\"./tensor\");\nvar tensor_util = require(\"./tensor_util\");\nexports.tensor_util = tensor_util;\nvar test_util = require(\"./test_util\");\nexports.test_util = test_util;\nvar util = require(\"./util\");\nexports.util = util;\nvar version_1 = require(\"./version\");\nexports.version_core = version_1.version;\nvar webgl = require(\"./webgl\");\nexports.webgl = webgl;\n// Optimizers.\nvar adadelta_optimizer_1 = require(\"./optimizers/adadelta_optimizer\");\nexports.AdadeltaOptimizer = adadelta_optimizer_1.AdadeltaOptimizer;\nvar adagrad_optimizer_1 = require(\"./optimizers/adagrad_optimizer\");\nexports.AdagradOptimizer = adagrad_optimizer_1.AdagradOptimizer;\nvar adam_optimizer_1 = require(\"./optimizers/adam_optimizer\");\nexports.AdamOptimizer = adam_optimizer_1.AdamOptimizer;\nvar adamax_optimizer_1 = require(\"./optimizers/adamax_optimizer\");\nexports.AdamaxOptimizer = adamax_optimizer_1.AdamaxOptimizer;\nvar momentum_optimizer_1 = require(\"./optimizers/momentum_optimizer\");\nexports.MomentumOptimizer = momentum_optimizer_1.MomentumOptimizer;\nvar optimizer_1 = require(\"./optimizers/optimizer\");\nexports.Optimizer = optimizer_1.Optimizer;\nvar rmsprop_optimizer_1 = require(\"./optimizers/rmsprop_optimizer\");\nexports.RMSPropOptimizer = rmsprop_optimizer_1.RMSPropOptimizer;\nvar sgd_optimizer_1 = require(\"./optimizers/sgd_optimizer\");\nexports.SGDOptimizer = sgd_optimizer_1.SGDOptimizer;\nvar tensor_2 = require(\"./tensor\");\nexports.Tensor = tensor_2.Tensor;\nexports.TensorBuffer = tensor_2.TensorBuffer;\nexports.Variable = tensor_2.Variable;\nvar types_1 = require(\"./types\");\nexports.Rank = types_1.Rank;\n__export(require(\"./ops/ops\"));\nvar loss_ops_1 = require(\"./ops/loss_ops\");\nexports.Reduction = loss_ops_1.Reduction;\n__export(require(\"./train\"));\n__export(require(\"./globals\"));\n__export(require(\"./kernel_registry\"));\nvar gradients_1 = require(\"./gradients\");\nexports.customGrad = gradients_1.customGrad;\nexports.grad = gradients_1.grad;\nexports.grads = gradients_1.grads;\nexports.valueAndGrad = gradients_1.valueAndGrad;\nexports.valueAndGrads = gradients_1.valueAndGrads;\nexports.variableGrads = gradients_1.variableGrads;\nvar environment_1 = require(\"./environment\");\nexports.Environment = environment_1.Environment;\nexports.env = environment_1.env;\nexports.ENV = environment_1.ENV;\n// Top-level method exports.\nvar browser_util_1 = require(\"./browser_util\");\nexports.nextFrame = browser_util_1.nextFrame;\n// Backend specific.\nvar backend_1 = require(\"./backends/backend\");\nexports.KernelBackend = backend_1.KernelBackend;\nexports.DataStorage = backend_1.DataStorage;\nvar ops = require(\"./ops/ops\");\ntensor_1.setOpHandler(ops);\n//# sourceMappingURL=index.js.map","import * as tf from '@tensorflow/tfjs-core';\n\nimport {BodyPixInput, BodyPixOutputStride, Padding} from './types';\nimport {Pose, TensorBuffer3D} from './types';\nimport {BodyPixInternalResolution} from './types';\n\nfunction getSizeFromImageLikeElement(input: HTMLImageElement|\n                                     HTMLCanvasElement): [number, number] {\n  if (input.offsetHeight !== 0 && input.offsetWidth !== 0) {\n    return [input.offsetHeight, input.offsetWidth];\n  } else if (input.height != null && input.width != null) {\n    return [input.height, input.width];\n  } else {\n    throw new Error(\n        `HTMLImageElement must have height and width attributes set.`);\n  }\n}\n\nfunction getSizeFromVideoElement(input: HTMLVideoElement): [number, number] {\n  if (input.height != null && input.width != null) {\n    // Prioritizes user specified height and width.\n    return [input.height, input.width];\n  } else {\n    return [input.videoHeight, input.videoWidth];\n  }\n}\n\nexport function getInputSize(input: BodyPixInput): [number, number] {\n  if ((typeof (HTMLCanvasElement) !== 'undefined' &&\n       input instanceof HTMLCanvasElement) ||\n      (typeof (HTMLImageElement) !== 'undefined' &&\n       input instanceof HTMLImageElement)) {\n    return getSizeFromImageLikeElement(input);\n  } else if (typeof (ImageData) !== 'undefined' && input instanceof ImageData) {\n    return [input.height, input.width];\n  } else if (\n      typeof (HTMLVideoElement) !== 'undefined' &&\n      input instanceof HTMLVideoElement) {\n    return getSizeFromVideoElement(input);\n  } else if (input instanceof tf.Tensor) {\n    return [input.shape[0], input.shape[1]];\n  } else {\n    throw new Error(`error: Unknown input type: ${input}.`);\n  }\n}\n\nfunction isValidInputResolution(\n    resolution: number, outputStride: number): boolean {\n  return (resolution - 1) % outputStride === 0;\n}\n\nexport function toValidInputResolution(\n    inputResolution: number, outputStride: BodyPixOutputStride): number {\n  if (isValidInputResolution(inputResolution, outputStride)) {\n    return inputResolution;\n  }\n\n  return Math.floor(inputResolution / outputStride) * outputStride + 1;\n}\n\nconst INTERNAL_RESOLUTION_STRING_OPTIONS = {\n  low: 'low',\n  medium: 'medium',\n  high: 'high',\n  full: 'full'\n};\n\nconst INTERNAL_RESOLUTION_PERCENTAGES = {\n  [INTERNAL_RESOLUTION_STRING_OPTIONS.low]: 0.25,\n  [INTERNAL_RESOLUTION_STRING_OPTIONS.medium]: 0.5,\n  [INTERNAL_RESOLUTION_STRING_OPTIONS.high]: 0.75,\n  [INTERNAL_RESOLUTION_STRING_OPTIONS.full]: 1.0\n};\n\nconst MIN_INTERNAL_RESOLUTION = 0.1;\nconst MAX_INTERNAL_RESOLUTION = 2.0;\n\nfunction toInternalResolutionPercentage(\n    internalResolution: BodyPixInternalResolution): number {\n  if (typeof internalResolution === 'string') {\n    const result = INTERNAL_RESOLUTION_PERCENTAGES[internalResolution];\n\n    tf.util.assert(\n        typeof result === 'number',\n        () => `string value of inputResolution must be one of ${\n            Object.values(INTERNAL_RESOLUTION_STRING_OPTIONS)\n                .join(',')} but was ${internalResolution}.`);\n    return result;\n  } else {\n    tf.util.assert(\n        typeof internalResolution === 'number' &&\n            internalResolution <= MAX_INTERNAL_RESOLUTION &&\n            internalResolution >= MIN_INTERNAL_RESOLUTION,\n        () =>\n            `inputResolution must be a string or number between ${\n                MIN_INTERNAL_RESOLUTION} and ${MAX_INTERNAL_RESOLUTION}, but ` +\n            `was ${internalResolution}`);\n\n    return internalResolution;\n  }\n}\n\nexport function toInputResolutionHeightAndWidth(\n    internalResolution: BodyPixInternalResolution,\n    outputStride: BodyPixOutputStride,\n    [inputHeight, inputWidth]: [number, number]): [number, number] {\n  const internalResolutionPercentage =\n      toInternalResolutionPercentage(internalResolution);\n\n  return [\n    toValidInputResolution(\n        inputHeight * internalResolutionPercentage, outputStride),\n    toValidInputResolution(\n        inputWidth * internalResolutionPercentage, outputStride)\n  ];\n}\n\nexport function toInputTensor(input: BodyPixInput) {\n  return input instanceof tf.Tensor ? input : tf.browser.fromPixels(input);\n}\n\nexport function resizeAndPadTo(\n    imageTensor: tf.Tensor3D, [targetH, targetW]: [number, number],\n    flipHorizontal = false): {\n  resizedAndPadded: tf.Tensor3D,\n  paddedBy: [[number, number], [number, number]]\n} {\n  const [height, width] = imageTensor.shape;\n\n  const targetAspect = targetW / targetH;\n  const aspect = width / height;\n\n  let resizeW: number;\n  let resizeH: number;\n  let padL: number;\n  let padR: number;\n  let padT: number;\n  let padB: number;\n\n  if (aspect > targetAspect) {\n    // resize to have the larger dimension match the shape.\n    resizeW = targetW;\n    resizeH = Math.ceil(resizeW / aspect);\n\n    const padHeight = targetH - resizeH;\n    padL = 0;\n    padR = 0;\n    padT = Math.floor(padHeight / 2);\n    padB = targetH - (resizeH + padT);\n  } else {\n    resizeH = targetH;\n    resizeW = Math.ceil(targetH * aspect);\n\n    const padWidth = targetW - resizeW;\n    padL = Math.floor(padWidth / 2);\n    padR = targetW - (resizeW + padL);\n    padT = 0;\n    padB = 0;\n  }\n\n  const resizedAndPadded = tf.tidy(() => {\n    // resize to have largest dimension match image\n    let resized: tf.Tensor3D;\n    if (flipHorizontal) {\n      resized = imageTensor.reverse(1).resizeBilinear([resizeH, resizeW]);\n    } else {\n      resized = imageTensor.resizeBilinear([resizeH, resizeW]);\n    }\n\n    const padded = tf.pad3d(resized, [[padT, padB], [padL, padR], [0, 0]]);\n\n    return padded;\n  });\n\n  return {resizedAndPadded, paddedBy: [[padT, padB], [padL, padR]]};\n}\n\nexport function scaleAndCropToInputTensorShape(\n    tensor: tf.Tensor3D,\n    [inputTensorHeight, inputTensorWidth]: [number, number],\n    [resizedAndPaddedHeight, resizedAndPaddedWidth]: [number, number],\n    [[padT, padB], [padL, padR]]: [[number, number], [number, number]],\n    applySigmoidActivation = false): tf.Tensor3D {\n  return tf.tidy(() => {\n    let inResizedAndPadded = tensor.resizeBilinear(\n        [resizedAndPaddedHeight, resizedAndPaddedWidth], true);\n\n    if (applySigmoidActivation) {\n      inResizedAndPadded = inResizedAndPadded.sigmoid();\n    }\n\n    return removePaddingAndResizeBack(\n        inResizedAndPadded, [inputTensorHeight, inputTensorWidth],\n        [[padT, padB], [padL, padR]]);\n  });\n}\n\nexport function removePaddingAndResizeBack(\n    resizedAndPadded: tf.Tensor3D,\n    [originalHeight, originalWidth]: [number, number],\n    [[padT, padB], [padL, padR]]: [[number, number], [number, number]]):\n    tf.Tensor3D {\n  return tf.tidy(() => {\n    return tf.image\n        .cropAndResize(\n            resizedAndPadded.expandDims(), [[\n              padT / (originalHeight + padT + padB - 1.0),\n              padL / (originalWidth + padL + padR - 1.0),\n              (padT + originalHeight - 1.0) /\n                  (originalHeight + padT + padB - 1.0),\n              (padL + originalWidth - 1.0) / (originalWidth + padL + padR - 1.0)\n            ]],\n            [0], [originalHeight, originalWidth])\n        .squeeze([0]);\n  });\n}\n\nexport function resize2d(\n    tensor: tf.Tensor2D, resolution: [number, number],\n    nearestNeighbor?: boolean): tf.Tensor2D {\n  return tf.tidy(() => {\n    return tensor.expandDims<tf.Rank.R3>(2)\n        .resizeBilinear(resolution, nearestNeighbor)\n        .squeeze();\n  });\n}\n\nexport function padAndResizeTo(\n    input: BodyPixInput, [targetH, targetW]: [number, number]):\n    {resized: tf.Tensor3D, padding: Padding} {\n  const [height, width] = getInputSize(input);\n  const targetAspect = targetW / targetH;\n  const aspect = width / height;\n  let [padT, padB, padL, padR] = [0, 0, 0, 0];\n  if (aspect < targetAspect) {\n    // pads the width\n    padT = 0;\n    padB = 0;\n    padL = Math.round(0.5 * (targetAspect * height - width));\n    padR = Math.round(0.5 * (targetAspect * height - width));\n  } else {\n    // pads the height\n    padT = Math.round(0.5 * ((1.0 / targetAspect) * width - height));\n    padB = Math.round(0.5 * ((1.0 / targetAspect) * width - height));\n    padL = 0;\n    padR = 0;\n  }\n\n  const resized: tf.Tensor3D = tf.tidy(() => {\n    let imageTensor = toInputTensor(input);\n    imageTensor = tf.pad3d(imageTensor, [[padT, padB], [padL, padR], [0, 0]]);\n\n    return imageTensor.resizeBilinear([targetH, targetW]);\n  });\n\n  return {resized, padding: {top: padT, left: padL, right: padR, bottom: padB}};\n}\n\nexport async function toTensorBuffers3D(tensors: tf.Tensor3D[]):\n    Promise<TensorBuffer3D[]> {\n  return Promise.all(tensors.map(tensor => tensor.buffer()));\n}\n\nexport function scalePose(\n    pose: Pose, scaleY: number, scaleX: number, offsetY = 0,\n    offsetX = 0): Pose {\n  return {\n    score: pose.score,\n    keypoints: pose.keypoints.map(({score, part, position}) => ({\n                                    score,\n                                    part,\n                                    position: {\n                                      x: position.x * scaleX + offsetX,\n                                      y: position.y * scaleY + offsetY\n                                    }\n                                  }))\n  };\n}\n\nexport function scalePoses(\n    poses: Pose[], scaleY: number, scaleX: number, offsetY = 0, offsetX = 0) {\n  if (scaleX === 1 && scaleY === 1 && offsetY === 0 && offsetX === 0) {\n    return poses;\n  }\n  return poses.map(pose => scalePose(pose, scaleY, scaleX, offsetY, offsetX));\n}\n\nexport function flipPoseHorizontal(pose: Pose, imageWidth: number): Pose {\n  return {\n    score: pose.score,\n    keypoints: pose.keypoints.map(\n        ({score, part, position}) => ({\n          score,\n          part,\n          position: {x: imageWidth - 1 - position.x, y: position.y}\n        }))\n  };\n}\n\nexport function flipPosesHorizontal(poses: Pose[], imageWidth: number) {\n  if (imageWidth <= 0) {\n    return poses;\n  }\n  return poses.map(pose => flipPoseHorizontal(pose, imageWidth));\n}\n\nexport function scaleAndFlipPoses(\n    poses: Pose[], [height, width]: [number, number],\n    [inputResolutionHeight, inputResolutionWidth]: [number, number],\n    padding: Padding, flipHorizontal: boolean): Pose[] {\n  const scaleY =\n      (height + padding.top + padding.bottom) / (inputResolutionHeight);\n  const scaleX =\n      (width + padding.left + padding.right) / (inputResolutionWidth);\n\n  const scaledPoses =\n      scalePoses(poses, scaleY, scaleX, -padding.top, -padding.left);\n\n  if (flipHorizontal) {\n    return flipPosesHorizontal(scaledPoses, width);\n  } else {\n    return scaledPoses;\n  }\n}\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"./environment\");\nvar kernel_registry_1 = require(\"./kernel_registry\");\nvar profiler_1 = require(\"./profiler\");\nvar tape_1 = require(\"./tape\");\nvar tensor_1 = require(\"./tensor\");\nvar tensor_util_1 = require(\"./tensor_util\");\nvar util = require(\"./util\");\nvar util_1 = require(\"./util\");\nvar EngineState = /** @class */ (function () {\n    function EngineState() {\n        // Public since optimizers will use it.\n        this.registeredVariables = {};\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numStringTensors = 0;\n        this.numDataBuffers = 0;\n        // Number of nested tf.grad() statements when computing higher-order\n        // gradients. E.g. `1` for first-order gradients and `2` for second-order\n        // gradients. Used to track if the tape should be removed after a backprop.\n        this.gradientDepth = 0;\n        // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n        // off the tape.\n        this.kernelDepth = 0;\n        this.scopeStack = [];\n        /**\n         * Keeps track of the number of data moves during a kernel execution. We\n         * maintain a stack since kernels can call other kernels, recursively.\n         */\n        this.numDataMovesStack = [];\n        this.nextScopeId = 0;\n        this.tensorInfo = new WeakMap();\n        this.profiling = false;\n        this.activeProfile = { newBytes: 0, newTensors: 0, peakBytes: 0, kernels: [], result: null };\n    }\n    EngineState.prototype.dispose = function () {\n        for (var variableName in this.registeredVariables) {\n            this.registeredVariables[variableName].dispose();\n        }\n    };\n    return EngineState;\n}());\nvar Engine = /** @class */ (function () {\n    function Engine(ENV) {\n        this.ENV = ENV;\n        this.registry = {};\n        this.registryFactory = {};\n        this.pendingBackendInitId = 0;\n        this.state = new EngineState();\n    }\n    Engine.prototype.ready = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var sortedBackends, i, backendName, success;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.pendingBackendInit != null) {\n                            return [2 /*return*/, this.pendingBackendInit.then(function () { })];\n                        }\n                        if (this.backendInstance != null) {\n                            return [2 /*return*/];\n                        }\n                        sortedBackends = this.getSortedBackends();\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < sortedBackends.length)) return [3 /*break*/, 5];\n                        backendName = sortedBackends[i];\n                        return [4 /*yield*/, this.initializeBackend(backendName).success];\n                    case 2:\n                        success = _a.sent();\n                        if (!success) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.setBackend(backendName)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 4:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 5: throw new Error(\"Could not initialize any backends, all backend initializations \" +\n                        \"failed.\");\n                }\n            });\n        });\n    };\n    Object.defineProperty(Engine.prototype, \"backend\", {\n        get: function () {\n            if (this.pendingBackendInit != null) {\n                throw new Error(\"Backend '\" + this.backendName + \"' has not yet been initialized. Make \" +\n                    \"sure to await tf.ready() or await tf.setBackend() before calling \" +\n                    \"other methods\");\n            }\n            if (this.backendInstance == null) {\n                var _a = this.initializeBackendsAndReturnBest(), name_1 = _a.name, asyncInit = _a.asyncInit;\n                if (asyncInit) {\n                    throw new Error(\"The highest priority backend '\" + name_1 + \"' has not yet been \" +\n                        \"initialized. Make sure to await tf.ready() or \" +\n                        \"await tf.setBackend() before calling other methods\");\n                }\n                this.setBackend(name_1);\n            }\n            return this.backendInstance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Engine.prototype.backendNames = function () {\n        return Object.keys(this.registryFactory);\n    };\n    Engine.prototype.findBackend = function (backendName) {\n        if (!(backendName in this.registry)) {\n            // If the backend hasn't been initialized but we have a registry entry for\n            // it, initialize it and return it.\n            if (backendName in this.registryFactory) {\n                var asyncInit = this.initializeBackend(backendName).asyncInit;\n                if (asyncInit) {\n                    // Backend is not ready yet.\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        return this.registry[backendName];\n    };\n    Engine.prototype.findBackendFactory = function (backendName) {\n        if (!(backendName in this.registryFactory)) {\n            return null;\n        }\n        return this.registryFactory[backendName].factory;\n    };\n    Engine.prototype.registerBackend = function (backendName, factory, priority) {\n        if (priority === void 0) { priority = 1; }\n        if (backendName in this.registryFactory) {\n            console.warn(backendName + \" backend was already registered. \" +\n                \"Reusing existing backend factory.\");\n            return false;\n        }\n        this.registryFactory[backendName] = { factory: factory, priority: priority };\n        return true;\n    };\n    Engine.prototype.setBackend = function (backendName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, success, asyncInit, result, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (this.registryFactory[backendName] == null) {\n                            throw new Error(\"Backend name '\" + backendName + \"' not found in registry\");\n                        }\n                        this.backendName = backendName;\n                        if (!(this.registry[backendName] == null)) return [3 /*break*/, 4];\n                        this.backendInstance = null;\n                        _a = this.initializeBackend(backendName), success = _a.success, asyncInit = _a.asyncInit;\n                        if (!asyncInit) return [3 /*break*/, 2];\n                        return [4 /*yield*/, success];\n                    case 1:\n                        _b = _c.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _b = success;\n                        _c.label = 3;\n                    case 3:\n                        result = _b;\n                        if (!result) {\n                            return [2 /*return*/, false];\n                        }\n                        _c.label = 4;\n                    case 4:\n                        this.backendInstance = this.registry[backendName];\n                        this.setupRegisteredKernels();\n                        // Reset the profiler.\n                        this.profiler = new profiler_1.Profiler(this.backendInstance);\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Engine.prototype.setupRegisteredKernels = function () {\n        var _this = this;\n        var kernels = kernel_registry_1.getKernelsForBackend(this.backendName);\n        kernels.forEach(function (kernel) {\n            if (kernel.setupFunc != null) {\n                kernel.setupFunc(_this.backendInstance);\n            }\n        });\n    };\n    Engine.prototype.disposeRegisteredKernels = function (backendName) {\n        var _this = this;\n        var kernels = kernel_registry_1.getKernelsForBackend(backendName);\n        kernels.forEach(function (kernel) {\n            if (kernel.disposeFunc != null) {\n                kernel.disposeFunc(_this.registry[backendName]);\n            }\n        });\n    };\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n    Engine.prototype.initializeBackend = function (backendName) {\n        var _this = this;\n        var registryFactoryEntry = this.registryFactory[backendName];\n        if (registryFactoryEntry == null) {\n            throw new Error(\"Cannot initialize backend \" + backendName + \", no registration found.\");\n        }\n        try {\n            var backend = registryFactoryEntry.factory();\n            // Test if the factory returns a promise.\n            if (Promise.resolve(backend) === backend) {\n                var promiseId_1 = ++this.pendingBackendInitId;\n                var success = backend\n                    .then(function (backendInstance) {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId_1 < _this.pendingBackendInitId) {\n                        return false;\n                    }\n                    _this.registry[backendName] = backendInstance;\n                    _this.pendingBackendInit = null;\n                    return true;\n                })\n                    .catch(function (err) {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId_1 < _this.pendingBackendInitId) {\n                        return false;\n                    }\n                    _this.pendingBackendInit = null;\n                    console.warn(\"Initialization of backend \" + backendName + \" failed\");\n                    console.warn(err.stack || err.message);\n                    return false;\n                });\n                this.pendingBackendInit = success;\n                return { success: success, asyncInit: true };\n            }\n            else {\n                this.registry[backendName] = backend;\n                return { success: true, asyncInit: false };\n            }\n        }\n        catch (err) {\n            console.warn(\"Initialization of backend \" + backendName + \" failed\");\n            console.warn(err.stack || err.message);\n            return { success: false, asyncInit: false };\n        }\n    };\n    Engine.prototype.removeBackend = function (backendName) {\n        if (!(backendName in this.registryFactory)) {\n            throw new Error(backendName + \" backend not found in registry\");\n        }\n        if (this.backendName === backendName && this.pendingBackendInit != null) {\n            // There is a pending promise of the backend we want to remove. Make it\n            // obsolete.\n            this.pendingBackendInitId++;\n        }\n        if (backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        delete this.registryFactory[backendName];\n        // Unset the backend if it is active.\n        if (this.backendName === backendName) {\n            this.pendingBackendInit = null;\n            this.backendName = null;\n            this.backendInstance = null;\n        }\n    };\n    Engine.prototype.getSortedBackends = function () {\n        var _this = this;\n        if (Object.keys(this.registryFactory).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        return Object.keys(this.registryFactory).sort(function (a, b) {\n            // Highest priority comes first.\n            return _this.registryFactory[b].priority -\n                _this.registryFactory[a].priority;\n        });\n    };\n    Engine.prototype.initializeBackendsAndReturnBest = function () {\n        var sortedBackends = this.getSortedBackends();\n        for (var i = 0; i < sortedBackends.length; i++) {\n            var backendName = sortedBackends[i];\n            var _a = this.initializeBackend(backendName), success = _a.success, asyncInit = _a.asyncInit;\n            if (asyncInit || success) {\n                return { name: backendName, asyncInit: asyncInit };\n            }\n        }\n        throw new Error(\"Could not initialize any backends, all backend initializations \" +\n            \"failed.\");\n    };\n    Engine.prototype.moveData = function (destBackend, dataId) {\n        var info = this.state.tensorInfo.get(dataId);\n        var srcBackend = info.backend;\n        var values = this.readSync(dataId);\n        // Delete the tensor from the old backend and move it to the new\n        // backend.\n        srcBackend.disposeData(dataId);\n        info.backend = destBackend;\n        destBackend.move(dataId, values, info.shape, info.dtype);\n        if (this.shouldCheckForMemLeaks()) {\n            // Track the number of moves during a kernel execution to correctly\n            // detect memory leaks.\n            this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n        }\n    };\n    Engine.prototype.tidy = function (nameOrFn, fn) {\n        var _this = this;\n        var name = null;\n        if (fn == null) {\n            // Called with only 1 argument.\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            // Called with 2 arguments.\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n            // TODO(nsthorat,smilkov): Do operation logging and performance\n            // profiling.\n        }\n        var result;\n        return this.scopedRun(function () { return _this.startScope(name); }, function () { return _this.endScope(result); }, function () {\n            result = fn();\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            return result;\n        });\n    };\n    Engine.prototype.scopedRun = function (start, end, f) {\n        start();\n        try {\n            var res = f();\n            end();\n            return res;\n        }\n        catch (ex) {\n            end();\n            throw ex;\n        }\n    };\n    Engine.prototype.nextTensorId = function () {\n        return Engine.nextTensorId++;\n    };\n    Engine.prototype.nextVariableId = function () {\n        return Engine.nextVariableId++;\n    };\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     *\n     * This method will go away once all kernels are modularized since we won't\n     * need to turn off the tape inside runKernel().\n     */\n    Engine.prototype.clone = function (x) {\n        var y = this.makeTensorFromDataId(x.dataId, x.shape, x.dtype);\n        var inputs = { x: x };\n        var grad = function (dy) { return ({ x: function () { return dy.toFloat(); } }); };\n        var saved = [];\n        this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved);\n        return y;\n    };\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n    Engine.prototype.runKernel = function (kernelName, inputs, attrs, inputsToSave, outputsToSave) {\n        var forwardFunc = null;\n        var backwardsFunc = null;\n        // Call runKernel as a stop-gap until we modularize all kernels.\n        // Once we modularize all kernels, we will remove the existing\n        // `runKernelFunc`.\n        return this.runKernelFunc(forwardFunc, inputs, backwardsFunc, kernelName, attrs, inputsToSave, outputsToSave);\n    };\n    Engine.prototype.shouldCheckForMemLeaks = function () {\n        return this.ENV.getBool('IS_TEST');\n    };\n    Engine.prototype.checkKernelForMemLeak = function (scopeName, numDataIdsBefore, outInfos) {\n        var numDataIdsAfter = this.backend.numDataIds();\n        // Count the number of data ids associated with the result of the kernel.\n        var numOutputDataIds = 0;\n        outInfos.forEach(function (info) {\n            // Complex numbers allocate 3 data ids, one for 'real', one for\n            // 'imaginary', and one for the container that holds the former two.\n            numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n        });\n        // Account for the number of moves during kernel execution. A \"data move\"\n        // can happen in the middle of a kernel execution, placing a new (key,value)\n        // pair in the data storage. Since data moves have net zero effect (we\n        // always remove the data from the old backend), we have to cancel them out\n        // when detecting memory leaks.\n        var numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n        var dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n        if (dataIdsLeaked > 0) {\n            throw new Error(\"Backend '\" + this.backendName + \"' has an internal memory leak \" +\n                (\"(\" + dataIdsLeaked + \" data ids) after running '\" + scopeName + \"'\"));\n        }\n    };\n    /**\n     * @deprecated Use `runKernel` for newly added kernels. Keep using this method\n     *     only for kernels that are not yet fully modularized.\n     */\n    Engine.prototype.runKernelFunc = function (forwardFunc, inputs, backwardsFunc, kernelName, attrs, inputsToSave, outputsToSave) {\n        var _this = this;\n        if (inputsToSave === void 0) { inputsToSave = []; }\n        if (outputsToSave === void 0) { outputsToSave = []; }\n        var outputs;\n        var saved = [];\n        var isTapeOn = this.isTapeOn();\n        var scopeName = this.state.activeScope != null ? this.state.activeScope.name : '';\n        var saveFunc = function (tensors) {\n            // Do not save unless we are recording to the tape. Otherwise it would\n            // cause a mem leak since we would never run backprop, which disposes\n            // the kept tensors.\n            if (!isTapeOn) {\n                return;\n            }\n            saved = tensors.map(function (tensor) { return _this.keep(_this.clone(tensor)); });\n        };\n        var startingBytecount = this.state.numBytes;\n        var startingNumTensors = this.state.numTensors;\n        if (this.shouldCheckForMemLeaks()) {\n            this.state.numDataMovesStack.push(0);\n        }\n        var kernelFunc;\n        var kernel = kernel_registry_1.getKernel(kernelName, this.backendName);\n        var out;\n        if (kernel != null) {\n            kernelFunc = function () {\n                var numDataIdsBefore = _this.backend.numDataIds();\n                out = kernel.kernelFunc({ inputs: inputs, attrs: attrs, backend: _this.backend });\n                var outInfos = Array.isArray(out) ? out : [out];\n                if (_this.shouldCheckForMemLeaks()) {\n                    _this.checkKernelForMemLeak(scopeName, numDataIdsBefore, outInfos);\n                }\n                var outTensors = outInfos.map(function (_a) {\n                    var dataId = _a.dataId, shape = _a.shape, dtype = _a.dtype;\n                    return _this.makeTensorFromDataId(dataId, shape, dtype);\n                });\n                var outsToSave = outTensors.filter(function (_, i) { return outputsToSave[i]; });\n                // Save the inputs and outputs.\n                saveFunc(inputsToSave.slice().concat(outsToSave));\n                return outTensors;\n            };\n        }\n        else {\n            kernelFunc = function () {\n                var numDataIdsBefore = _this.backend.numDataIds();\n                out = _this.tidy(function () { return forwardFunc(_this.backend, saveFunc); });\n                var outs = (Array.isArray(out) ? out : [out]);\n                if (_this.shouldCheckForMemLeaks()) {\n                    _this.checkKernelForMemLeak(scopeName, numDataIdsBefore, outs);\n                }\n                return outs;\n            };\n        }\n        // Stop recording to a tape when running a kernel.\n        this.scopedRun(function () { return _this.state.kernelDepth++; }, function () { return _this.state.kernelDepth--; }, function () {\n            if (!_this.ENV.getBool('DEBUG')) {\n                outputs = kernelFunc();\n            }\n            else {\n                outputs = _this.profiler.profileKernel(scopeName, inputs, function () { return kernelFunc(); });\n            }\n        });\n        if (isTapeOn) {\n            this.addTapeNode(scopeName, inputs, outputs, backwardsFunc, saved);\n        }\n        if (this.state.profiling) {\n            this.state.activeProfile.kernels.push({\n                name: scopeName,\n                bytesAdded: this.state.numBytes - startingBytecount,\n                totalBytesSnapshot: this.state.numBytes,\n                tensorsAdded: this.state.numTensors - startingNumTensors,\n                totalTensorsSnapshot: this.state.numTensors,\n                inputShapes: Object.keys(inputs).map(function (key) { return inputs[key].shape; }),\n                outputShapes: outputs.map(function (item) { return item.shape; })\n            });\n        }\n        return (Array.isArray(out) ? outputs : outputs[0]);\n    };\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n    Engine.prototype.makeTensor = function (values, shape, dtype, backend) {\n        if (values == null) {\n            throw new Error('Values passed to engine.makeTensor() are null');\n        }\n        dtype = dtype || 'float32';\n        backend = backend || this.backend;\n        var backendVals = values;\n        if (dtype === 'string' && util.isString(values[0])) {\n            backendVals = values.map(function (d) { return util.encodeString(d); });\n        }\n        var dataId = backend.write(backendVals, shape, dtype);\n        var t = new tensor_1.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.incRef(t, backend);\n        // Count bytes for string tensors.\n        if (dtype === 'string') {\n            var info = this.state.tensorInfo.get(dataId);\n            var newBytes = util_1.bytesFromStringArray(backendVals);\n            this.state.numBytes += newBytes - info.bytes;\n            info.bytes = newBytes;\n        }\n        return t;\n    };\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n    Engine.prototype.makeTensorFromDataId = function (dataId, shape, dtype, backend) {\n        dtype = dtype || 'float32';\n        var t = new tensor_1.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.incRef(t, backend);\n        return t;\n    };\n    Engine.prototype.makeVariable = function (initialValue, trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        name = name || this.nextVariableId().toString();\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.asType(dtype);\n        }\n        var v = new tensor_1.Variable(initialValue, trainable, name, this.nextTensorId());\n        if (this.state.registeredVariables[v.name] != null) {\n            throw new Error(\"Variable with name \" + v.name + \" was already registered\");\n        }\n        this.state.registeredVariables[v.name] = v;\n        this.incRef(v, this.backend);\n        return v;\n    };\n    Engine.prototype.incRef = function (a, backend) {\n        var refCount = this.state.tensorInfo.has(a.dataId) ?\n            this.state.tensorInfo.get(a.dataId).refCount :\n            0;\n        this.state.numTensors++;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors++;\n        }\n        if (refCount === 0) {\n            this.state.numDataBuffers++;\n            // Bytes for complex numbers are counted by their components. Bytes for\n            // string tensors are counted when writing values.\n            var bytes = 0;\n            if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n                bytes = a.size * util.bytesPerElement(a.dtype);\n            }\n            this.state.tensorInfo.set(a.dataId, {\n                backend: backend || this.backend,\n                dtype: a.dtype,\n                shape: a.shape,\n                bytes: bytes,\n                refCount: 0\n            });\n            this.state.numBytes += bytes;\n        }\n        this.state.tensorInfo.get(a.dataId).refCount++;\n        if (!(a instanceof tensor_1.Variable)) {\n            this.track(a);\n        }\n    };\n    Engine.prototype.disposeTensor = function (a) {\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            return;\n        }\n        this.state.numTensors--;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors--;\n        }\n        var info = this.state.tensorInfo.get(a.dataId);\n        var refCount = info.refCount;\n        if (refCount <= 1) {\n            // Don't count bytes for complex numbers as they are counted by their\n            // components.\n            if (a.dtype !== 'complex64') {\n                this.state.numBytes -= info.bytes;\n            }\n            this.state.numDataBuffers--;\n            info.backend.disposeData(a.dataId);\n            this.state.tensorInfo.delete(a.dataId);\n        }\n        else {\n            this.state.tensorInfo.get(a.dataId).refCount--;\n        }\n        // TODO(nsthorat): Construct an error and save the stack trace for\n        // debugging when in debug mode. Creating a stack trace is too expensive\n        // to do unconditionally.\n    };\n    Engine.prototype.disposeVariables = function () {\n        for (var varName in this.state.registeredVariables) {\n            var v = this.state.registeredVariables[varName];\n            this.disposeVariable(v);\n        }\n    };\n    Engine.prototype.disposeVariable = function (v) {\n        this.disposeTensor(v);\n        if (this.state.registeredVariables[v.name] != null) {\n            delete this.state.registeredVariables[v.name];\n        }\n    };\n    Engine.prototype.memory = function () {\n        var info = this.backend.memory();\n        info.numTensors = this.state.numTensors;\n        info.numDataBuffers = this.state.numDataBuffers;\n        info.numBytes = this.state.numBytes;\n        if (this.state.numStringTensors > 0) {\n            info.unreliable = true;\n            if (info.reasons == null) {\n                info.reasons = [];\n            }\n            info.reasons.push('Memory usage by string tensors is approximate ' +\n                '(2 bytes per character)');\n        }\n        return info;\n    };\n    Engine.prototype.profile = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var startBytes, startNumTensors;\n            return __generator(this, function (_a) {\n                this.state.profiling = true;\n                startBytes = this.state.numBytes;\n                startNumTensors = this.state.numTensors;\n                this.state.activeProfile.kernels = [];\n                this.state.activeProfile.result = query();\n                this.state.profiling = false;\n                this.state.activeProfile.peakBytes = Math.max.apply(Math, this.state.activeProfile.kernels.map(function (d) { return d.totalBytesSnapshot; }));\n                this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n                this.state.activeProfile.newTensors =\n                    this.state.numTensors - startNumTensors;\n                return [2 /*return*/, this.state.activeProfile];\n            });\n        });\n    };\n    Engine.prototype.isTapeOn = function () {\n        return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    };\n    Engine.prototype.addTapeNode = function (scopeName, inputs, outputs, gradientsFunc, saved) {\n        var _this = this;\n        var tapeNode = {\n            id: this.state.nextTapeNodeId++,\n            name: scopeName,\n            inputs: inputs,\n            outputs: outputs,\n            saved: saved\n        };\n        if (gradientsFunc != null) {\n            tapeNode.gradient = function (dys) {\n                // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n                // the backprop graph to the user as null instead of zeros\n                dys = dys.map(function (dy, i) {\n                    if (dy == null) {\n                        var output = outputs[i];\n                        var vals = util.makeZerosTypedArray(output.size, output.dtype);\n                        return _this.makeTensor(vals, output.shape, output.dtype);\n                    }\n                    return dy;\n                });\n                // Grad functions of ops with single outputs expect a dy, while ops\n                // with multiple outputs expect dys (array of dy).\n                return gradientsFunc(dys.length > 1 ? dys : dys[0], saved);\n            };\n        }\n        this.state.activeTape.push(tapeNode);\n    };\n    Engine.prototype.keep = function (result) {\n        result.kept = true;\n        return result;\n    };\n    Engine.prototype.startTape = function () {\n        if (this.state.gradientDepth === 0) {\n            this.state.activeTape = [];\n        }\n        this.state.gradientDepth++;\n    };\n    Engine.prototype.endTape = function () {\n        this.state.gradientDepth--;\n    };\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    Engine.prototype.startScope = function (name) {\n        var scopeInfo = {\n            track: [],\n            name: 'unnamed scope',\n            id: this.state.nextScopeId++\n        };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.state.scopeStack.push(scopeInfo);\n        this.state.activeScope = scopeInfo;\n    };\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    Engine.prototype.endScope = function (result) {\n        var _this = this;\n        var tensorsToTrackInParent = tensor_util_1.getTensorsInContainer(result);\n        var tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(function (t) { return t.id; }));\n        // Dispose the arrays tracked in this scope.\n        for (var i = 0; i < this.state.activeScope.track.length; i++) {\n            var tensor = this.state.activeScope.track[i];\n            if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n                tensor.dispose();\n            }\n        }\n        var oldScope = this.state.scopeStack.pop();\n        this.state.activeScope = this.state.scopeStack.length === 0 ?\n            null :\n            this.state.scopeStack[this.state.scopeStack.length - 1];\n        // Track the current result in the parent scope.\n        tensorsToTrackInParent.forEach(function (tensor) {\n            // Only track the tensor if was allocated in the inner scope and is not\n            // globally kept.\n            if (!tensor.kept && tensor.scopeId === oldScope.id) {\n                _this.track(tensor);\n            }\n        });\n    };\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n    Engine.prototype.gradients = function (f, xs, dy, allowNoGradients) {\n        var _this = this;\n        if (allowNoGradients === void 0) { allowNoGradients = false; }\n        util.assert(xs.length > 0, function () { return 'gradients() received an empty list of xs.'; });\n        if (dy != null && dy.dtype !== 'float32') {\n            throw new Error(\"dy must have 'float32' dtype, but has '\" + dy.dtype + \"'\");\n        }\n        var y = this.scopedRun(function () { return _this.startTape(); }, function () { return _this.endTape(); }, function () { return _this.tidy('forward', f); });\n        util.assert(y instanceof tensor_1.Tensor, function () { return 'The result y returned by f() must be a tensor.'; });\n        // Filter out the nodes that don't connect x => y.\n        var filteredTape = tape_1.getFilteredNodesXToY(this.state.activeTape, xs, y);\n        if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n            throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                'that the f you passed encloses all operations that lead from x ' +\n                'to y.');\n        }\n        return this.tidy('backward', function () {\n            var accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n            // Backprop gradients through the filtered nodes.\n            tape_1.backpropagateGradients(accumulatedGradientMap, filteredTape, \n            // Pass the tidy function to avoid circular dep with `tape.ts`.\n            function (f) { return _this.tidy(f); });\n            var grads = xs.map(function (x) { return accumulatedGradientMap[x.id]; });\n            if (_this.state.gradientDepth === 0) {\n                // This means that we are not computing higher-order gradients\n                // and can clean up the tape.\n                _this.state.activeTape.forEach(function (node) {\n                    for (var _i = 0, _a = node.saved; _i < _a.length; _i++) {\n                        var tensor = _a[_i];\n                        tensor.dispose();\n                    }\n                });\n                _this.state.activeTape = null;\n            }\n            return { value: y, grads: grads };\n        });\n    };\n    Engine.prototype.customGrad = function (f) {\n        var _this = this;\n        util.assert(util.isFunction(f), function () { return 'The f passed in customGrad(f) must be a function.'; });\n        return function () {\n            var inputs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                inputs[_i] = arguments[_i];\n            }\n            util.assert(inputs.every(function (t) { return t instanceof tensor_1.Tensor; }), function () { return 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n                'tensors'; });\n            var res;\n            var inputMap = {};\n            inputs.forEach(function (input, i) {\n                inputMap[i] = input;\n            });\n            return _this.runKernelFunc(function (_, save) {\n                res = f.apply(void 0, inputs.concat([save]));\n                util.assert(res.value instanceof tensor_1.Tensor, function () { return 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor'; });\n                util.assert(util.isFunction(res.gradFunc), function () { return 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.'; });\n                return res.value;\n            }, inputMap, function (dy, saved) {\n                var gradRes = res.gradFunc(dy, saved);\n                var grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n                util.assert(grads.length === inputs.length, function () { return 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).'; });\n                util.assert(grads.every(function (t) { return t instanceof tensor_1.Tensor; }), function () { return 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.'; });\n                var gradMap = {};\n                grads.forEach(function (grad, i) {\n                    gradMap[i] = function () { return grad; };\n                });\n                return gradMap;\n            });\n        };\n    };\n    Engine.prototype.readSync = function (dataId) {\n        // Route the read to the correct backend.\n        var info = this.state.tensorInfo.get(dataId);\n        return info.backend.readSync(dataId);\n    };\n    Engine.prototype.read = function (dataId) {\n        // Route the read to the correct backend.\n        var info = this.state.tensorInfo.get(dataId);\n        return info.backend.read(dataId);\n    };\n    Engine.prototype.time = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, timingInfo;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        start = util_1.now();\n                        return [4 /*yield*/, this.backend.time(query)];\n                    case 1:\n                        timingInfo = _a.sent();\n                        timingInfo.wallMs = util_1.now() - start;\n                        return [2 /*return*/, timingInfo];\n                }\n            });\n        });\n    };\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n    Engine.prototype.track = function (result) {\n        if (this.state.activeScope != null) {\n            result.scopeId = this.state.activeScope.id;\n            this.state.activeScope.track.push(result);\n        }\n        return result;\n    };\n    Object.defineProperty(Engine.prototype, \"registeredVariables\", {\n        get: function () {\n            return this.state.registeredVariables;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n    Engine.prototype.reset = function () {\n        // Make any pending promise obsolete.\n        this.pendingBackendInitId++;\n        this.state.dispose();\n        this.ENV.reset();\n        this.state = new EngineState();\n        for (var backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        this.backendName = null;\n        this.backendInstance = null;\n        this.pendingBackendInit = null;\n    };\n    Engine.nextTensorId = 0;\n    Engine.nextVariableId = 0;\n    return Engine;\n}());\nexports.Engine = Engine;\nfunction ones(shape) {\n    var values = util_1.makeOnesTypedArray(util_1.sizeFromShape(shape), 'float32');\n    return exports.ENGINE.makeTensor(values, shape, 'float32');\n}\nvar GLOBAL;\nfunction getGlobalNamespace() {\n    if (GLOBAL == null) {\n        // tslint:disable-next-line:no-any\n        var ns = void 0;\n        if (typeof (window) !== 'undefined') {\n            ns = window;\n        }\n        else if (typeof (global) !== 'undefined') {\n            ns = global;\n        }\n        else if (typeof (process) !== 'undefined') {\n            ns = process;\n        }\n        else if (typeof (self) !== 'undefined') {\n            ns = self;\n        }\n        else {\n            throw new Error('Could not find a global object');\n        }\n        GLOBAL = ns;\n    }\n    return GLOBAL;\n}\nfunction getOrMakeEngine() {\n    var ns = getGlobalNamespace();\n    if (ns._tfengine == null) {\n        var environment = new environment_1.Environment(ns);\n        ns._tfengine = new Engine(environment);\n    }\n    environment_1.setEnvironmentGlobal(ns._tfengine.ENV);\n    // Tell the current tensor interface that the global engine is responsible\n    // for tracking.\n    tensor_1.setTensorTracker(function () { return ns._tfengine; });\n    return ns._tfengine;\n}\nexports.ENGINE = getOrMakeEngine();\n//# sourceMappingURL=engine.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"./engine\");\nvar environment_1 = require(\"./environment\");\nvar tensor_1 = require(\"./tensor\");\nvar util_1 = require(\"./util\");\nfunction inferShape(val, dtype) {\n    var firstElem = val;\n    if (util_1.isTypedArray(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    var shape = [];\n    while (Array.isArray(firstElem) ||\n        util_1.isTypedArray(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        environment_1.env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nexports.inferShape = inferShape;\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !util_1.isTypedArray(val)) {\n        util_1.assert(shape.length === 0, function () { return \"Element arr[\" + indices.join('][') + \"] is a primitive, \" +\n            (\"but should be an array/TypedArray of \" + shape[0] + \" elements\"); });\n        return;\n    }\n    util_1.assert(shape.length > 0, function () { return \"Element arr[\" + indices.join('][') + \"] should be a primitive, \" +\n        (\"but is an array of \" + val.length + \" elements\"); });\n    util_1.assert(val.length === shape[0], function () { return \"Element arr[\" + indices.join('][') + \"] should have \" + shape[0] + \" \" +\n        (\"elements, but has \" + val.length + \" elements\"); });\n    var subShape = shape.slice(1);\n    for (var i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype == null) {\n        return;\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(\"Argument '\" + argName + \"' passed to '\" + functionName + \"' must \" +\n            (\"be \" + expectedDtype + \" tensor, but got \" + actualDType + \" tensor\"));\n    }\n}\nfunction convertToTensor(x, argName, functionName, parseAsDtype) {\n    if (parseAsDtype === void 0) { parseAsDtype = 'numeric'; }\n    if (x instanceof tensor_1.Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    var inferredDtype = util_1.inferDtype(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!util_1.isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        var type = x == null ? 'null' : x.constructor.name;\n        throw new Error(\"Argument '\" + argName + \"' passed to '\" + functionName + \"' must be a \" +\n            (\"Tensor or TensorLike, but got '\" + type + \"'\"));\n    }\n    var inferredShape = inferShape(x, inferredDtype);\n    if (!util_1.isTypedArray(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    var skipTypedArray = true;\n    var values = inferredDtype !== 'string' ?\n        util_1.toTypedArray(x, inferredDtype, environment_1.env().getBool('DEBUG')) :\n        util_1.flatten(x, [], skipTypedArray);\n    return engine_1.ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexports.convertToTensor = convertToTensor;\nfunction convertToTensorArray(arg, argName, functionName, parseAsDtype) {\n    if (parseAsDtype === void 0) { parseAsDtype = 'numeric'; }\n    if (!Array.isArray(arg)) {\n        throw new Error(\"Argument \" + argName + \" passed to \" + functionName + \" must be a \" +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    var tensors = arg;\n    return tensors.map(function (t, i) { return convertToTensor(t, argName + \"[\" + i + \"]\", functionName); }, parseAsDtype);\n}\nexports.convertToTensorArray = convertToTensorArray;\n//# sourceMappingURL=tensor_util_env.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar engine_1 = require(\"../engine\");\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nfunction op(f) {\n    var keys = Object.keys(f);\n    if (keys.length !== 1) {\n        throw new Error(\"Please provide an object with a single key \" +\n            \"(operation name) mapping to a function. Got an object with \" +\n            (keys.length + \" keys.\"));\n    }\n    var opName = keys[0];\n    var fn = f[opName];\n    // Strip the underscore from the end of the function name.\n    if (opName.endsWith('_')) {\n        opName = opName.substring(0, opName.length - 1);\n    }\n    // tslint:disable-next-line:no-any\n    var f2 = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        engine_1.ENGINE.startScope(opName);\n        try {\n            var result = fn.apply(void 0, args);\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            engine_1.ENGINE.endScope(result);\n            return result;\n        }\n        catch (ex) {\n            engine_1.ENGINE.endScope(null);\n            throw ex;\n        }\n    };\n    Object.defineProperty(f2, 'name', { value: opName, configurable: true });\n    // tslint:disable-next-line:no-any\n    return f2;\n}\nexports.op = op;\n//# sourceMappingURL=operation.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n */\n/** @doc {heading: 'Environment'} */\nvar Environment = /** @class */ (function () {\n    // tslint:disable-next-line: no-any\n    function Environment(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    Environment.prototype.setPlatform = function (platformName, platform) {\n        if (this.platform != null) {\n            console.warn(\"Platform \" + this.platformName + \" has already been set. \" +\n                (\"Overwriting the platform with \" + platform + \".\"));\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    };\n    Environment.prototype.registerFlag = function (flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn: evaluationFn, setHook: setHook };\n        // Override the flag value from the URL. This has to happen here because the\n        // environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            var flagValue = this.urlFlags[flagName];\n            console.warn(\"Setting feature override from URL \" + flagName + \": \" + flagValue + \".\");\n            this.set(flagName, flagValue);\n        }\n    };\n    Environment.prototype.get = function (flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    };\n    Environment.prototype.getNumber = function (flagName) {\n        return this.get(flagName);\n    };\n    Environment.prototype.getBool = function (flagName) {\n        return this.get(flagName);\n    };\n    Environment.prototype.getFlags = function () {\n        return this.flags;\n    };\n    Object.defineProperty(Environment.prototype, \"features\", {\n        // For backwards compatibility.\n        get: function () {\n            return this.flags;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Environment.prototype.set = function (flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(\"Cannot set flag \" + flagName + \" as it has not been registered.\");\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    };\n    Environment.prototype.evaluateFlag = function (flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(\"Cannot evaluate flag '\" + flagName + \"': no evaluation function found.\");\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    };\n    Environment.prototype.setFlags = function (flags) {\n        this.flags = Object.assign({}, flags);\n    };\n    Environment.prototype.reset = function () {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    };\n    Environment.prototype.populateURLFlags = function () {\n        var _this = this;\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        var urlParams = getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(function (keyValue) {\n                var _a = keyValue.split(':'), key = _a[0], value = _a[1];\n                _this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    };\n    return Environment;\n}());\nexports.Environment = Environment;\nfunction getQueryParams(queryString) {\n    var params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n        var t = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            t[_i - 1] = arguments[_i];\n        }\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nexports.getQueryParams = getQueryParams;\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (\"\" + +value === value) {\n        return +value;\n    }\n    throw new Error(\"Could not parse value flag value \" + value + \" for flag \" + flagName + \".\");\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n */\n/** @doc {heading: 'Environment'} */\nfunction env() {\n    return exports.ENV;\n}\nexports.env = env;\nexports.ENV = null;\nfunction setEnvironmentGlobal(environment) {\n    exports.ENV = environment;\n}\nexports.setEnvironmentGlobal = setEnvironmentGlobal;\n//# sourceMappingURL=environment.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar environment_1 = require(\"../environment\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar complex_ops_1 = require(\"./complex_ops\");\nvar operation_1 = require(\"./operation\");\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor(values, shape, dtype) {\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor = tensor;\n/** This is shared code across all tensor creation methods. */\nfunction makeTensor(values, shape, inferredShape, dtype) {\n    if (dtype == null) {\n        dtype = util_1.inferDtype(values);\n    }\n    if (dtype === 'complex64') {\n        throw new Error(\"Cannot construct a complex64 tensor directly. \" +\n            \"Please use tf.complex(real, imag).\");\n    }\n    if (!util_1.isTypedArray(values) && !Array.isArray(values) &&\n        typeof values !== 'number' && typeof values !== 'boolean' &&\n        typeof values !== 'string') {\n        throw new Error('values passed to tensor(values) must be a number/boolean/string or ' +\n            'an array of numbers/booleans/strings, or a TypedArray');\n    }\n    if (shape != null) {\n        util_1.assertNonNegativeIntegerDimensions(shape);\n        var providedSize_1 = util_1.sizeFromShape(shape);\n        var inferredSize_1 = util_1.sizeFromShape(inferredShape);\n        util_1.assert(providedSize_1 === inferredSize_1, function () {\n            return \"Based on the provided shape, [\" + shape + \"], the tensor should have \" +\n                (providedSize_1 + \" values but has \" + inferredSize_1);\n        });\n        for (var i = 0; i < inferredShape.length; ++i) {\n            var inferred = inferredShape[i];\n            var flatDimsDontMatch = i === inferredShape.length - 1 ?\n                inferred !== util_1.sizeFromShape(shape.slice(i)) :\n                true;\n            util_1.assert(inferredShape[i] === shape[i] || !flatDimsDontMatch, function () { return \"Error creating a new Tensor. Inferred shape \" +\n                (\"(\" + inferredShape + \") does not match the provided \") +\n                (\"shape (\" + shape + \"). \"); });\n        }\n    }\n    if (!util_1.isTypedArray(values) && !Array.isArray(values)) {\n        values = [values];\n    }\n    shape = shape || inferredShape;\n    values = dtype !== 'string' ?\n        util_1.toTypedArray(values, dtype, environment_1.env().getBool('DEBUG')) :\n        util_1.flatten(values, [], true);\n    return engine_1.ENGINE.makeTensor(values, shape, dtype);\n}\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction scalar(value, dtype) {\n    if (((util_1.isTypedArray(value) && dtype !== 'string') || Array.isArray(value)) &&\n        dtype !== 'complex64') {\n        throw new Error('Error creating a new Scalar: value must be a primitive ' +\n            '(number|boolean|string)');\n    }\n    if (dtype === 'string' && util_1.isTypedArray(value) &&\n        !(value instanceof Uint8Array)) {\n        throw new Error('When making a scalar from encoded string, ' +\n            'the value must be `Uint8Array`.');\n    }\n    var shape = [];\n    var inferredShape = [];\n    return makeTensor(value, shape, inferredShape, dtype);\n}\nexports.scalar = scalar;\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor1d(values, dtype) {\n    util_1.assertNonNull(values);\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 1) {\n        throw new Error('tensor1d() requires values to be a flat/TypedArray');\n    }\n    var shape = null;\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor1d = tensor1d;\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor2d(values, shape, dtype) {\n    util_1.assertNonNull(values);\n    if (shape != null && shape.length !== 2) {\n        throw new Error('tensor2d() requires shape to have two numbers');\n    }\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n        throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor2d() requires shape to be provided when `values` ' +\n            'are a flat/TypedArray');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor2d = tensor2d;\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor3d(values, shape, dtype) {\n    util_1.assertNonNull(values);\n    if (shape != null && shape.length !== 3) {\n        throw new Error('tensor3d() requires shape to have three numbers');\n    }\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n        throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor3d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor3d = tensor3d;\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor4d(values, shape, dtype) {\n    util_1.assertNonNull(values);\n    if (shape != null && shape.length !== 4) {\n        throw new Error('tensor4d() requires shape to have four numbers');\n    }\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n        throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor4d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor4d = tensor4d;\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1], [2]], [[3], [4]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor5d(values, shape, dtype) {\n    util_1.assertNonNull(values);\n    if (shape != null && shape.length !== 5) {\n        throw new Error('tensor5d() requires shape to have five numbers');\n    }\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n        throw new Error('tensor5d() requires values to be ' +\n            'number[][][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor5d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor5d = tensor5d;\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor6d(values, shape, dtype) {\n    util_1.assertNonNull(values);\n    if (shape != null && shape.length !== 6) {\n        throw new Error('tensor6d() requires shape to have six numbers');\n    }\n    var inferredShape = tensor_util_env_1.inferShape(values, dtype);\n    if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n        throw new Error('tensor6d() requires values to be number[][][][][][] or ' +\n            'flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor6d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    shape = shape ||\n        inferredShape;\n    return makeTensor(values, shape, inferredShape, dtype);\n}\nexports.tensor6d = tensor6d;\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction variable(initialValue, trainable, name, dtype) {\n    if (trainable === void 0) { trainable = true; }\n    return engine_1.ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}\nexports.variable = variable;\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction ones(shape, dtype) {\n    if (dtype === void 0) { dtype = 'float32'; }\n    if (dtype === 'complex64') {\n        var real_1 = ones(shape, 'float32');\n        var imag_1 = zeros(shape, 'float32');\n        return complex_ops_1.complex(real_1, imag_1);\n    }\n    var values = util_1.makeOnesTypedArray(util_1.sizeFromShape(shape), dtype);\n    return engine_1.ENGINE.makeTensor(values, shape, dtype);\n}\nexports.ones = ones;\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction zeros(shape, dtype) {\n    if (dtype === void 0) { dtype = 'float32'; }\n    if (dtype === 'complex64') {\n        var real_2 = zeros(shape, 'float32');\n        var imag_2 = zeros(shape, 'float32');\n        return complex_ops_1.complex(real_2, imag_2);\n    }\n    var values = util_1.makeZerosTypedArray(util_1.sizeFromShape(shape), dtype);\n    return engine_1.ENGINE.makeTensor(values, shape, dtype);\n}\nexports.zeros = zeros;\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction fill(shape, value, dtype) {\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.fill(shape, value, dtype); }, {});\n}\nexports.fill = fill;\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction onesLike_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'onesLike');\n    if ($x.dtype === 'complex64') {\n        var r = exports.onesLike(complex_ops_1.real($x));\n        var i = exports.zerosLike(complex_ops_1.imag($x));\n        return complex_ops_1.complex(r, i);\n    }\n    var der = function (dy, saved) { return ({ $x: function () { return exports.zerosLike(dy); } }); };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.onesLike($x); }, { $x: $x }, der);\n}\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction zerosLike_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'zerosLike');\n    var der = function (dy, saved) { return ({ $x: function () { return exports.zerosLike(dy); } }); };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.zerosLike($x); }, { $x: $x }, der);\n}\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction linspace(start, stop, num) {\n    if (num <= 0) {\n        throw new Error('The number of values should be positive.');\n    }\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.linspace(start, stop, num); }, {});\n}\nexports.linspace = linspace;\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction range(start, stop, step, dtype) {\n    if (step === void 0) { step = 1; }\n    if (dtype === void 0) { dtype = 'float32'; }\n    if (step === 0) {\n        throw new Error('Cannot have a step of zero');\n    }\n    var sameStartStop = start === stop;\n    var increasingRangeNegativeStep = start < stop && step < 0;\n    var decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return zeros([0], dtype);\n    }\n    var numElements = Math.abs(Math.ceil((stop - start) / step));\n    var values = util_1.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (var i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return tensor1d(values, dtype);\n}\nexports.range = range;\nexports.onesLike = operation_1.op({ onesLike_: onesLike_ });\nexports.zerosLike = operation_1.op({ zerosLike_: zerosLike_ });\n//# sourceMappingURL=tensor_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util_1 = require(\"../../ops/broadcast_util\");\nvar util = require(\"../../util\");\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_util = require(\"./shader_compiler_util\");\nfunction makeShader(inputsInfo, outputShape, userCode, usesPackedTextures) {\n    var prefixSnippets = [];\n    inputsInfo.forEach(function (x) {\n        var size = util.sizeFromShape(x.shapeInfo.logicalShape);\n        // Snippet when we decided to upload the values as uniform.\n        if (x.shapeInfo.isUniform) {\n            prefixSnippets.push(\"uniform float \" + x.name + (size > 1 ? \"[\" + size + \"]\" : '') + \";\");\n        }\n        else {\n            prefixSnippets.push(\"uniform sampler2D \" + x.name + \";\");\n            prefixSnippets.push(\"uniform int offset\" + x.name + \";\");\n        }\n    });\n    var inputPrefixSnippet = prefixSnippets.join('\\n');\n    var inputSamplingSnippet = inputsInfo\n        .map(function (x) { return getInputSamplingSnippet(x, outputShape, usesPackedTextures); })\n        .join('\\n');\n    var outTexShape = outputShape.texShape;\n    var glsl = glsl_version_1.getGlslDifferences();\n    var floatTextureSampleSnippet = getFloatTextureSampleSnippet(glsl);\n    var outputSamplingSnippet;\n    var floatTextureSetOutputSnippet;\n    var shaderPrefix = getShaderPrefix(glsl);\n    if (outputShape.isPacked) {\n        outputSamplingSnippet =\n            getPackedOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRGBASnippet(glsl);\n    }\n    else {\n        outputSamplingSnippet =\n            getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRSnippet(glsl);\n    }\n    if (usesPackedTextures) {\n        shaderPrefix += SHADER_PACKED_PREFIX;\n    }\n    var source = [\n        shaderPrefix, floatTextureSampleSnippet, floatTextureSetOutputSnippet,\n        inputPrefixSnippet, outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nexports.makeShader = makeShader;\nfunction getSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        case 5:\n            return getSampler5D(inInfo);\n        case 6:\n            return getSampler6D(inInfo);\n        default:\n            throw new Error(shape.length + \"-D input sampling\" +\n                \" is not yet supported\");\n    }\n}\nfunction getPackedSamplerFromInInfo(inInfo) {\n    var shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getPackedSamplerScalar(inInfo);\n        case 1:\n            return getPackedSampler1D(inInfo);\n        case 2:\n            return getPackedSampler2D(inInfo);\n        case 3:\n            return getPackedSampler3D(inInfo);\n        default:\n            return getPackedSamplerND(inInfo);\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, usesPackedTextures) {\n    if (usesPackedTextures === void 0) { usesPackedTextures = false; }\n    var res = '';\n    if (usesPackedTextures) {\n        res += getPackedSamplerFromInInfo(inInfo);\n    }\n    else {\n        res += getSamplerFromInInfo(inInfo);\n    }\n    var inShape = inInfo.shapeInfo.logicalShape;\n    var outShape = outShapeInfo.logicalShape;\n    if (inShape.length <= outShape.length) {\n        if (usesPackedTextures) {\n            res += getPackedSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n        else {\n            res += getSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n    }\n    return res;\n}\nfunction getPackedOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutputPacked1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutputPacked2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutputPacked3DCoords(outShape, outTexShape);\n        default:\n            return getOutputPackedNDCoords(outShape, outTexShape);\n    }\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        case 5:\n            return getOutput5DCoords(outShape, outTexShape);\n        case 6:\n            return getOutput6DCoords(outShape, outTexShape);\n        default:\n            throw new Error(outShape.length + \"-D output sampling is not yet supported\");\n    }\n}\nfunction getFloatTextureSampleSnippet(glsl) {\n    return \"\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return \" + glsl.texture2D + \"(textureSampler, uv).r;\\n    }\\n  \";\n}\nfunction getFloatTextureSetRSnippet(glsl) {\n    return \"\\n    void setOutput(float val) {\\n      \" + glsl.output + \" = vec4(val, 0, 0, 0);\\n    }\\n  \";\n}\nfunction getFloatTextureSetRGBASnippet(glsl) {\n    return \"\\n    void setOutput(vec4 val) {\\n      \" + glsl.output + \" = val;\\n    }\\n  \";\n}\nfunction getShaderPrefix(glsl) {\n    var SHADER_PREFIX = glsl.version + \"\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    \" + glsl.varyingFs + \" vec2 resultUV;\\n    \" + glsl.defineOutput + \"\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    \" + glsl.defineSpecialNaN + \"\\n    \" + glsl.defineSpecialInf + \"\\n    \" + glsl.defineRound + \"\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    \" + SAMPLE_1D_SNIPPET + \"\\n    \" + SAMPLE_2D_SNIPPET + \"\\n    \" + SAMPLE_3D_SNIPPET + \"\\n  \";\n    return SHADER_PREFIX;\n}\nvar SAMPLE_1D_SNIPPET = \"\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_2D_SNIPPET = \"\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SAMPLE_3D_SNIPPET = \"\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\";\nvar SHADER_PACKED_PREFIX = \"\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n\";\nfunction getOutputScalarCoords() {\n    return \"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";\n}\nfunction getOutputPacked1DCoords(shape, texShape) {\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (packedTexShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * \" + packedTexShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (packedTexShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * \" + packedTexShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + packedTexShape[0] + \", \" + packedTexShape[1] + \"));\\n      return 2 * (resTexRC.x * \" + packedTexShape[1] + \" + resTexRC.y);\\n    }\\n  \";\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \" + texShape[1] + \".0);\\n      }\\n    \";\n    }\n    if (texShape[1] === 1) {\n        return \"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \" + texShape[0] + \".0);\\n      }\\n    \";\n    }\n    return \"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      return resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n    }\\n  \";\n}\nfunction getOutputPacked3DCoords(shape, texShape) {\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    var texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    var texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + packedTexShape[0] + \", \" + packedTexShape[1] + \"));\\n      int index = resTexRC.x * \" + packedTexShape[1] + \" + resTexRC.y;\\n\\n      int b = index / \" + texelsInBatch + \";\\n      index -= b * \" + texelsInBatch + \";\\n\\n      int r = 2 * (index / \" + texelsInLogicalRow + \");\\n      int c = imod(index, \" + texelsInLogicalRow + \") * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  \";\n}\nfunction getOutput3DCoords(shape, texShape) {\n    var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return \"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      \" + coordsFromIndexSnippet + \"\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\nfunction getOutputPackedNDCoords(shape, texShape) {\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    var texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    var texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    var texelsInBatchN = texelsInBatch;\n    var batches = \"\";\n    var coords = 'b, r, c';\n    for (var b = 2; b < shape.length - 1; b++) {\n        texelsInBatchN *= shape[shape.length - b - 1];\n        batches = \"\\n      int b\" + b + \" = index / \" + texelsInBatchN + \";\\n      index -= b\" + b + \" * \" + texelsInBatchN + \";\\n    \" + batches;\n        coords = \"b\" + b + \", \" + coords;\n    }\n    return \"\\n    ivec\" + shape.length + \" getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + packedTexShape[0] + \", \" + packedTexShape[1] + \"));\\n      int index = resTexRC.x * \" + packedTexShape[1] + \" + resTexRC.y;\\n\\n      \" + batches + \"\\n\\n      int b = index / \" + texelsInBatch + \";\\n      index -= b * \" + texelsInBatch + \";\\n\\n      int r = 2 * (index / \" + texelsInLogicalRow + \");\\n      int c = imod(index, \" + texelsInLogicalRow + \") * 2;\\n\\n      return ivec\" + shape.length + \"(\" + coords + \");\\n    }\\n  \";\n}\nfunction getOutput4DCoords(shape, texShape) {\n    var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2'], shape);\n    return \"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      \" + coordsFromIndexSnippet + \"\\n      return ivec4(r, c, d, d2);\\n    }\\n  \";\n}\nfunction getOutput5DCoords(shape, texShape) {\n    var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3'], shape);\n    return \"\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(\" + texShape[0] + \",\\n                             \" + texShape[1] + \"));\\n\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      \" + coordsFromIndexSnippet + \"\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  \";\n}\nfunction getOutput6DCoords(shape, texShape) {\n    var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3', 'd4'], shape);\n    return \"\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n\\n      \" + coordsFromIndexSnippet + \"\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  \";\n}\nfunction getOutputPacked2DCoords(shape, texShape) {\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(\" + packedTexShape[0] + \", \" + packedTexShape[1] + \"));\\n      }\\n    \";\n    }\n    // texels needed to accommodate a logical row\n    var texelsInLogicalRow = Math.ceil(shape[1] / 2);\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + packedTexShape[0] + \", \" + packedTexShape[1] + \"));\\n\\n      int index = resTexRC.x * \" + packedTexShape[1] + \" + resTexRC.y;\\n      int r = 2 * (index / \" + texelsInLogicalRow + \");\\n      int c = imod(index, \" + texelsInLogicalRow + \") * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      }\\n    \";\n    }\n    if (shape[1] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \";\n    }\n    if (shape[0] === 1) {\n        return \"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \";\n    }\n    return \"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n      int index = resTexRC.x * \" + texShape[1] + \" + resTexRC.y;\\n      int r = index / \" + shape[1] + \";\\n      int c = index - r * \" + shape[1] + \";\\n      return ivec2(r, c);\\n    }\\n  \";\n}\nfunction getFlatOffsetUniformName(texName) {\n    return \"offset\" + texName;\n}\nfunction getPackedSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var glsl = glsl_version_1.getGlslDifferences();\n    return \"\\n    vec4 \" + funcName + \"() {\\n      return \" + glsl.texture2D + \"(\" + texName + \", halfCR);\\n    }\\n  \";\n}\nfunction getSamplerScalar(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        return \"float \" + funcName + \"() {return \" + texName + \";}\";\n    }\n    var _a = inputInfo.shapeInfo.texShape, texNumR = _a[0], texNumC = _a[1];\n    if (texNumR === 1 && texNumC === 1) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sampleTexture(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    var _b = inputInfo.shapeInfo.texShape, tNumR = _b[0], tNumC = _b[1];\n    var offset = getFlatOffsetUniformName(texName);\n    return \"\\n    float \" + funcName + \"() {\\n      vec2 uv = uvFromFlat(\" + tNumR + \", \" + tNumC + \", \" + offset + \");\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getPackedSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texShape = inputInfo.shapeInfo.texShape;\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    var glsl = glsl_version_1.getGlslDifferences();\n    return \"\\n    vec4 \" + funcName + \"(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        \" + packedTexShape[0] + \", \" + packedTexShape[1] + \", index);\\n      return \" + glsl.texture2D + \"(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler1D(inputInfo) {\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int index) {\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var texShape = inputInfo.shapeInfo.texShape;\n    var tNumR = texShape[0];\n    var tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        return sampleTexture(\" + texName + \", halfCR);\\n      }\\n    \";\n    }\n    var offset = getFlatOffsetUniformName(texName);\n    if (tNumC === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2(0.5, (float(index + \" + offset + \") + 0.5) / \" + tNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (tNumR === 1) {\n        return \"\\n      float \" + funcName + \"(int index) {\\n        vec2 uv = vec2((float(index + \" + offset + \") + 0.5) / \" + tNumC + \".0, 0.5);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    return \"\\n    float \" + funcName + \"(int index) {\\n      vec2 uv = uvFromFlat(\" + tNumR + \", \" + tNumC + \", index + \" + offset + \");\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getPackedSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var glsl = glsl_version_1.getGlslDifferences();\n    if (texShape != null && util.arraysEqual(shape, texShape)) {\n        return \"\\n      vec4 \" + funcName + \"(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n\\n        return \" + glsl.texture2D + \"(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    var valuesPerRow = Math.ceil(shape[1] / 2);\n    return \"\\n    vec4 \" + funcName + \"(int row, int col) {\\n      vec2 uv = packedUVfrom2D(\" + valuesPerRow + \", \" + packedTexShape[0] + \", \" + packedTexShape[1] + \", row, col);\\n      return \" + glsl.texture2D + \"(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler2D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texShape = inputInfo.shapeInfo.texShape;\n    if (texShape != null && util.arraysEqual(shape, texShape)) {\n        var texNumR_1 = texShape[0];\n        var texNumC_1 = texShape[1];\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\" + texNumC_1 + \".0, \" + texNumR_1 + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(\" + shape[1] + \", 1)));\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var offset = getFlatOffsetUniformName(texName);\n    if (texNumC === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      float index = dot(vec3(row, col, \" + offset + \"), vec3(\" + shape[1] + \", 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    if (texNumR === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return \"\\n    float \" + funcName + \"(int row, int col) {\\n      float index = dot(vec3(row, col, \" + offset + \"), vec3(\" + shape[1] + \", 1, 1));\\n      vec2 uv = vec2((index + 0.5) / \" + texNumC + \".0, 0.5);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    return \"\\n  float \" + funcName + \"(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * \" + shape[1] + \" + col + \" + offset + \";\\n    vec2 uv = uvFromFlat(\" + texNumR + \", \" + texNumC + \", index);\\n    return sampleTexture(\" + texName + \", uv);\\n  }\\n\";\n}\nfunction getPackedSampler3D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texShape = inputInfo.shapeInfo.texShape;\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (shape[0] === 1) {\n        var squeezedShape = shape.slice(1);\n        var keptDims = [1, 2];\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['b', 'row', 'col'];\n        return \"\\n        \" + getPackedSamplerFromInInfo(newInputInfo) + \"\\n        vec4 \" + funcName + \"(int b, int row, int col) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n    }\n    var texNumR = packedTexShape[0];\n    var texNumC = packedTexShape[1];\n    var valuesPerRow = Math.ceil(shape[2] / 2);\n    var texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n    var glsl = glsl_version_1.getGlslDifferences();\n    return \"\\n    vec4 \" + funcName + \"(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        \" + texNumR + \", \" + texNumC + \", \" + texelsInBatch + \", \" + valuesPerRow + \", b, row, col);\\n      return \" + glsl.texture2D + \"(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler3D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var stride0 = shape[1] * shape[2];\n    var stride1 = shape[2];\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    var squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        var params = ['row', 'col', 'depth'];\n        return \"\\n        \" + getSamplerFromInInfo(newInputInfo) + \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n        }\\n      \";\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(\" + stride0 + \", \" + stride1 + \", 1)));\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    var flatOffset = inputInfo.shapeInfo.flatOffset;\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return \"\\n        float \" + funcName + \"(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(\" + stride1 + \", 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n          return sampleTexture(\" + texName + \", uv);\\n        }\\n      \";\n    }\n    if (texNumC === stride1 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return \"\\n    float \" + funcName + \"(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(\" + shape[1] + \", 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n    }\n    var offset = getFlatOffsetUniformName(texName);\n    return \"\\n      float \" + funcName + \"(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * \" + stride0 + \" + col * \" + stride1 + \" + depth + \" + offset + \";\\n        vec2 uv = uvFromFlat(\" + texNumR + \", \" + texNumC + \", index);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n  \";\n}\nfunction getPackedSamplerND(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var rank = shape.length;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var texShape = inputInfo.shapeInfo.texShape;\n    var packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    var texNumR = packedTexShape[0];\n    var texNumC = packedTexShape[1];\n    var valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    var texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    var params = \"int b, int row, int col\";\n    var index = \"b * \" + texelsInBatch + \" + (row / 2) * \" + valuesPerRow + \" + (col / 2)\";\n    for (var b = 2; b < rank - 1; b++) {\n        params = \"int b\" + b + \", \" + params;\n        texelsInBatch *= shape[rank - b - 1];\n        index = \"b\" + b + \" * \" + texelsInBatch + \" + \" + index;\n    }\n    var glsl = glsl_version_1.getGlslDifferences();\n    return \"\\n    vec4 \" + funcName + \"(\" + params + \") {\\n      int index = \" + index + \";\\n      int texR = index / \" + texNumC + \";\\n      int texC = index - texR * \" + texNumC + \";\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + texNumC + \", \" + texNumR + \");\\n      return \" + glsl.texture2D + \"(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler4D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var stride2 = shape[3];\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(\" + stride0 + \", \" + stride1 + \", \" + stride2 + \", 1)));\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var flatOffset = inputInfo.shapeInfo.flatOffset;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(\" + stride1 + \", \" + stride2 + \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride2 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(\" + shape[1] * shape[2] + \", \" + shape[2] + \", 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    var offset = getFlatOffsetUniformName(texName);\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + stride0 + \" + col * \" + stride1 + \" +\\n          depth * \" + stride2 + \" + depth2;\\n      vec2 uv = uvFromFlat(\" + texNumR + \", \" + texNumC + \", index + \" + offset + \");\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler5D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var stride3 = shape[4];\n    var stride2 = shape[3] * stride3;\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2, int depth3) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + stride0 + \", \" + stride1 + \", \" + stride2 + \", \" + stride3 + \")) +\\n          depth3;\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var flatOffset = inputInfo.shapeInfo.flatOffset;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(\" + stride1 + \", \" + stride2 + \", \" + stride3 + \", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride3 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + shape[1] * shape[2] * shape[3] + \",\\n               \" + shape[2] * shape[3] + \", \" + shape[3] + \", 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    var offset = getFlatOffsetUniformName(texName);\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + stride0 + \" + col * \" + stride1 + \" + depth * \" + stride2 + \" +\\n          depth2 * \" + stride3 + \" + depth3 + \" + offset + \";\\n      vec2 uv = uvFromFlat(\" + texNumR + \", \" + texNumC + \", index);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getSampler6D(inputInfo) {\n    var shape = inputInfo.shapeInfo.logicalShape;\n    var texName = inputInfo.name;\n    var funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    var _a = util.squeezeShape(shape), newShape = _a.newShape, keptDims = _a.keptDims;\n    if (newShape.length < shape.length) {\n        var newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        var params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n        return \"\\n      \" + getSamplerFromInInfo(newInputInfo) + \"\\n      float \" + funcName + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return \" + funcName + \"(\" + getSqueezedParams(params, keptDims) + \");\\n      }\\n    \";\n    }\n    var stride4 = shape[5];\n    var stride3 = shape[4] * stride4;\n    var stride2 = shape[3] * stride3;\n    var stride1 = shape[2] * stride2;\n    var stride0 = shape[1] * stride1;\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\" + stride0 + \", \" + stride1 + \", \" + stride2 + \", \" + stride3 + \")) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(\" + stride4 + \", 1)));\\n        \" + getUniformSampler(inputInfo) + \"\\n      }\\n    \";\n    }\n    var flatOffset = inputInfo.shapeInfo.flatOffset;\n    var texShape = inputInfo.shapeInfo.texShape;\n    var texNumR = texShape[0];\n    var texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(\" + stride1 + \", \" + stride2 + \", \" + stride3 + \", \" + stride4 + \")) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    if (texNumC === stride4 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return \"\\n      float \" + funcName + \"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(\" + shape[1] * shape[2] * shape[3] * shape[4] + \",\\n               \" + shape[2] * shape[3] * shape[4] + \",\\n               \" + shape[3] * shape[4] + \",\\n               \" + shape[4] + \")) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\" + texNumC + \".0, \" + texNumR + \".0);\\n        return sampleTexture(\" + texName + \", uv);\\n      }\\n    \";\n    }\n    var offset = getFlatOffsetUniformName(texName);\n    return \"\\n    float \" + funcName + \"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \" + stride0 + \" + col * \" + stride1 + \" + depth * \" + stride2 + \" +\\n          depth2 * \" + stride3 + \" + depth3 * \" + stride4 + \" + depth4 + \" + offset + \";\\n      vec2 uv = uvFromFlat(\" + texNumR + \", \" + texNumC + \", index);\\n      return sampleTexture(\" + texName + \", uv);\\n    }\\n  \";\n}\nfunction getUniformSampler(inputInfo) {\n    var texName = inputInfo.name;\n    var inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    if (inSize < 2) {\n        return \"return \" + texName + \";\";\n    }\n    return \"\\n    for (int i = 0; i < \" + inSize + \"; i++) {\\n      if (i == index) {\\n        return \" + texName + \"[i];\\n      }\\n    }\\n  \";\n}\nfunction getPackedSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    var texName = inputInfo.name;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    var broadcastDims = broadcast_util_1.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var type = getCoordsDataType(outRank);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    var fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords.\" + fields[d + rankDiff] + \" = 0;\"; })\n                .join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords.\" + fields[i + rankDiff]; })\n            .join(', ');\n    }\n    var output = \"return outputValue;\";\n    var inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    var isInputScalar = inSize === 1;\n    var outSize = util.sizeFromShape(outShapeInfo.logicalShape);\n    var isOutputScalar = outSize === 1;\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n        output = \"\\n      return vec4(outputValue.xy, outputValue.xy);\\n    \";\n    }\n    else if (isInputScalar && !isOutputScalar) {\n        if (outRank === 1) {\n            output = \"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      \";\n        }\n        else {\n            output = \"\\n        return vec4(outputValue.x);\\n      \";\n        }\n    }\n    else if (broadcastDims.length) {\n        var rows = inRank - 2;\n        var cols = inRank - 1;\n        if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n            output = \"return vec4(outputValue.x);\";\n        }\n        else if (broadcastDims.indexOf(rows) > -1) {\n            output = \"return vec4(outputValue.x, outputValue.y, \" +\n                \"outputValue.x, outputValue.y);\";\n        }\n        else if (broadcastDims.indexOf(cols) > -1) {\n            output = \"return vec4(outputValue.xx, outputValue.zz);\";\n        }\n    }\n    return \"\\n    vec4 \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      vec4 outputValue = get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n      \" + output + \"\\n    }\\n  \";\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    var texName = inputInfo.name;\n    var texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    var funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    var outTexShape = outShapeInfo.texShape;\n    var inTexShape = inputInfo.shapeInfo.texShape;\n    var inRank = inputInfo.shapeInfo.logicalShape.length;\n    var outRank = outShapeInfo.logicalShape.length;\n    if (!inputInfo.shapeInfo.isUniform && inRank === outRank &&\n        inputInfo.shapeInfo.flatOffset == null &&\n        util.arraysEqual(inTexShape, outTexShape)) {\n        return \"\\n      float \" + funcName + \"() {\\n        return sampleTexture(\" + texName + \", resultUV);\\n      }\\n    \";\n    }\n    var type = getCoordsDataType(outRank);\n    var broadcastDims = broadcast_util_1.getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    var rankDiff = outRank - inRank;\n    var coordsSnippet;\n    var fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(function (d) { return \"coords.\" + fields[d + rankDiff] + \" = 0;\"; })\n                .join('\\n');\n    }\n    var unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map(function (s, i) { return \"coords.\" + fields[i + rankDiff]; })\n            .join(', ');\n    }\n    return \"\\n    float \" + funcName + \"() {\\n      \" + type + \" coords = getOutputCoords();\\n      \" + coordsSnippet + \"\\n      return get\" + texFuncSnippet + \"(\" + unpackedCoordsSnippet + \");\\n    }\\n  \";\n}\nfunction getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else if (rank === 5) {\n        return 'ivec5';\n    }\n    else if (rank === 6) {\n        return 'ivec6';\n    }\n    else {\n        throw Error(\"GPU for rank \" + rank + \" is not yet supported\");\n    }\n}\nexports.getCoordsDataType = getCoordsDataType;\n/** Returns a new input info (a copy) that has a squeezed logical shape. */\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    // Deep copy.\n    var newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(function (d) { return params[d]; }).join(', ');\n}\n//# sourceMappingURL=shader_compiler.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nfunction getBroadcastDims(inShape, outShape) {\n    var inRank = inShape.length;\n    var dims = [];\n    for (var i = 0; i < inRank; i++) {\n        var dim = inRank - 1 - i;\n        var a = inShape[dim] || 1;\n        var b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\nexports.getBroadcastDims = getBroadcastDims;\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nfunction getReductionAxes(inShape, outShape) {\n    var result = [];\n    for (var i = 0; i < outShape.length; i++) {\n        var inDim = inShape[inShape.length - i - 1];\n        var outAxis = outShape.length - i - 1;\n        var outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nexports.getReductionAxes = getReductionAxes;\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    var result = [];\n    var l = Math.max(shapeA.length, shapeB.length);\n    for (var i = 0; i < l; i++) {\n        var a = shapeA[shapeA.length - i - 1];\n        if (a == null) {\n            a = 1;\n        }\n        var b = shapeB[shapeB.length - i - 1];\n        if (b == null) {\n            b = 1;\n        }\n        if (a === 1) {\n            result.unshift(b);\n        }\n        else if (b === 1) {\n            result.unshift(a);\n        }\n        else if (a !== b) {\n            var errMsg = \"Operands could not be broadcast together with shapes \" +\n                (shapeA + \" and \" + shapeB + \".\");\n            throw Error(errMsg);\n        }\n        else {\n            result.unshift(a);\n        }\n    }\n    return result;\n}\nexports.assertAndGetBroadcastShape = assertAndGetBroadcastShape;\n//# sourceMappingURL=broadcast_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"./engine\");\nvar environment_1 = require(\"./environment\");\nvar tensor_1 = require(\"./tensor\");\nvar tensor_util_1 = require(\"./tensor_util\");\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n */\n/** @doc {heading: 'Environment'} */\nfunction enableProdMode() {\n    environment_1.env().set('PROD', true);\n}\nexports.enableProdMode = enableProdMode;\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n */\n/** @doc {heading: 'Environment'} */\nfunction enableDebugMode() {\n    environment_1.env().set('DEBUG', true);\n}\nexports.enableDebugMode = enableDebugMode;\n/** Globally disables deprecation warnings */\nfunction disableDeprecationWarnings() {\n    environment_1.env().set('DEPRECATION_WARNINGS_ENABLED', false);\n    console.warn(\"TensorFlow.js deprecation warnings have been disabled.\");\n}\nexports.disableDeprecationWarnings = disableDeprecationWarnings;\n/** Warn users about deprecated functionality. */\nfunction deprecationWarn(msg) {\n    if (environment_1.env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n        console.warn(msg + ' You can disable deprecation warnings with ' +\n            'tf.disableDeprecationWarnings().');\n    }\n}\nexports.deprecationWarn = deprecationWarn;\ntensor_1.setDeprecationWarningFn(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n */\n/** @doc {heading: 'Environment'} */\nfunction disposeVariables() {\n    engine_1.ENGINE.disposeVariables();\n}\nexports.disposeVariables = disposeVariables;\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n */\n/** @doc {heading: 'Environment'} */\nfunction engine() {\n    return engine_1.ENGINE;\n}\nexports.engine = engine;\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nfunction memory() {\n    return engine_1.ENGINE.memory();\n}\nexports.memory = memory;\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: tne number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n */\n/** @doc {heading: 'Performance', subheading: 'Profile'} */\nfunction profile(f) {\n    return engine_1.ENGINE.profile(f);\n}\nexports.profile = profile;\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nfunction tidy(nameOrFn, fn) {\n    return engine_1.ENGINE.tidy(nameOrFn, fn);\n}\nexports.tidy = tidy;\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nfunction dispose(container) {\n    var tensors = tensor_util_1.getTensorsInContainer(container);\n    tensors.forEach(function (tensor) { return tensor.dispose(); });\n}\nexports.dispose = dispose;\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nfunction keep(result) {\n    return engine_1.ENGINE.keep(result);\n}\nexports.keep = keep;\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n */\n/** @doc {heading: 'Performance', subheading: 'Timing'} */\nfunction time(f) {\n    return engine_1.ENGINE.time(f);\n}\nexports.time = time;\n/**\n * Sets the backend (cpu, webgl, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, and `'tensorflow'` under node.js\n *     (requires tfjs-node).\n */\n/** @doc {heading: 'Backends'} */\nfunction setBackend(backendName) {\n    return engine_1.ENGINE.setBackend(backendName);\n}\nexports.setBackend = setBackend;\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n */\n/** @doc {heading: 'Backends'} */\nfunction ready() {\n    return engine_1.ENGINE.ready();\n}\nexports.ready = ready;\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n */\n/** @doc {heading: 'Backends'} */\nfunction getBackend() {\n    return engine_1.ENGINE.backendName;\n}\nexports.getBackend = getBackend;\n/**\n * Removes a backend and the registered factory.\n */\n/** @doc {heading: 'Backends'} */\nfunction removeBackend(name) {\n    engine_1.ENGINE.removeBackend(name);\n}\nexports.removeBackend = removeBackend;\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nfunction findBackend(name) {\n    return engine_1.ENGINE.findBackend(name);\n}\nexports.findBackend = findBackend;\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nfunction findBackendFactory(name) {\n    return engine_1.ENGINE.findBackendFactory(name);\n}\nexports.findBackendFactory = findBackendFactory;\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n */\n/** @doc {heading: 'Backends'} */\nfunction registerBackend(name, factory, priority) {\n    if (priority === void 0) { priority = 1; }\n    return engine_1.ENGINE.registerBackend(name, factory, priority);\n}\nexports.registerBackend = registerBackend;\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n */\n/** @doc {heading: 'Backends'} */\nfunction backend() {\n    return engine_1.ENGINE.backend;\n}\nexports.backend = backend;\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nfunction setPlatform(platformName, platform) {\n    environment_1.env().setPlatform(platformName, platform);\n}\nexports.setPlatform = setPlatform;\n//# sourceMappingURL=globals.js.map","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Modularized ops.\nvar square_1 = require(\"./square\");\nexports.square = square_1.square;\n__export(require(\"./batchnorm\"));\n__export(require(\"./boolean_mask\"));\n__export(require(\"./complex_ops\"));\n__export(require(\"./concat_split\"));\n// Selectively exporting to avoid exposing gradient ops.\nvar conv_1 = require(\"./conv\");\nexports.conv1d = conv_1.conv1d;\nexports.conv2d = conv_1.conv2d;\nexports.conv3d = conv_1.conv3d;\nexports.depthwiseConv2d = conv_1.depthwiseConv2d;\nexports.separableConv2d = conv_1.separableConv2d;\nexports.conv2dTranspose = conv_1.conv2dTranspose;\nexports.conv3dTranspose = conv_1.conv3dTranspose;\n__export(require(\"./matmul\"));\n__export(require(\"./reverse\"));\n__export(require(\"./pool\"));\n__export(require(\"./slice\"));\n__export(require(\"./unary_ops\"));\n__export(require(\"./reduction_ops\"));\n__export(require(\"./compare\"));\n__export(require(\"./binary_ops\"));\n__export(require(\"./relu_ops\"));\n__export(require(\"./logical_ops\"));\n__export(require(\"./array_ops\"));\n__export(require(\"./tensor_ops\"));\n__export(require(\"./transpose\"));\n__export(require(\"./softmax\"));\n__export(require(\"./lrn\"));\n__export(require(\"./norm\"));\n__export(require(\"./segment_ops\"));\n__export(require(\"./lstm\"));\n__export(require(\"./moving_average\"));\n__export(require(\"./strided_slice\"));\n__export(require(\"./topk\"));\n__export(require(\"./scatter_nd\"));\n__export(require(\"./spectral_ops\"));\n__export(require(\"./sparse_to_dense\"));\n__export(require(\"./gather_nd\"));\n__export(require(\"./diag\"));\n__export(require(\"./dropout\"));\n__export(require(\"./signal_ops\"));\n__export(require(\"./in_top_k\"));\nvar operation_1 = require(\"./operation\");\nexports.op = operation_1.op;\n// Second level exports.\nvar losses = require(\"./loss_ops\");\nexports.losses = losses;\nvar linalg = require(\"./linalg_ops\");\nexports.linalg = linalg;\nvar image = require(\"./image_ops\");\nexports.image = image;\nvar spectral = require(\"./spectral_ops\");\nexports.spectral = spectral;\nvar fused = require(\"./fused_ops\");\nexports.fused = fused;\nvar signal = require(\"./signal_ops\");\nexports.signal = signal;\n//# sourceMappingURL=ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_format_1 = require(\"./tensor_format\");\nvar util = require(\"./util\");\nvar util_1 = require(\"./util\");\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nvar TensorBuffer = /** @class */ (function () {\n    function TensorBuffer(shape, dtype, values) {\n        var _this = this;\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            var n_1 = values.length;\n            util.assert(n_1 === this.size, function () { return \"Length of values '\" + n_1 + \"' does not match the size \" +\n                (\"inferred by the shape '\" + _this.size + \"'.\"); });\n        }\n        if (dtype === 'complex64') {\n            throw new Error(\"complex64 dtype TensorBuffers are not supported. Please create \" +\n                \"a TensorBuffer for the real and imaginary parts separately and \" +\n                \"call tf.complex(real, imag).\");\n        }\n        this.values = values || util.getArrayFromDType(dtype, this.size);\n        this.strides = util_1.computeStrides(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n    TensorBuffer.prototype.set = function (value) {\n        var _this = this;\n        var locs = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            locs[_i - 1] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, function () { return \"The number of provided coordinates (\" + locs.length + \") must \" +\n            (\"match the rank (\" + _this.rank + \")\"); });\n        var index = this.locToIndex(locs);\n        this.values[index] = value;\n    };\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n    TensorBuffer.prototype.get = function () {\n        var locs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            locs[_i] = arguments[_i];\n        }\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        var i = 0;\n        for (var _a = 0, locs_1 = locs; _a < locs_1.length; _a++) {\n            var loc = locs_1[_a];\n            if (loc < 0 || loc >= this.shape[i]) {\n                var msg = \"Requested out of range element at \" + locs + \". \" +\n                    (\"  Buffer shape=\" + this.shape);\n                throw new Error(msg);\n            }\n            i++;\n        }\n        var index = locs[locs.length - 1];\n        for (var i_1 = 0; i_1 < locs.length - 1; ++i_1) {\n            index += this.strides[i_1] * locs[i_1];\n        }\n        return this.values[index];\n    };\n    TensorBuffer.prototype.locToIndex = function (locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        var index = locs[locs.length - 1];\n        for (var i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    };\n    TensorBuffer.prototype.indexToLoc = function (index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        var locs = new Array(this.shape.length);\n        for (var i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    };\n    Object.defineProperty(TensorBuffer.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n    TensorBuffer.prototype.toTensor = function () {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    };\n    return TensorBuffer;\n}());\nexports.TensorBuffer = TensorBuffer;\n// For tracking tensor creation and disposal.\nvar trackerFn = null;\n// Used by chaining methods to call into ops.\nvar opHandler = null;\n// Used to warn about deprecated methods.\nvar deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nfunction setTensorTracker(fn) {\n    trackerFn = fn;\n}\nexports.setTensorTracker = setTensorTracker;\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nfunction setOpHandler(handler) {\n    opHandler = handler;\n}\nexports.setOpHandler = setOpHandler;\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nfunction setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\nexports.setDeprecationWarningFn = setDeprecationWarningFn;\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nvar Tensor = /** @class */ (function () {\n    function Tensor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = util.sizeFromShape(shape);\n        this.strides = util_1.computeStrides(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    /** Flatten a Tensor to a 1D array. */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.flatten = function () {\n        this.throwIfDisposed();\n        return this.as1D();\n    };\n    /** Converts a size-1 `tf.Tensor` to a `tf.Scalar`. */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.asScalar = function () {\n        this.throwIfDisposed();\n        util.assert(this.size === 1, function () { return 'The array must have only 1 element.'; });\n        return this.reshape([]);\n    };\n    /** Converts a `tf.Tensor` to a `tf.Tensor1D`. */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.as1D = function () {\n        this.throwIfDisposed();\n        return this.reshape([this.size]);\n    };\n    /**\n     * Converts a `tf.Tensor` to a `tf.Tensor2D`.\n     *\n     * @param rows Number of rows in `tf.Tensor2D`.\n     * @param columns Number of columns in `tf.Tensor2D`.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.as2D = function (rows, columns) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns]);\n    };\n    /**\n     * Converts a `tf.Tensor` to a `tf.Tensor3D`.\n     *\n     * @param rows Number of rows in `tf.Tensor3D`.\n     * @param columns Number of columns in `tf.Tensor3D`.\n     * @param depth Depth of `tf.Tensor3D`.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.as3D = function (rows, columns, depth) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth]);\n    };\n    /**\n     * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n     *\n     * @param rows Number of rows in `tf.Tensor4D`.\n     * @param columns Number of columns in `tf.Tensor4D`.\n     * @param depth Depth of `tf.Tensor4D`.\n     * @param depth2 4th dimension of `tf.Tensor4D`.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.as4D = function (rows, columns, depth, depth2) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2]);\n    };\n    /**\n     * Converts a `tf.Tensor` to a `tf.Tensor5D`.\n     *\n     * @param rows Number of rows in `tf.Tensor5D`.\n     * @param columns Number of columns in `tf.Tensor5D`.\n     * @param depth Depth of `tf.Tensor5D`.\n     * @param depth2 4th dimension of `tf.Tensor5D`.\n     * @param depth3 5th dimension of 'tf.Tensor5D'\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.as5D = function (rows, columns, depth, depth2, depth3) {\n        this.throwIfDisposed();\n        return this.reshape([rows, columns, depth, depth2, depth3]);\n    };\n    /**\n     * Casts a `tf.Tensor` to a specified dtype.\n     *\n     * @param dtype Data-type to cast the tensor to.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.asType = function (dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    };\n    Object.defineProperty(Tensor.prototype, \"rank\", {\n        get: function () {\n            return this.shape.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.buffer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var vals;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.data()];\n                    case 1:\n                        vals = _a.sent();\n                        return [2 /*return*/, opHandler.buffer(this.shape, this.dtype, vals)];\n                }\n            });\n        });\n    };\n    /** Returns a `tf.TensorBuffer` that holds the underlying data. */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.bufferSync = function () {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    };\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.array = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var vals;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.data()];\n                    case 1:\n                        vals = _a.sent();\n                        return [2 /*return*/, util_1.toNestedArray(this.shape, vals)];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.arraySync = function () {\n        return util_1.toNestedArray(this.shape, this.dataSync());\n    };\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.data = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, bytes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfDisposed();\n                        data = trackerFn().read(this.dataId);\n                        if (!(this.dtype === 'string')) return [3 /*break*/, 2];\n                        return [4 /*yield*/, data];\n                    case 1:\n                        bytes = _a.sent();\n                        try {\n                            return [2 /*return*/, bytes.map(function (b) { return util.decodeString(b); })];\n                        }\n                        catch (_b) {\n                            throw new Error('Failed to decode the string bytes into utf-8. ' +\n                                'To get the original bytes, call tensor.bytes().');\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.dataSync = function () {\n        this.throwIfDisposed();\n        var data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(function (b) { return util.decodeString(b); });\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    };\n    /** Returns the underlying bytes of the tensor's data. */\n    Tensor.prototype.bytes = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.throwIfDisposed();\n                        return [4 /*yield*/, trackerFn().read(this.dataId)];\n                    case 1:\n                        data = _a.sent();\n                        if (this.dtype === 'string') {\n                            return [2 /*return*/, data];\n                        }\n                        else {\n                            return [2 /*return*/, new Uint8Array(data.buffer)];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Disposes `tf.Tensor` from memory.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.dispose = function () {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    };\n    Object.defineProperty(Tensor.prototype, \"isDisposed\", {\n        get: function () {\n            return this.isDisposedInternal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tensor.prototype.throwIfDisposed = function () {\n        if (this.isDisposed) {\n            throw new Error(\"Tensor is disposed.\");\n        }\n    };\n    /** Casts the array to type `float32` */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.toFloat = function () {\n        return this.asType('float32');\n    };\n    /** Casts the array to type `int32` */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.toInt = function () {\n        return this.asType('int32');\n    };\n    /** Casts the array to type `bool` */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.toBool = function () {\n        return this.asType('bool');\n    };\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.print = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        return opHandler.print(this, verbose);\n    };\n    /**\n     * Reshapes the tensor into the provided shape.\n     * See `tf.reshape` for more details.\n     *\n     * @param newShape An array of integers defining the output tensor shape.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.reshape = function (newShape) {\n        this.throwIfDisposed();\n        return opHandler.reshape(this, newShape);\n    };\n    /**\n     * Reshapes the tensor into the shape of the provided tensor.\n     *\n     * @param x The tensor of required shape.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.reshapeAs = function (x) {\n        this.throwIfDisposed();\n        return this.reshape(x.shape);\n    };\n    /**\n     * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n     * into the tensor's shape. See `tf.expandDims` for details.\n     *\n     * @param axis The dimension index at which to insert shape of 1. Defaults to\n     *     0 (the first dimension).\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.expandDims = function (axis) {\n        if (axis === void 0) { axis = 0; }\n        return opHandler.expandDims(this, axis);\n    };\n    /**\n     * Returns the cumulative sum of the `tf.Tensor` along `axis`.\n     *\n     * @param axis The axis along which to sum. Optional. Defaults to 0.\n     * @param exclusive Whether to perform exclusive cumulative sum. Defaults to\n     *    false. If set to true then the sum of each tensor entry does not\n     * include its own value, but only the values previous to it along the\n     * specified axis.\n     * @param reverse Whether to sum in the opposite direction. Defaults to\n     *    false.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.cumsum = function (axis, exclusive, reverse) {\n        if (axis === void 0) { axis = 0; }\n        if (exclusive === void 0) { exclusive = false; }\n        if (reverse === void 0) { reverse = false; }\n        return opHandler.cumsum(this, axis, exclusive, reverse);\n    };\n    /**\n     * Returns a `tf.Tensor` with dimensions of size 1 removed from the shape.\n     * See `tf.squeeze` for more details.\n     *\n     * @param axis A list of numbers. If specified, only squeezes the\n     *    dimensions listed. The dimension index starts at 0. It is an error to\n     *    squeeze a dimension that is not 1.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.squeeze = function (axis) {\n        this.throwIfDisposed();\n        return opHandler.squeeze(this, axis);\n    };\n    /** Returns a copy of the tensor. See `tf.clone` for details. */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.clone = function () {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    };\n    Tensor.prototype.oneHot = function (depth, onValue, offValue) {\n        this.throwIfDisposed();\n        return opHandler.oneHot(this, depth, onValue, offValue);\n    };\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Tensor.prototype.toString = function (verbose) {\n        if (verbose === void 0) { verbose = false; }\n        var vals = this.dataSync();\n        return tensor_format_1.tensorToString(vals, this.shape, this.dtype, verbose);\n    };\n    // Below is chain API that is not exposed to docs to avoid repetition. To\n    // expose a method, move it above this comment and add @doc and jsdoc.\n    Tensor.prototype.tile = function (reps) {\n        this.throwIfDisposed();\n        return opHandler.tile(this, reps);\n    };\n    Tensor.prototype.gather = function (indices, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return opHandler.gather(this, indices, axis);\n    };\n    Tensor.prototype.matMul = function (b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        this.throwIfDisposed();\n        return opHandler.matMul(this, b, transposeA, transposeB);\n    };\n    Tensor.prototype.dot = function (b) {\n        this.throwIfDisposed();\n        return opHandler.dot(this, b);\n    };\n    Tensor.prototype.norm = function (ord, axis, keepDims) {\n        if (ord === void 0) { ord = 'euclidean'; }\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.norm(this, ord, axis, keepDims);\n    };\n    Tensor.prototype.slice = function (begin, size) {\n        this.throwIfDisposed();\n        return opHandler.slice(this, begin, size);\n    };\n    Tensor.prototype.reverse = function (axis) {\n        this.throwIfDisposed();\n        return opHandler.reverse(this, axis);\n    };\n    Tensor.prototype.concat = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        if (x instanceof Tensor) {\n            x = [x];\n        }\n        return opHandler.concat([this].concat(x), axis);\n    };\n    Tensor.prototype.split = function (numOrSizeSplits, axis) {\n        if (axis === void 0) { axis = 0; }\n        this.throwIfDisposed();\n        return opHandler.split(this, numOrSizeSplits, axis);\n    };\n    Tensor.prototype.stack = function (x, axis) {\n        if (axis === void 0) { axis = 0; }\n        return opHandler.stack([this, x], axis);\n    };\n    Tensor.prototype.unstack = function (axis) {\n        if (axis === void 0) { axis = 0; }\n        return opHandler.unstack(this, axis);\n    };\n    Tensor.prototype.pad = function (paddings, constantValue) {\n        if (constantValue === void 0) { constantValue = 0; }\n        return opHandler.pad(this, paddings, constantValue);\n    };\n    /**\n     * @deprecated Use `tf.batchNorm` instead, and note the positional argument\n     *     change of scale, offset, and varianceEpsilon.\n     */\n    Tensor.prototype.batchNormalization = function (mean, variance, varianceEpsilon, scale, offset) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        deprecationWarningFn('tf.batchNormalization() is going away. ' +\n            'Use tf.batchNorm() instead, and note the positional argument change ' +\n            'of scale, offset, and varianceEpsilon');\n        return this.batchNorm(mean, variance, offset, scale, varianceEpsilon);\n    };\n    Tensor.prototype.batchNorm = function (mean, variance, offset, scale, varianceEpsilon) {\n        if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n        this.throwIfDisposed();\n        return opHandler.batchNorm(this, mean, variance, offset, scale, varianceEpsilon);\n    };\n    // Reduction ops.\n    Tensor.prototype.all = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.all(this, axis, keepDims);\n    };\n    Tensor.prototype.any = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.any(this, axis, keepDims);\n    };\n    Tensor.prototype.logSumExp = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.logSumExp(this, axis, keepDims);\n    };\n    Tensor.prototype.sum = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.sum(this, axis, keepDims);\n    };\n    Tensor.prototype.prod = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.prod(this, axis, keepDims);\n    };\n    Tensor.prototype.mean = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.mean(this, axis, keepDims);\n    };\n    Tensor.prototype.min = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.min(this, axis, keepDims);\n    };\n    Tensor.prototype.max = function (axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        this.throwIfDisposed();\n        return opHandler.max(this, axis, keepDims);\n    };\n    Tensor.prototype.argMin = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return opHandler.argMin(this, axis);\n    };\n    Tensor.prototype.argMax = function (axis) {\n        if (axis === void 0) { axis = null; }\n        this.throwIfDisposed();\n        return opHandler.argMax(this, axis);\n    };\n    // Transformations\n    Tensor.prototype.cast = function (dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    };\n    // Binary ops.\n    Tensor.prototype.add = function (x) {\n        this.throwIfDisposed();\n        return opHandler.add(this, x);\n    };\n    Tensor.prototype.addStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.addStrict(this, x);\n    };\n    Tensor.prototype.atan2 = function (x) {\n        this.throwIfDisposed();\n        return opHandler.atan2(this, x);\n    };\n    Tensor.prototype.sub = function (x) {\n        this.throwIfDisposed();\n        return opHandler.sub(this, x);\n    };\n    Tensor.prototype.subStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.subStrict(this, x);\n    };\n    Tensor.prototype.pow = function (exp) {\n        this.throwIfDisposed();\n        return opHandler.pow(this, exp);\n    };\n    Tensor.prototype.powStrict = function (exp) {\n        this.throwIfDisposed();\n        return opHandler.powStrict(this, exp);\n    };\n    Tensor.prototype.mul = function (x) {\n        this.throwIfDisposed();\n        return opHandler.mul(this, x);\n    };\n    Tensor.prototype.mulStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.mulStrict(this, x);\n    };\n    Tensor.prototype.div = function (x) {\n        this.throwIfDisposed();\n        return opHandler.div(this, x);\n    };\n    Tensor.prototype.divNoNan = function (x) {\n        this.throwIfDisposed();\n        return opHandler.divNoNan(this, x);\n    };\n    Tensor.prototype.floorDiv = function (x) {\n        this.throwIfDisposed();\n        return opHandler.floorDiv(this, x);\n    };\n    Tensor.prototype.divStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.divStrict(this, x);\n    };\n    Tensor.prototype.minimum = function (x) {\n        this.throwIfDisposed();\n        return opHandler.minimum(this, x);\n    };\n    Tensor.prototype.minimumStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.minimumStrict(this, x);\n    };\n    Tensor.prototype.maximum = function (x) {\n        this.throwIfDisposed();\n        return opHandler.maximum(this, x);\n    };\n    Tensor.prototype.maximumStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.maximumStrict(this, x);\n    };\n    Tensor.prototype.mod = function (x) {\n        this.throwIfDisposed();\n        return opHandler.mod(this, x);\n    };\n    Tensor.prototype.modStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.modStrict(this, x);\n    };\n    Tensor.prototype.squaredDifference = function (x) {\n        this.throwIfDisposed();\n        return opHandler.squaredDifference(this, x);\n    };\n    Tensor.prototype.squaredDifferenceStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.squaredDifferenceStrict(this, x);\n    };\n    Tensor.prototype.transpose = function (perm) {\n        this.throwIfDisposed();\n        return opHandler.transpose(this, perm);\n    };\n    // Compare ops.\n    Tensor.prototype.notEqual = function (x) {\n        this.throwIfDisposed();\n        return opHandler.notEqual(this, x);\n    };\n    Tensor.prototype.notEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.notEqualStrict(this, x);\n    };\n    Tensor.prototype.less = function (x) {\n        this.throwIfDisposed();\n        return opHandler.less(this, x);\n    };\n    Tensor.prototype.lessStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.lessStrict(this, x);\n    };\n    Tensor.prototype.equal = function (x) {\n        this.throwIfDisposed();\n        return opHandler.equal(this, x);\n    };\n    Tensor.prototype.equalStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.equalStrict(this, x);\n    };\n    Tensor.prototype.lessEqual = function (x) {\n        this.throwIfDisposed();\n        return opHandler.lessEqual(this, x);\n    };\n    Tensor.prototype.lessEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.lessEqualStrict(this, x);\n    };\n    Tensor.prototype.greater = function (x) {\n        this.throwIfDisposed();\n        return opHandler.greater(this, x);\n    };\n    Tensor.prototype.greaterStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.greaterStrict(this, x);\n    };\n    Tensor.prototype.greaterEqual = function (x) {\n        this.throwIfDisposed();\n        return opHandler.greaterEqual(this, x);\n    };\n    Tensor.prototype.greaterEqualStrict = function (x) {\n        this.throwIfDisposed();\n        return opHandler.greaterEqualStrict(this, x);\n    };\n    // Compare ops.\n    Tensor.prototype.logicalAnd = function (x) {\n        this.throwIfDisposed();\n        return opHandler.logicalAnd(this, x);\n    };\n    Tensor.prototype.logicalOr = function (x) {\n        this.throwIfDisposed();\n        return opHandler.logicalOr(this, x);\n    };\n    Tensor.prototype.logicalNot = function () {\n        this.throwIfDisposed();\n        return opHandler.logicalNot(this);\n    };\n    Tensor.prototype.logicalXor = function (x) {\n        this.throwIfDisposed();\n        return opHandler.logicalXor(this, x);\n    };\n    Tensor.prototype.where = function (condition, x) {\n        this.throwIfDisposed();\n        return opHandler.where(condition, this, x);\n    };\n    // Unary ops.\n    Tensor.prototype.neg = function () {\n        this.throwIfDisposed();\n        return opHandler.neg(this);\n    };\n    Tensor.prototype.ceil = function () {\n        this.throwIfDisposed();\n        return opHandler.ceil(this);\n    };\n    Tensor.prototype.floor = function () {\n        this.throwIfDisposed();\n        return opHandler.floor(this);\n    };\n    Tensor.prototype.sign = function () {\n        this.throwIfDisposed();\n        return opHandler.sign(this);\n    };\n    Tensor.prototype.isNaN = function () {\n        this.throwIfDisposed();\n        return opHandler.isNaN(this);\n    };\n    Tensor.prototype.isInf = function () {\n        this.throwIfDisposed();\n        return opHandler.isInf(this);\n    };\n    Tensor.prototype.isFinite = function () {\n        this.throwIfDisposed();\n        return opHandler.isFinite(this);\n    };\n    Tensor.prototype.exp = function () {\n        this.throwIfDisposed();\n        return opHandler.exp(this);\n    };\n    Tensor.prototype.expm1 = function () {\n        this.throwIfDisposed();\n        return opHandler.expm1(this);\n    };\n    Tensor.prototype.log = function () {\n        this.throwIfDisposed();\n        return opHandler.log(this);\n    };\n    Tensor.prototype.log1p = function () {\n        this.throwIfDisposed();\n        return opHandler.log1p(this);\n    };\n    Tensor.prototype.sqrt = function () {\n        this.throwIfDisposed();\n        return opHandler.sqrt(this);\n    };\n    Tensor.prototype.rsqrt = function () {\n        this.throwIfDisposed();\n        return opHandler.rsqrt(this);\n    };\n    Tensor.prototype.square = function () {\n        this.throwIfDisposed();\n        return opHandler.square(this);\n    };\n    Tensor.prototype.reciprocal = function () {\n        this.throwIfDisposed();\n        return opHandler.reciprocal(this);\n    };\n    Tensor.prototype.abs = function () {\n        this.throwIfDisposed();\n        return opHandler.abs(this);\n    };\n    Tensor.prototype.clipByValue = function (min, max) {\n        this.throwIfDisposed();\n        return opHandler.clipByValue(this, min, max);\n    };\n    Tensor.prototype.relu = function () {\n        this.throwIfDisposed();\n        return opHandler.relu(this);\n    };\n    Tensor.prototype.relu6 = function () {\n        this.throwIfDisposed();\n        return opHandler.relu6(this);\n    };\n    Tensor.prototype.elu = function () {\n        this.throwIfDisposed();\n        return opHandler.elu(this);\n    };\n    Tensor.prototype.selu = function () {\n        this.throwIfDisposed();\n        return opHandler.selu(this);\n    };\n    Tensor.prototype.leakyRelu = function (alpha) {\n        if (alpha === void 0) { alpha = 0.2; }\n        this.throwIfDisposed();\n        return opHandler.leakyRelu(this, alpha);\n    };\n    Tensor.prototype.prelu = function (alpha) {\n        this.throwIfDisposed();\n        return opHandler.prelu(this, alpha);\n    };\n    Tensor.prototype.sigmoid = function () {\n        this.throwIfDisposed();\n        return opHandler.sigmoid(this);\n    };\n    Tensor.prototype.logSigmoid = function () {\n        this.throwIfDisposed();\n        return opHandler.logSigmoid(this);\n    };\n    Tensor.prototype.softplus = function () {\n        this.throwIfDisposed();\n        return opHandler.softplus(this);\n    };\n    Tensor.prototype.zerosLike = function () {\n        this.throwIfDisposed();\n        return opHandler.zerosLike(this);\n    };\n    Tensor.prototype.onesLike = function () {\n        this.throwIfDisposed();\n        return opHandler.onesLike(this);\n    };\n    Tensor.prototype.sin = function () {\n        this.throwIfDisposed();\n        return opHandler.sin(this);\n    };\n    Tensor.prototype.cos = function () {\n        this.throwIfDisposed();\n        return opHandler.cos(this);\n    };\n    Tensor.prototype.tan = function () {\n        this.throwIfDisposed();\n        return opHandler.tan(this);\n    };\n    Tensor.prototype.asin = function () {\n        this.throwIfDisposed();\n        return opHandler.asin(this);\n    };\n    Tensor.prototype.acos = function () {\n        this.throwIfDisposed();\n        return opHandler.acos(this);\n    };\n    Tensor.prototype.atan = function () {\n        this.throwIfDisposed();\n        return opHandler.atan(this);\n    };\n    Tensor.prototype.sinh = function () {\n        this.throwIfDisposed();\n        return opHandler.sinh(this);\n    };\n    Tensor.prototype.cosh = function () {\n        this.throwIfDisposed();\n        return opHandler.cosh(this);\n    };\n    Tensor.prototype.tanh = function () {\n        this.throwIfDisposed();\n        return opHandler.tanh(this);\n    };\n    Tensor.prototype.asinh = function () {\n        this.throwIfDisposed();\n        return opHandler.asinh(this);\n    };\n    Tensor.prototype.acosh = function () {\n        this.throwIfDisposed();\n        return opHandler.acosh(this);\n    };\n    Tensor.prototype.atanh = function () {\n        this.throwIfDisposed();\n        return opHandler.atanh(this);\n    };\n    Tensor.prototype.erf = function () {\n        this.throwIfDisposed();\n        return opHandler.erf(this);\n    };\n    Tensor.prototype.round = function () {\n        this.throwIfDisposed();\n        return opHandler.round(this);\n    };\n    Tensor.prototype.step = function (alpha) {\n        if (alpha === void 0) { alpha = 0.0; }\n        this.throwIfDisposed();\n        return opHandler.step(this, alpha);\n    };\n    Tensor.prototype.softmax = function (dim) {\n        if (dim === void 0) { dim = -1; }\n        this.throwIfDisposed();\n        return opHandler.softmax(this, dim);\n    };\n    Tensor.prototype.logSoftmax = function (axis) {\n        if (axis === void 0) { axis = -1; }\n        this.throwIfDisposed();\n        return opHandler.logSoftmax(this, axis);\n    };\n    // Image ops.\n    Tensor.prototype.resizeBilinear = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return opHandler.image.resizeBilinear(this, newShape2D, alignCorners);\n    };\n    Tensor.prototype.resizeNearestNeighbor = function (newShape2D, alignCorners) {\n        if (alignCorners === void 0) { alignCorners = false; }\n        this.throwIfDisposed();\n        return opHandler.image.resizeNearestNeighbor(this, newShape2D, alignCorners);\n    };\n    // Convolutions.\n    Tensor.prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NWC'; }\n        if (dilation === void 0) { dilation = 1; }\n        this.throwIfDisposed();\n        return opHandler.conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n    };\n    Tensor.prototype.conv2d = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return opHandler.conv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.conv2dTranspose = function (filter, outputShape, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return opHandler.conv2dTranspose(this, filter, outputShape, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.depthwiseConv2D = function (filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        if (dilations === void 0) { dilations = [1, 1]; }\n        this.throwIfDisposed();\n        return opHandler.depthwiseConv2d(this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n    };\n    Tensor.prototype.separableConv2d = function (depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n        if (dilation === void 0) { dilation = [1, 1]; }\n        if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n        this.throwIfDisposed();\n        return opHandler.separableConv2d(this, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat);\n    };\n    // Pooling.\n    Tensor.prototype.avgPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return opHandler.avgPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.maxPool = function (filterSize, strides, pad, dimRoundingMode) {\n        this.throwIfDisposed();\n        return opHandler.maxPool(this, filterSize, strides, pad, dimRoundingMode);\n    };\n    Tensor.prototype.localResponseNormalization = function (radius, bias, alpha, beta) {\n        if (radius === void 0) { radius = 5; }\n        if (bias === void 0) { bias = 1; }\n        if (alpha === void 0) { alpha = 1; }\n        if (beta === void 0) { beta = 0.5; }\n        return opHandler.localResponseNormalization(this, radius, bias, alpha, beta);\n    };\n    Tensor.prototype.pool = function (windowShape, poolingType, padding, dilationRate, strides) {\n        this.throwIfDisposed();\n        return opHandler.pool(this, windowShape, poolingType, padding, dilationRate, strides);\n    };\n    Tensor.prototype.variable = function (trainable, name, dtype) {\n        if (trainable === void 0) { trainable = true; }\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    };\n    Tensor.prototype.unsortedSegmentSum = function (segmentIds, numSegments) {\n        this.throwIfDisposed();\n        return opHandler.unsortedSegmentSum(this, segmentIds, numSegments);\n    };\n    Tensor.prototype.batchToSpaceND = function (blockShape, crops) {\n        this.throwIfDisposed();\n        return opHandler.batchToSpaceND(this, blockShape, crops);\n    };\n    Tensor.prototype.spaceToBatchND = function (blockShape, paddings) {\n        this.throwIfDisposed();\n        return opHandler.spaceToBatchND(this, blockShape, paddings);\n    };\n    Tensor.prototype.topk = function (k, sorted) {\n        if (k === void 0) { k = 1; }\n        if (sorted === void 0) { sorted = true; }\n        this.throwIfDisposed();\n        return opHandler.topk(this, k, sorted);\n    };\n    Tensor.prototype.stridedSlice = function (begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n        if (beginMask === void 0) { beginMask = 0; }\n        if (endMask === void 0) { endMask = 0; }\n        if (ellipsisMask === void 0) { ellipsisMask = 0; }\n        if (newAxisMask === void 0) { newAxisMask = 0; }\n        if (shrinkAxisMask === void 0) { shrinkAxisMask = 0; }\n        this.throwIfDisposed();\n        return opHandler.stridedSlice(this, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    };\n    Tensor.prototype.depthToSpace = function (blockSize, dataFormat) {\n        this.throwIfDisposed();\n        return opHandler.depthToSpace(this, blockSize, dataFormat);\n    };\n    Tensor.prototype.fft = function () {\n        this.throwIfDisposed();\n        return opHandler.spectral.fft(this);\n    };\n    Tensor.prototype.ifft = function () {\n        this.throwIfDisposed();\n        return opHandler.spectral.ifft(this);\n    };\n    Tensor.prototype.rfft = function () {\n        this.throwIfDisposed();\n        return opHandler.spectral.rfft(this);\n    };\n    Tensor.prototype.irfft = function () {\n        this.throwIfDisposed();\n        return opHandler.spectral.irfft(this);\n    };\n    return Tensor;\n}());\nexports.Tensor = Tensor;\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: function (instance) {\n        return !!instance && instance.dataId != null && instance.shape != null &&\n            instance.dtype != null;\n    }\n});\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nvar Variable = /** @class */ (function (_super) {\n    __extends(Variable, _super);\n    function Variable(initialValue, trainable, name, tensorId) {\n        var _this = _super.call(this, initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId) || this;\n        _this.trainable = trainable;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     */\n    /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n    Variable.prototype.assign = function (newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(\"dtype of the new value (\" + newValue.dtype + \") and \" +\n                (\"previous value (\" + this.dtype + \") must match\"));\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(\"shape of the new value (\" + newValue.shape + \") and \" +\n                (\"previous value (\" + this.shape + \") must match\"));\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    };\n    Variable.prototype.dispose = function () {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    };\n    return Variable;\n}(Tensor));\nexports.Variable = Variable;\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: function (instance) {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar PackingScheme;\n(function (PackingScheme) {\n    /**\n     * All values in a single texel are densely packed without any constraints.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 4]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   010|011   020|021\n     * -------   -------   -------\n     * 002|003   012|013   022|023\n     *\n     * 100|101   110|111   120|121\n     * -------   -------   -------\n     * 102|103   112|113   122|123\n     *\n     */\n    PackingScheme[PackingScheme[\"DENSE\"] = 0] = \"DENSE\";\n    /**\n     * Single texels contain only values from the same batch, and from adjacent\n     * rows and columns.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 5]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   002|003   004|xxx   020|021   022|023   024|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     * 100|101   102|103   104|xxx   120|121   122|123   124|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     */\n    PackingScheme[PackingScheme[\"SHARED_BATCH\"] = 1] = \"SHARED_BATCH\";\n})(PackingScheme = exports.PackingScheme || (exports.PackingScheme = {}));\nvar TextureUsage;\n(function (TextureUsage) {\n    TextureUsage[TextureUsage[\"RENDER\"] = 0] = \"RENDER\";\n    TextureUsage[TextureUsage[\"UPLOAD\"] = 1] = \"UPLOAD\";\n    TextureUsage[TextureUsage[\"PIXELS\"] = 2] = \"PIXELS\";\n    TextureUsage[TextureUsage[\"DOWNLOAD\"] = 3] = \"DOWNLOAD\";\n})(TextureUsage = exports.TextureUsage || (exports.TextureUsage = {}));\nvar PhysicalTextureType;\n(function (PhysicalTextureType) {\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT16\"] = 0] = \"UNPACKED_FLOAT16\";\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT32\"] = 1] = \"UNPACKED_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_4X1_UNSIGNED_BYTE\"] = 2] = \"PACKED_4X1_UNSIGNED_BYTE\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT32\"] = 3] = \"PACKED_2X2_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT16\"] = 4] = \"PACKED_2X2_FLOAT16\";\n})(PhysicalTextureType = exports.PhysicalTextureType || (exports.PhysicalTextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexports.getUnpackedMatrixTextureShapeWidthHeight = getUnpackedMatrixTextureShapeWidthHeight;\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexports.getUnpackedArraySizeFromMatrixSize = getUnpackedArraySizeFromMatrixSize;\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\nexports.getColorMatrixTextureShapeWidthHeight = getColorMatrixTextureShapeWidthHeight;\n/**\n * Get shape for densely packed RGBA texture.\n */\nfunction getDenseTexShape(shape) {\n    var size = util.sizeFromShape(shape);\n    var texelsNeeded = Math.ceil(size / 4);\n    return util.sizeToSquarishShape(texelsNeeded);\n}\nexports.getDenseTexShape = getDenseTexShape;\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(\"unpackedSize (\" + unpackedSize + \") must be a multiple of \" +\n            (\"\" + channelsPerTexture));\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexports.getMatrixSizeFromUnpackedArraySize = getMatrixSizeFromUnpackedArraySize;\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    var requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(\"matrix length (\" + matrix.length + \") must be >= \" + requiredSize);\n    }\n    var dst = 0;\n    for (var src = 0; src < unpackedArray.length; src += 4) {\n        for (var c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexports.decodeMatrixFromUnpackedColorRGBAArray = decodeMatrixFromUnpackedColorRGBAArray;\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [\n        Math.max(1, Math.ceil(columns / 2)), Math.max(1, Math.ceil(rows / 2))\n    ];\n}\nexports.getPackedMatrixTextureShapeWidthHeight = getPackedMatrixTextureShapeWidthHeight;\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    var _a = getPackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    return w * h * 4;\n}\nexports.getPackedRGBAArraySizeFromMatrixShape = getPackedRGBAArraySizeFromMatrixShape;\nfunction getTextureConfig(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    // tslint:disable-next-line:no-any\n    var glany = gl;\n    var internalFormatFloat;\n    var internalFormatHalfFloat;\n    var internalFormatPackedHalfFloat;\n    var internalFormatPackedFloat;\n    var textureFormatFloat;\n    var downloadTextureFormat;\n    var downloadUnpackNumChannels;\n    var defaultNumChannels;\n    var textureTypeHalfFloat;\n    var textureTypeFloat;\n    if (environment_1.env().getNumber('WEBGL_VERSION') === 2) {\n        internalFormatFloat = glany.R32F;\n        internalFormatHalfFloat = glany.R16F;\n        internalFormatPackedHalfFloat = glany.RGBA16F;\n        internalFormatPackedFloat = glany.RGBA32F;\n        textureFormatFloat = glany.RED;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 1;\n        textureTypeHalfFloat = glany.HALF_FLOAT;\n        textureTypeFloat = glany.FLOAT;\n    }\n    else {\n        internalFormatFloat = gl.RGBA;\n        internalFormatHalfFloat = gl.RGBA;\n        internalFormatPackedHalfFloat = gl.RGBA;\n        internalFormatPackedFloat = glany.RGBA;\n        textureFormatFloat = gl.RGBA;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 4;\n        textureTypeHalfFloat = textureHalfFloatExtension != null ?\n            textureHalfFloatExtension.HALF_FLOAT_OES :\n            null;\n        textureTypeFloat = gl.FLOAT;\n    }\n    downloadTextureFormat = gl.RGBA;\n    return {\n        internalFormatFloat: internalFormatFloat,\n        internalFormatHalfFloat: internalFormatHalfFloat,\n        internalFormatPackedHalfFloat: internalFormatPackedHalfFloat,\n        internalFormatPackedFloat: internalFormatPackedFloat,\n        textureFormatFloat: textureFormatFloat,\n        downloadTextureFormat: downloadTextureFormat,\n        downloadUnpackNumChannels: downloadUnpackNumChannels,\n        defaultNumChannels: defaultNumChannels,\n        textureTypeHalfFloat: textureTypeHalfFloat,\n        textureTypeFloat: textureTypeFloat\n    };\n}\nexports.getTextureConfig = getTextureConfig;\n//# sourceMappingURL=tex_util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar environment_1 = require(\"../../environment\");\nfunction getGlslDifferences() {\n    var version;\n    var attribute;\n    var varyingVs;\n    var varyingFs;\n    var texture2D;\n    var output;\n    var defineOutput;\n    var defineSpecialNaN;\n    var defineSpecialInf;\n    var defineRound;\n    if (environment_1.env().getNumber('WEBGL_VERSION') === 2) {\n        version = '#version 300 es';\n        attribute = 'in';\n        varyingVs = 'out';\n        varyingFs = 'in';\n        texture2D = 'texture';\n        output = 'outputColor';\n        defineOutput = 'out vec4 outputColor;';\n        // Use custom isnan definition to work across differences between\n        // implementations on various platforms. While this should happen in ANGLE\n        // we still see differences between android and windows (on chrome) when\n        // using isnan directly.\n        defineSpecialNaN = \"\\n      bool isnan_custom(float val) {\\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\\n      }\\n\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan_custom(val.x),\\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\\n      }\\n\\n      #define isnan(value) isnan_custom(value)\\n    \";\n        // In webgl 2 we do not need to specify a custom isinf so there is no\n        // need for a special INFINITY constant.\n        defineSpecialInf = \"\";\n        defineRound = \"\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \";\n    }\n    else {\n        version = '';\n        attribute = 'attribute';\n        varyingVs = 'varying';\n        varyingFs = 'varying';\n        texture2D = 'texture2D';\n        output = 'gl_FragColor';\n        defineOutput = '';\n        // WebGL1 has no built in isnan so we define one here.\n        defineSpecialNaN = \"\\n      #define isnan(value) isnan_custom(value)\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n      }\\n    \";\n        defineSpecialInf = \"\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    \";\n        defineRound = \"\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \";\n    }\n    return {\n        version: version,\n        attribute: attribute,\n        varyingVs: varyingVs,\n        varyingFs: varyingFs,\n        texture2D: texture2D,\n        output: output,\n        defineOutput: defineOutput,\n        defineSpecialNaN: defineSpecialNaN,\n        defineSpecialInf: defineSpecialInf,\n        defineRound: defineRound\n    };\n}\nexports.getGlslDifferences = getGlslDifferences;\n//# sourceMappingURL=glsl_version.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_1 = require(\"../tensor\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar axis_util_1 = require(\"./axis_util\");\nvar concat_split_1 = require(\"./concat_split\");\nvar operation_1 = require(\"./operation\");\nvar rand_1 = require(\"./rand\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction broadcastTo_(x, shape) {\n    var input = tensor_util_env_1.convertToTensor(x, 'broadcastTo', 'x');\n    var xShape = input.shape;\n    if (shape.some(function (d) { return !(d > 0) || d % 1 !== 0; })) {\n        throw new Error(\"broadcastTo(): Invalid broadcast shape [\" + shape + \"].\");\n    }\n    if (shape.length < input.rank) {\n        throw new Error(\"broadcastTo(): shape.length=\" + shape.length + \" < input.rank=\" + input.rank + \".\");\n    }\n    if (shape.length > input.rank) {\n        var newShape = input.shape.slice();\n        while (newShape.length < shape.length) {\n            newShape.unshift(1);\n        }\n        input = input.reshape(newShape);\n    }\n    var reps = Array.from(shape);\n    for (var i = shape.length - 1; i >= 0; i--) {\n        if (input.shape[i] === shape[i]) {\n            reps[i] = 1;\n        }\n        else if (input.shape[i] !== 1) {\n            throw new Error(\"broadcastTo(): [\" + xShape + \"] cannot be broadcast to [\" + shape + \"].\");\n        }\n    }\n    var axes = reps.map(function (n, i) { return n > 1 ? i : -1; }).filter(function (i) { return i >= 0; });\n    if (axes.length === 0) {\n        return input.clone();\n    }\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.tile(input, reps); }, { input: input }, function (dy) {\n        return ({ input: function () { return dy.sum(axes, /*keepDims=*/ true); } });\n    });\n}\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction clone_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'clone', null);\n    var der = function (dy) {\n        return { $x: function () { return dy.toFloat(); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function () { return engine_1.ENGINE.makeTensorFromDataId($x.dataId, $x.shape, $x.dtype); }, { $x: $x }, der);\n}\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction eye_(numRows, numColumns, batchShape, dtype) {\n    if (dtype === void 0) { dtype = 'float32'; }\n    if (numColumns == null) {\n        numColumns = numRows;\n    }\n    var buff = buffer([numRows, numColumns], dtype);\n    var n = numRows <= numColumns ? numRows : numColumns;\n    for (var i = 0; i < n; ++i) {\n        buff.set(1, i, i);\n    }\n    var out = buff.toTensor().as2D(numRows, numColumns);\n    if (batchShape == null) {\n        return out;\n    }\n    else {\n        if (batchShape.length === 1) {\n            return exports.tile(exports.expandDims(out, 0), [batchShape[0], 1, 1]);\n        }\n        else if (batchShape.length === 2) {\n            return exports.tile(exports.expandDims(exports.expandDims(out, 0), 0), [batchShape[0], batchShape[1], 1, 1]);\n        }\n        else if (batchShape.length === 3) {\n            return exports.tile(exports.expandDims(exports.expandDims(exports.expandDims(out, 0), 0), 0), [batchShape[0], batchShape[1], batchShape[2], 1, 1]);\n        }\n        else {\n            throw new Error(\"eye() currently supports only 1D and 2D \" +\n                (\n                // tslint:disable-next-line:no-any\n                \"batchShapes, but received \" + batchShape.length + \"D.\"));\n        }\n    }\n}\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction randomNormal_(shape, mean, stdDev, dtype, seed) {\n    if (mean === void 0) { mean = 0; }\n    if (stdDev === void 0) { stdDev = 1; }\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(\"Unsupported data type \" + dtype);\n    }\n    var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n    var res = buffer(shape, dtype);\n    for (var i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction truncatedNormal_(shape, mean, stdDev, dtype, seed) {\n    if (mean === void 0) { mean = 0; }\n    if (stdDev === void 0) { stdDev = 1; }\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(\"Unsupported data type \" + dtype);\n    }\n    var randGauss = new rand_1.MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n    var res = buffer(shape, dtype);\n    for (var i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction randomGamma_(shape, alpha, beta, dtype, seed) {\n    if (beta === void 0) { beta = 1; }\n    if (dtype === void 0) { dtype = 'float32'; }\n    if (beta == null) {\n        beta = 1;\n    }\n    if (dtype == null) {\n        dtype = 'float32';\n    }\n    if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new Error(\"Unsupported data type \" + dtype);\n    }\n    var rgamma = new rand_1.RandGamma(alpha, beta, dtype, seed);\n    var res = buffer(shape, dtype);\n    for (var i = 0; i < res.values.length; i++) {\n        res.values[i] = rgamma.nextValue();\n    }\n    return res.toTensor();\n}\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction randomUniform_(shape, minval, maxval, dtype, seed) {\n    if (minval === void 0) { minval = 0; }\n    if (maxval === void 0) { maxval = 1; }\n    if (dtype === void 0) { dtype = 'float32'; }\n    var res = buffer(shape, dtype);\n    var random = new rand_1.UniformRandom(minval, maxval, null, seed);\n    for (var i = 0; i < res.values.length; i++) {\n        res.values[i] = random.nextValue();\n    }\n    return res.toTensor();\n}\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\nfunction rand_(shape, randFunction, dtype) {\n    var size = util.sizeFromShape(shape);\n    var values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(\"Unknown data type \" + dtype);\n    }\n    for (var i = 0; i < size; i++) {\n        values[i] = randFunction();\n    }\n    return engine_1.ENGINE.makeTensor(values, shape, dtype);\n}\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction multinomial_(logits, numSamples, seed, normalized) {\n    if (normalized === void 0) { normalized = false; }\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'multinomial');\n    var numOutcomes = $logits.size;\n    var origRank = $logits.rank;\n    if (numOutcomes < 2) {\n        throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \" +\n            (numOutcomes + \".\"));\n    }\n    if (origRank > 2) {\n        throw new Error(\"Rank of probabilities must be 1 or 2, but is \" + origRank);\n    }\n    seed = seed || Math.random();\n    var logits2D = origRank === 1 ? $logits.as2D(1, -1) : $logits;\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.multinomial(logits2D, normalized, numSamples, seed); }, { logits2D: logits2D });\n    return origRank === 1 ? res.as1D() : res;\n}\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction oneHot_(indices, depth, onValue, offValue) {\n    if (onValue === void 0) { onValue = 1; }\n    if (offValue === void 0) { offValue = 0; }\n    if (depth < 2) {\n        throw new Error(\"Error in oneHot: depth must be >=2, but it is \" + depth);\n    }\n    var $indices = tensor_util_env_1.convertToTensor(indices, 'indices', 'oneHot', 'int32');\n    var outShape = $indices.shape.concat([depth]);\n    $indices = $indices.flatten();\n    var grad = function (dy) {\n        return { $indices: function () { return tensor_ops_1.zeros($indices.shape, 'float32'); } };\n    };\n    var result = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.oneHot($indices, depth, onValue, offValue); }, { $indices: $indices }, grad);\n    return result.reshape(outShape);\n}\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction reshape_(x, shape) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reshape', null);\n    shape = util.inferFromImplicitShape(shape, $x.size);\n    util.assert($x.size === util.sizeFromShape(shape), function () { return 'new shape and old shape must have the same number of elements.'; });\n    var grad = function (dy) {\n        return { x: function () { return dy.reshape($x.shape); } };\n    };\n    var attrs = { shape: shape };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.reshape($x, shape); }, { x: $x }, grad, 'Reshape', attrs);\n}\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction squeeze_(x, axis) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'squeeze');\n    return exports.reshape($x, util.squeezeShape($x.shape, axis).newShape);\n}\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction cast_(x, dtype) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'cast');\n    // Sanity checks.\n    if (!util.isValidDtype(dtype)) {\n        throw new Error(\"Failed to cast to unknown dtype \" + dtype);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    var grad = function (dy) {\n        return { x: function () { return dy.clone(); } };\n    };\n    var attrs = { dtype: dtype };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.cast($x, dtype); }, { x: $x }, grad, 'Cast', attrs);\n}\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction tile_(x, reps) {\n    var parseAs = null;\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'tile', parseAs);\n    util.assert($x.rank === reps.length, function () { return \"Error in transpose: rank of input \" + $x.rank + \" \" +\n        (\"must match length of reps \" + reps + \".\"); });\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        var derX = function () {\n            var xGrad = tensor_ops_1.zerosLike($x);\n            // TODO(cais): Maybe reduce memory footprint by avoiding repeated\n            // slicing.\n            if ($x.rank === 1) {\n                for (var i = 0; i < reps[0]; ++i) {\n                    xGrad = xGrad.add(dy.slice([i * $x.shape[0]], [$x.shape[0]]));\n                }\n            }\n            else if ($x.rank === 2) {\n                for (var i = 0; i < reps[0]; ++i) {\n                    for (var j = 0; j < reps[1]; ++j) {\n                        xGrad = xGrad.add(dy.slice([i * $x.shape[0], j * $x.shape[1]], [$x.shape[0], $x.shape[1]]));\n                    }\n                }\n            }\n            else if ($x.rank === 3) {\n                for (var i = 0; i < reps[0]; ++i) {\n                    for (var j = 0; j < reps[1]; ++j) {\n                        for (var k = 0; k < reps[2]; ++k) {\n                            xGrad = xGrad.add(dy.slice([i * $x.shape[0], j * $x.shape[1], k * $x.shape[2]], [$x.shape[0], $x.shape[1], $x.shape[2]]));\n                        }\n                    }\n                }\n            }\n            else if ($x.rank === 4) {\n                for (var i = 0; i < reps[0]; ++i) {\n                    for (var j = 0; j < reps[1]; ++j) {\n                        for (var k = 0; k < reps[2]; ++k) {\n                            for (var l = 0; l < reps[3]; ++l) {\n                                xGrad = xGrad.add(dy.slice([\n                                    i * $x.shape[0], j * $x.shape[1], k * $x.shape[2],\n                                    l * $x.shape[3]\n                                ], [$x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]));\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                throw new Error(\"Gradient for tile operation is not implemented for rank-\" +\n                    ($x.rank + \" tensors yet.\"));\n            }\n            return xGrad;\n        };\n        return { $x: derX };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.tile($x, reps);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(x, paddings, constantValue) {\n    if (constantValue === void 0) { constantValue = 0; }\n    util.assert(paddings.length === 2, function () { return 'Invalid number of paddings. Must be length of 2.'; });\n    return exports.pad(x, [paddings], constantValue);\n}\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(x, paddings, constantValue) {\n    if (constantValue === void 0) { constantValue = 0; }\n    util.assert(paddings.length === 2 && paddings[0].length === 2 &&\n        paddings[1].length === 2, function () { return 'Invalid number of paddings. Must be length of 2 each.'; });\n    return exports.pad(x, paddings, constantValue);\n}\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(x, paddings, constantValue) {\n    if (constantValue === void 0) { constantValue = 0; }\n    util.assert(paddings.length === 3 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2, function () { return 'Invalid number of paddings. Must be length of 2 each.'; });\n    return exports.pad(x, paddings, constantValue);\n}\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(x, paddings, constantValue) {\n    if (constantValue === void 0) { constantValue = 0; }\n    util.assert(paddings.length === 4 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2 &&\n        paddings[3].length === 2, function () { return 'Invalid number of paddings. Must be length of 2 each.'; });\n    return exports.pad(x, paddings, constantValue);\n}\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation currently only implements the `CONSTANT` mode.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction pad_(x, paddings, constantValue) {\n    if (constantValue === void 0) { constantValue = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'pad');\n    if ($x.rank === 0) {\n        throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n    }\n    var grad = function (dy) {\n        // Pad introduces values around the original tensor, so the gradient\n        // slices the original shape out of the gradient.\n        var begin = paddings.map(function (p) { return p[0]; });\n        return { x: function () { return dy.slice(begin, $x.shape); } };\n    };\n    var attrs = { paddings: paddings, constantValue: constantValue };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.pad($x, paddings, constantValue); }, { x: $x }, grad, 'PadV2', attrs);\n}\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction stack_(tensors, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $tensors = tensor_util_env_1.convertToTensorArray(tensors, 'tensors', 'stack');\n    util.assert($tensors.length >= 1, function () { return 'Pass at least one tensor to tf.stack'; });\n    if ($tensors.length === 1) {\n        return $tensors[0].expandDims(axis);\n    }\n    var rank = $tensors[0].rank;\n    var shape = $tensors[0].shape;\n    var dtype = $tensors[0].dtype;\n    util.assert(axis <= rank, function () { return 'Axis must be <= rank of the tensor'; });\n    $tensors.forEach(function (t) {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    });\n    $tensors.forEach(function (t) {\n        util.assert(dtype === t.dtype, function () { return 'All tensors passed to stack must have matching dtypes'; });\n    });\n    var expandedTensors = $tensors.map(function (t) { return t.expandDims(axis); });\n    return concat_split_1.concat(expandedTensors, axis);\n}\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction batchToSpaceND_(x, blockShape, crops) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'batchToSpaceND');\n    var prod = blockShape.reduce(function (a, b) { return a * b; });\n    util.assert($x.rank >= 1 + blockShape.length, function () { return \"input rank is \" + $x.rank + \" but should be > than blockShape.length \" + blockShape.length; });\n    util.assert(crops.length === blockShape.length, function () { return \"crops.length is \" + crops.length + \" but should be equal to blockShape.length  \" + blockShape.length; });\n    util.assert($x.shape[0] % prod === 0, function () { return \"input tensor batch is \" + $x.shape[0] + \" but is not divisible by the product of \" +\n        (\"the elements of blockShape \" + blockShape.join(' * ') + \" === \" + prod); });\n    var grad = function (dy) {\n        return { $x: function () { return dy.spaceToBatchND(blockShape, crops); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.batchToSpaceND($x, blockShape, crops); }, { $x: $x }, grad);\n}\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction spaceToBatchND_(x, blockShape, paddings) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'spaceToBatchND');\n    util.assert($x.rank >= 1 + blockShape.length, function () { return \"input rank \" + $x.rank + \" should be > than [blockShape] \" + blockShape.length; });\n    util.assert(paddings.length === blockShape.length, function () { return \"paddings.shape[0] \" + paddings.length + \" must be equal to [blockShape] \" + blockShape.length; });\n    util.assert($x.shape.reduce(function (a, b, i) {\n        if (i > 0 && i <= blockShape.length) {\n            return a &&\n                ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                    blockShape[i - 1] ===\n                    0);\n        }\n        return a;\n    }, true), function () { return \"input spatial dimensions \" + $x.shape.slice(1) + \" with paddings \" + paddings.toString() + \" must be divisible by blockShapes \" + blockShape.toString(); });\n    var grad = function (dy) {\n        return { $x: function () { return dy.batchToSpaceND(blockShape, paddings); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.spaceToBatchND($x, blockShape, paddings); }, { $x: $x }, grad);\n}\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction unstack_(x, axis) {\n    if (axis === void 0) { axis = 0; }\n    axis = axis || 0;\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'unstack');\n    util.assert(axis >= -$x.shape.length && axis < $x.shape.length, function () {\n        return \"Axis = \" + axis + \" is not in [-\" + $x.shape.length + \", \" + $x.shape.length + \")\";\n    });\n    if (axis < 0) {\n        axis += $x.shape.length;\n    }\n    var grad = function (dy) {\n        return { x: function () { return exports.stack(dy, axis); } };\n    };\n    var attrs = { axis: axis };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.unstack($x, axis); }, { x: $x }, grad, 'Unpack', attrs);\n}\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n */\n/** @doc {heading: 'Operations', subheading: 'Scan'} */\nfunction cumsum_(x, axis, exclusive, reverse) {\n    if (axis === void 0) { axis = 0; }\n    if (exclusive === void 0) { exclusive = false; }\n    if (reverse === void 0) { reverse = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'cumsum');\n    axis = axis | 0;\n    var permutation = axis_util_1.getAxesPermutation([axis], $x.rank);\n    var permutedX = $x;\n    if (permutation != null) {\n        permutedX = $x.transpose(permutation);\n    }\n    var permutedAxis = axis_util_1.getInnerMostAxes(1, $x.rank)[0];\n    var grad = function (dy) {\n        return { permutedX: function () { return dy.cumsum(axis, exclusive, !reverse); } };\n    };\n    var value = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.cumsum(permutedX, permutedAxis, exclusive, reverse); }, { permutedX: permutedX }, grad);\n    if (permutation != null) {\n        value = value.transpose(permutation);\n    }\n    return value;\n}\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction expandDims_(x, axis) {\n    if (axis === void 0) { axis = 0; }\n    var parseAs = null;\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'expandDims', parseAs);\n    util.assert(axis <= $x.rank, function () { return 'Axis must be <= rank of the tensor'; });\n    var newShape = $x.shape.slice();\n    if (axis < 0) {\n        // Negative value is counted from the tail of rank.\n        util.assert(-($x.rank + 1) <= axis, function () { return \"Axis must be in the interval [\" + -($x.rank + 1) + \", \" + $x.rank + \"]\"; });\n        axis = $x.rank + axis + 1;\n    }\n    newShape.splice(axis, 0, 1);\n    return exports.reshape($x, newShape);\n}\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction depthToSpace_(x, blockSize, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'depthToSpace');\n    var inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n    var inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n    var inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n    util.assert(inputHeight * blockSize >= 0, function () { return \"Negative dimension size caused by overflow when multiplying\\n      \" + inputHeight + \" and \" + blockSize + \"  for depthToSpace with input shape\\n      \" + $x.shape; });\n    util.assert(inputWidth * blockSize >= 0, function () { return \"Negative dimension size caused by overflow when multiplying\\n      \" + inputWidth + \" and \" + blockSize + \" for depthToSpace with input shape\\n          \" + $x.shape; });\n    util.assert((inputDepth % (blockSize * blockSize) === 0), function () { return \"Dimension size must be evenly divisible by \" + blockSize * blockSize + \" but is \" + inputDepth + \" for depthToSpace with input shape \" + $x.shape; });\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.depthToSpace($x, blockSize, dataFormat); }, { $x: $x });\n}\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction setdiff1dAsync_(x, y) {\n    return __awaiter(this, void 0, void 0, function () {\n        var $x, $y, xVals, yVals, ySet, outputSize, i, buffer, indices, i, p;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    $x = tensor_util_env_1.convertToTensor(x, 'x', 'setdiff1d');\n                    $y = tensor_util_env_1.convertToTensor(y, 'y', 'setdiff1d');\n                    util.assert($x.dtype === $y.dtype, function () { return \"x and y should have the same dtype, but got x (\" + $x.dtype + \") and y (\" + $y.dtype + \").\"; });\n                    util.assert($x.rank === 1, function () { return \"x should be 1D tensor, but got x (\" + $x.shape + \").\"; });\n                    util.assert($y.rank === 1, function () { return \"y should be 1D tensor, but got y (\" + $y.shape + \").\"; });\n                    return [4 /*yield*/, $x.data()];\n                case 1:\n                    xVals = _a.sent();\n                    return [4 /*yield*/, $y.data()];\n                case 2:\n                    yVals = _a.sent();\n                    ySet = new Set(yVals);\n                    outputSize = 0;\n                    for (i = 0; i < xVals.length; i++) {\n                        if (!ySet.has(xVals[i])) {\n                            outputSize++;\n                        }\n                    }\n                    buffer = new tensor_1.TensorBuffer([outputSize], $x.dtype);\n                    indices = new tensor_1.TensorBuffer([outputSize], 'int32');\n                    for (i = 0, p = 0; i < xVals.length; i++) {\n                        if (!ySet.has(xVals[i])) {\n                            buffer.values[p] = xVals[i];\n                            indices.values[p] = i;\n                            p++;\n                        }\n                    }\n                    return [2 /*return*/, [buffer.toTensor(), indices.toTensor()]];\n            }\n        });\n    });\n}\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction buffer(shape, dtype, values) {\n    if (dtype === void 0) { dtype = 'float32'; }\n    dtype = dtype || 'float32';\n    util.assertNonNegativeIntegerDimensions(shape);\n    return new tensor_1.TensorBuffer(shape, dtype, values);\n}\nexports.buffer = buffer;\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction print(x, verbose) {\n    if (verbose === void 0) { verbose = false; }\n    console.log(x.toString(verbose));\n}\nexports.print = print;\nexports.batchToSpaceND = operation_1.op({ batchToSpaceND_: batchToSpaceND_ });\nexports.broadcastTo = operation_1.op({ broadcastTo_: broadcastTo_ });\nexports.cast = operation_1.op({ cast_: cast_ });\nexports.clone = operation_1.op({ clone_: clone_ });\nexports.cumsum = operation_1.op({ cumsum_: cumsum_ });\nexports.depthToSpace = operation_1.op({ depthToSpace_: depthToSpace_ });\nexports.expandDims = operation_1.op({ expandDims_: expandDims_ });\nexports.eye = operation_1.op({ eye_: eye_ });\nexports.multinomial = operation_1.op({ multinomial_: multinomial_ });\nexports.oneHot = operation_1.op({ oneHot_: oneHot_ });\nexports.pad = operation_1.op({ pad_: pad_ });\nexports.pad1d = operation_1.op({ pad1d_: pad1d_ });\nexports.pad2d = operation_1.op({ pad2d_: pad2d_ });\nexports.pad3d = operation_1.op({ pad3d_: pad3d_ });\nexports.pad4d = operation_1.op({ pad4d_: pad4d_ });\nexports.rand = operation_1.op({ rand_: rand_ });\nexports.randomNormal = operation_1.op({ randomNormal_: randomNormal_ });\nexports.randomGamma = operation_1.op({ randomGamma_: randomGamma_ });\nexports.randomUniform = operation_1.op({ randomUniform_: randomUniform_ });\nexports.reshape = operation_1.op({ reshape_: reshape_ });\nexports.spaceToBatchND = operation_1.op({ spaceToBatchND_: spaceToBatchND_ });\nexports.squeeze = operation_1.op({ squeeze_: squeeze_ });\nexports.stack = operation_1.op({ stack_: stack_ });\nexports.tile = operation_1.op({ tile_: tile_ });\nexports.truncatedNormal = operation_1.op({ truncatedNormal_: truncatedNormal_ });\nexports.unstack = operation_1.op({ unstack_: unstack_ });\nexports.setdiff1dAsync = setdiff1dAsync_;\n//# sourceMappingURL=array_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nfunction axesAreInnerMostDims(axes, rank) {\n    for (var i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.axesAreInnerMostDims = axesAreInnerMostDims;\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    var rank = outputLoc.length + reduceLoc.length;\n    var loc = [];\n    var outIdx = 0;\n    var reduceIdx = 0;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexports.combineLocations = combineLocations;\nfunction computeOutAndReduceShapes(aShape, axes) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    var reduceShape = axes.map(function (dim) { return aShape[dim]; });\n    return [outShape, reduceShape];\n}\nexports.computeOutAndReduceShapes = computeOutAndReduceShapes;\nfunction expandShapeToKeepDim(shape, axes) {\n    var reduceSubShape = axes.map(function (x) { return 1; });\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexports.expandShapeToKeepDim = expandShapeToKeepDim;\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    util.assert(axesAreInnerMostDims(axes, rank), function () { return msg + \" supports only inner-most axes for now. \" +\n        (\"Got axes \" + axes + \" and rank-\" + rank + \" input.\"); });\n}\nexports.assertAxesAreInnerMostDims = assertAxesAreInnerMostDims;\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nfunction getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    var result = [];\n    for (var i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(function (axis) { return result.push(axis); });\n    return result;\n}\nexports.getAxesPermutation = getAxesPermutation;\n/** Returns the axes permutation that undoes the original permutation. */\nfunction getUndoAxesPermutation(axes) {\n    return axes.map(function (axis, i) { return [i, axis]; })\n        .sort(function (a, b) { return a[1] - b[1]; })\n        .map(function (x) { return x[0]; });\n}\nexports.getUndoAxesPermutation = getUndoAxesPermutation;\nfunction getInnerMostAxes(numAxes, rank) {\n    var res = [];\n    for (var i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\nexports.getInnerMostAxes = getInnerMostAxes;\n//# sourceMappingURL=axis_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getVecChannels(name, rank) {\n    return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank).map(function (d) { return name + \".\" + d; });\n}\nexports.getVecChannels = getVecChannels;\nfunction getChannels(name, rank) {\n    if (rank === 1) {\n        return [name];\n    }\n    return getVecChannels(name, rank);\n}\nexports.getChannels = getChannels;\nfunction getSourceCoords(rank, dims) {\n    if (rank === 1) {\n        return 'rc';\n    }\n    var coords = '';\n    for (var i = 0; i < rank; i++) {\n        coords += dims[i];\n        if (i < rank - 1) {\n            coords += ',';\n        }\n    }\n    return coords;\n}\nexports.getSourceCoords = getSourceCoords;\n//# sourceMappingURL=packing_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nvar Serializable = /** @class */ (function () {\n    function Serializable() {\n    }\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    Serializable.prototype.getClassName = function () {\n        return this.constructor\n            .className;\n    };\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n    /** @nocollapse */\n    Serializable.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    return Serializable;\n}());\nexports.Serializable = Serializable;\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nvar SerializationMap = /** @class */ (function () {\n    function SerializationMap() {\n        this.classNameMap = {};\n    }\n    /**\n     * Returns the singleton instance of the map.\n     */\n    SerializationMap.getMap = function () {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    };\n    /**\n     * Registers the class as serializable.\n     */\n    SerializationMap.register = function (cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    };\n    return SerializationMap;\n}());\nexports.SerializationMap = SerializationMap;\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n */\n/** @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true} */\nfunction registerClass(cls) {\n    util_1.assert(cls.className != null, function () { return \"Class being registered does not have the static className \" +\n        \"property defined.\"; });\n    util_1.assert(typeof cls.className === 'string', function () { return \"className is required to be a string, but got type \" +\n        typeof cls.className; });\n    util_1.assert(cls.className.length > 0, function () { return \"Class being registered has an empty-string as its className, \" +\n        \"which is disallowed.\"; });\n    SerializationMap.register(cls);\n}\nexports.registerClass = registerClass;\n//# sourceMappingURL=serialization.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"./tensor\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nfunction makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    var dtype = types_1.upcastType(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nexports.makeTypesMatch = makeTypesMatch;\nfunction assertTypesMatch(a, b) {\n    util_1.assert(a.dtype === b.dtype, function () { return \"The dtypes of the first(\" + a.dtype + \") and\" +\n        (\" second(\" + b.dtype + \") input must match\"); });\n}\nexports.assertTypesMatch = assertTypesMatch;\nfunction isTensorInList(tensor, tensorList) {\n    for (var i = 0; i < tensorList.length; i++) {\n        if (tensorList[i].id === tensor.id) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isTensorInList = isTensorInList;\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nfunction getTensorsInContainer(result) {\n    var list = [];\n    var seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nexports.getTensorsInContainer = getTensorsInContainer;\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof tensor_1.Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    var iterable = container;\n    for (var k in iterable) {\n        var val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\n/**\n * Produces GLSL code that derives logical coordinates from a flat\n * index. The code performs integer division with each stride and decrements\n * the index until the index equals the final dimension coordinate.\n */\nfunction getLogicalCoordinatesFromFlatIndex(coords, shape, index) {\n    if (index === void 0) { index = 'index'; }\n    var strides = util.computeStrides(shape);\n    return strides\n        .map(function (stride, i) {\n        var line1 = \"int \" + coords[i] + \" = \" + index + \" / \" + stride;\n        var line2 = i === strides.length - 1 ?\n            \"int \" + coords[i + 1] + \" = \" + index + \" - \" + coords[i] + \" * \" + stride :\n            \"index -= \" + coords[i] + \" * \" + stride;\n        return line1 + \"; \" + line2 + \";\";\n    })\n        .join('');\n}\nexports.getLogicalCoordinatesFromFlatIndex = getLogicalCoordinatesFromFlatIndex;\nfunction buildVec(x) {\n    if (x.length === 1) {\n        return \"\" + x[0];\n    }\n    return \"vec\" + x.length + \"(\" + x.join(',') + \")\";\n}\n/**\n * Produces GLSL code that computes the dot product of the input x and y\n * vectors. Handles splitting inputs into increments of vec4s when necessary.\n */\nfunction dotify(x, y) {\n    if (x.length !== y.length) {\n        throw new Error(\"Vectors to be dotted must be of the same length -\" +\n            (\"got \" + x.length + \" and \" + y.length));\n    }\n    var slices = [];\n    var nearestVec4 = Math.floor(x.length / 4);\n    var nearestVec4Remainder = x.length % 4;\n    for (var i = 0; i < nearestVec4; i++) {\n        var xSlice = x.slice(i * 4, i * 4 + 4);\n        var ySlice = y.slice(i * 4, i * 4 + 4);\n        slices.push(buildVec(xSlice) + \", \" + buildVec(ySlice));\n    }\n    if (nearestVec4Remainder !== 0) {\n        var xSlice = x.slice(nearestVec4 * 4);\n        var ySlice = y.slice(nearestVec4 * 4);\n        if (xSlice.length === 1) {\n            xSlice = xSlice.map(function (d) { return \"float(\" + d + \")\"; });\n            ySlice = ySlice.map(function (d) { return \"float(\" + d + \")\"; });\n        }\n        slices.push(buildVec(xSlice) + \", \" + buildVec(ySlice));\n    }\n    return slices.map(function (d, i) { return \"dot(\" + d + \")\"; }).join('+');\n}\nexports.dotify = dotify;\n/**\n * Produces GLSL that computes the flat index from 3D coordinates.\n */\nfunction getFlatIndexFrom3D(shape) {\n    var strides = util.computeStrides(shape).map(function (d) { return d.toString(); });\n    return \"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * \" + strides[0] + \" + coords.y * \" + strides[1] + \" + coords.z;\\n  }\\n\";\n}\nexports.getFlatIndexFrom3D = getFlatIndexFrom3D;\nexports.ENCODE_FLOAT_SNIPPET = \"\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n\";\n//# sourceMappingURL=shader_compiler_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_1 = require(\"../tensor_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar types_1 = require(\"../types\");\nvar util = require(\"../util\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\nvar unary_ops_1 = require(\"./unary_ops\");\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n * We also expose `tf.addStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction add_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'add');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'add');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy) {\n        var derA = function () {\n            var res = dy;\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($a.shape);\n        };\n        var derB = function () {\n            var res = dy;\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($b.shape);\n        };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.add($a, $b); }, { a: $a, b: $b }, der, 'Add');\n}\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction addN_(tensors) {\n    util.assert(Array.isArray(tensors), function () { return 'The argument passed to tf.addN() must be a list of tensors'; });\n    util.assert(tensors.length >= 1, function () { return \"Must pass at least one tensor to tf.addN(), but got \" +\n        (\"\" + tensors.length); });\n    var $tensors = tensors.map(function (t, i) { return tensor_util_env_1.convertToTensor(t, \"tensors\" + i, 'addN'); });\n    var firstTensor = $tensors[0];\n    $tensors.forEach(function (t) {\n        if (t.dtype !== firstTensor.dtype) {\n            throw new Error('All tensors passed to tf.addN() must have the same dtype');\n        }\n    });\n    $tensors.forEach(function (t) {\n        if (!util.arraysEqual(t.shape, firstTensor.shape)) {\n            throw new Error('All tensors passed to tf.addN() must have the same shape');\n        }\n    });\n    var der = function (dy) {\n        var ders = {};\n        $tensors.forEach(function (t, i) {\n            ders[i] = function () { return dy.clone(); };\n        });\n        return ders;\n    };\n    var inputs = $tensors;\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.addN($tensors); }, inputs, der, 'AddN');\n}\n/**\n * Adds two `tf.Tensor`s element-wise, A + B.\n *\n * Inputs must be the same shape. For broadcasting support, use add() instead.\n *\n * @param a The first Tensor to add element-wise.\n * @param b The second Tensor to add element-wise.\n */\nfunction addStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'addStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'addStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in addStrict: ');\n    return $a.add($b);\n}\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * We also expose `tf.subStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction sub_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'sub');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'sub');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy) {\n        var derA = function () {\n            var res = dy;\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($a.shape);\n        };\n        var derB = function () {\n            var res = dy;\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.neg().reshape($b.shape);\n        };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.subtract($a, $b); }, { a: $a, b: $b }, der, 'Sub');\n}\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Inputs must\n * be the same shape.\n *\n * For broadcasting support, use `tf.sub` instead.\n *\n * @param a The first Tensor to subtract element-wise.\n * @param b The second Tensor to subtract element-wise.\n */\nfunction subStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'subStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'subStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in subStrict: ');\n    return $a.sub($b);\n}\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction pow_(base, exp) {\n    var $base = tensor_util_env_1.convertToTensor(base, 'base', 'pow');\n    var $exp = tensor_util_env_1.convertToTensor(exp, 'exp', 'pow');\n    var outShape = broadcast_util.assertAndGetBroadcastShape($base.shape, $exp.shape);\n    base = $base.cast(types_1.upcastType($base.dtype, $exp.dtype));\n    exp = $exp.cast(types_1.upcastType($base.dtype, $exp.dtype));\n    var grad = function (dy, saved) {\n        var $base = saved[0], $exp = saved[1], y = saved[2];\n        var derBase = function () {\n            var expFloat = $exp.toFloat();\n            var res = dy.mul(expFloat.mul($base.pow(expFloat.sub(tensor_ops_1.scalar(1)))));\n            var reduceAxes = broadcast_util.getReductionAxes($base.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($base.shape);\n        };\n        var derExp = function () {\n            var condition = $base.greater(0);\n            var logBase = $base.log().where(condition, tensor_ops_1.zerosLike($base));\n            var res = dy.mul(y.mul(logBase));\n            var reduceAxes = broadcast_util.getReductionAxes($exp.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($exp.shape);\n        };\n        return { $base: derBase, $exp: derExp };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.pow($base, $exp);\n        save([$base, $exp, y]);\n        return y;\n    }, { $base: $base, $exp: $exp }, grad);\n}\n/**\n * Computes the power of one `tf.Tensor` to another. Inputs must\n * be the same shape.\n *\n * For broadcasting support, use `tf.pow` instead.\n *\n * @param base The base tensor to pow element-wise.\n * @param exp The exponent tensor to pow element-wise.\n */\nfunction powStrict_(base, exp) {\n    util.assertShapesMatch(base.shape, exp.shape, 'Error in powStrict: ');\n    return base.pow(exp);\n}\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction mul_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'mul');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'mul');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () {\n            var res = dy.mul($b.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return res.sum(reduceAxes).reshape($a.shape);\n            }\n            return res;\n        };\n        var derB = function () {\n            var res = dy.mul($a.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return res.sum(reduceAxes).reshape($b.shape);\n            }\n            return res;\n        };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.multiply($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { a: $a, b: $b }, der, 'Mul');\n}\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B.\n *\n * Inputs must be the same shape. For broadcasting support, use `tf.mul`.\n *\n * @param a The first tensor to multiply.\n * @param b The first tensor to multiply. Must have the same\n *    dtype as `a`.\n */\nfunction mulStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'mul');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'mul');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in multiplyStrict: ');\n    return $a.mul($b);\n}\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * We also expose `tf.divStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction div_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'div');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'div');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n        return exports.floorDiv($a, $b);\n    }\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () {\n            var res = dy.div($b.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return res.sum(reduceAxes).reshape($a.shape);\n            }\n            return res;\n        };\n        var derB = function () {\n            var res = dy.mul($a.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes).reshape($b.shape);\n            }\n            var tmp = $b.square();\n            return res.div(tmp.toFloat()).neg();\n        };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.realDivide($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { a: $a, b: $b }, der, 'Div');\n}\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n * We also expose `tf.divStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction divNoNan_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'div');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'div');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var divResult = exports.div($a, $b);\n    var zeros = tensor_ops_1.zerosLike(divResult);\n    var bEqualsZero = $b.equal(zeros);\n    return logical_ops_1.where(bEqualsZero, zeros, divResult);\n}\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction floorDiv_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'floorDiv');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'floorDiv');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () {\n            var res = dy.div($b.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return res.sum(reduceAxes).reshape($a.shape);\n            }\n            return res;\n        };\n        var derB = function () {\n            var res = dy.mul($a.toFloat());\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes).reshape($b.shape);\n            }\n            var tmp = $b.square();\n            return res.div(tmp.toFloat()).neg();\n        };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.floorDiv($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { a: $a, b: $b }, der, 'FloorDiv');\n}\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Inputs must\n * be the same shape.\n *\n * @param a The first tensor as the numerator for element-wise division.\n * @param b The second tensor as the denominator for element-wise division.\n */\nfunction divStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'div');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'div');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in divideStrict: ');\n    return $a.div($b);\n}\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction mod_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'mod');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'mod');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () {\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return dy.sum(reduceAxes).reshape($a.shape);\n            }\n            return dy;\n        };\n        var derB = function () {\n            var res = dy.mul($a.div($b).floor().neg());\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                return res.sum(reduceAxes).reshape($b.shape);\n            }\n            return res;\n        };\n        return { $a: derA, $b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.mod($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { $a: $a, $b: $b }, der);\n}\n/**\n * Returns the mod of a and b (`a < b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use mod().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction modStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'modStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'modStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in modStrict: ');\n    return $a.mod($b);\n}\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction minimum_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'minimum');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'minimum');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    if ($a.dtype === 'bool') {\n        $a = $a.toInt();\n        $b = $b.toInt();\n    }\n    broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () { return dy.mul($a.lessEqual($b).toFloat()); };\n        var derB = function () { return dy.mul($a.greater($b).toFloat()); };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.minimum($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { a: $a, b: $b }, der, 'Minimum');\n}\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use minimum().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction minimumStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'minimumStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'minimumStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in minimumStrict: ');\n    return $a.minimum($b);\n}\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction maximum_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'maximum');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'maximum');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    if ($a.dtype === 'bool') {\n        $a = $a.toInt();\n        $b = $b.toInt();\n    }\n    broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () { return dy.mul($a.greaterEqual($b).toFloat()); };\n        var derB = function () { return dy.mul($a.less($b).toFloat()); };\n        return { a: derA, b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.maximum($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { a: $a, b: $b }, der, 'Maximum');\n}\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use maximum().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction maximumStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'maximumStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'maximumStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in maximumStrict: ');\n    return $a.maximum($b);\n}\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.squaredDifferenceStrict` which has the same signature as\n * this op and asserts that `a` and `b` are the same shape (does not\n * broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction squaredDifference_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'squaredDifference');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'squaredDifference');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var two = tensor_ops_1.scalar(2);\n        var derA = function () { return dy.mul($a.sub($b).mul(two)); };\n        var derB = function () { return dy.mul($b.sub($a).mul(two)); };\n        return { $a: derA, $b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.squaredDifference($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { $a: $a, $b: $b }, der);\n}\n/**\n * Returns (a - b) * (a - b) element-wise.\n *\n * Inputs must be the same shape. For broadcasting support, use\n * `tf.squaredDifference` instead.\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\nfunction squaredDifferenceStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'squaredDifferenceStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'squaredDifferenceStrict');\n    util.assertShapesMatch($a.shape, $b.shape, 'Error in squaredDifferenceStrict: ');\n    return $a.squaredDifference($b);\n}\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atan2_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'atan2');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'atan2');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var outShape = broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var der = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        var derA = function () {\n            var d = exports.add($a.square(), $b.square());\n            var res = dy.mul($b.div(d));\n            var reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($a.shape);\n        };\n        var derB = function () {\n            var d = exports.add($a.square(), $b.square());\n            var res = unary_ops_1.neg(dy.mul($a.div(d)));\n            var reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = res.sum(reduceAxes);\n            }\n            return res.reshape($b.shape);\n        };\n        return { $a: derA, $b: derB };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.atan2($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { $a: $a, $b: $b }, der);\n}\nexports.add = operation_1.op({ add_: add_ });\nexports.addN = operation_1.op({ addN_: addN_ });\nexports.addStrict = operation_1.op({ addStrict_: addStrict_ });\nexports.atan2 = operation_1.op({ atan2_: atan2_ });\nexports.div = operation_1.op({ div_: div_ });\nexports.divNoNan = operation_1.op({ divNoNan_: divNoNan_ });\nexports.divStrict = operation_1.op({ divStrict_: divStrict_ });\nexports.floorDiv = operation_1.op({ floorDiv_: floorDiv_ });\nexports.maximum = operation_1.op({ maximum_: maximum_ });\nexports.maximumStrict = operation_1.op({ maximumStrict_: maximumStrict_ });\nexports.minimum = operation_1.op({ minimum_: minimum_ });\nexports.minimumStrict = operation_1.op({ minimumStrict_: minimumStrict_ });\nexports.mod = operation_1.op({ mod_: mod_ });\nexports.modStrict = operation_1.op({ modStrict_: modStrict_ });\nexports.mul = operation_1.op({ mul_: mul_ });\nexports.mulStrict = operation_1.op({ mulStrict_: mulStrict_ });\nexports.pow = operation_1.op({ pow_: pow_ });\nexports.powStrict = operation_1.op({ powStrict_: powStrict_ });\nexports.squaredDifference = operation_1.op({ squaredDifference_: squaredDifference_ });\nexports.squaredDifferenceStrict = operation_1.op({ squaredDifferenceStrict_: squaredDifferenceStrict_ });\nexports.sub = operation_1.op({ sub_: sub_ });\nexports.subStrict = operation_1.op({ subStrict_: subStrict_ });\n//# sourceMappingURL=binary_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globals_1 = require(\"../globals\");\nvar gradients_1 = require(\"../gradients\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nvar Optimizer = /** @class */ (function (_super) {\n    __extends(Optimizer, _super);\n    function Optimizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Executes `f()` and minimizes the scalar output of `f()` by computing\n     * gradients of y with respect to the list of trainable variables provided by\n     * `varList`. If no list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to minimize.\n     * @param returnCost Whether to return the scalar cost value produced by\n     * executing `f()`.\n     * @param varList An optional list of variables to update. If specified, only\n     * the trainable variables in varList will be updated by minimize. Defaults to\n     * all trainable variables.\n     */\n    /** @doc {heading: 'Training', subheading: 'Optimizers'} */\n    Optimizer.prototype.minimize = function (f, returnCost, varList) {\n        if (returnCost === void 0) { returnCost = false; }\n        var _a = this.computeGradients(f, varList), value = _a.value, grads = _a.grads;\n        if (varList != null) {\n            var gradArray = varList.map(function (v) { return ({ name: v.name, tensor: grads[v.name] }); });\n            this.applyGradients(gradArray);\n        }\n        else {\n            this.applyGradients(grads);\n        }\n        // Dispose gradients.\n        globals_1.dispose(grads);\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    };\n    Object.defineProperty(Optimizer.prototype, \"iterations\", {\n        /**\n         * The number of iterations that this optimizer instance has been invoked for.\n         */\n        get: function () {\n            if (this.iterations_ == null) {\n                this.iterations_ = 0;\n            }\n            return this.iterations_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Optimizer.prototype.incrementIterations = function () {\n        this.iterations_ = this.iterations + 1;\n    };\n    /**\n     * Executes f() and computes the gradient of the scalar output of f() with\n     * respect to the list of trainable variables provided by `varList`. If no\n     * list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to use for computing\n     * gradients with respect to variables.\n     * @param varList An optional list of variables to compute gradients with\n     * respect to. If specified, only the trainable variables in varList will have\n     * gradients computed with respect to. Defaults to all trainable variables.\n     */\n    Optimizer.prototype.computeGradients = function (f, varList) {\n        return gradients_1.variableGrads(f, varList);\n    };\n    /**\n     * Dispose the variables (if any) owned by this optimizer instance.\n     */\n    Optimizer.prototype.dispose = function () {\n        if (this.iterations_ != null) {\n            globals_1.dispose(this.iterations_);\n        }\n    };\n    Optimizer.prototype.saveIterations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.iterations_ == null) {\n                    this.iterations_ = 0;\n                }\n                return [2 /*return*/, {\n                        name: 'iter',\n                        // TODO(cais): Use 'int64' type when available.\n                        tensor: ops_1.scalar(this.iterations_, 'int32')\n                    }];\n            });\n        });\n    };\n    Optimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error('getWeights() is not implemented for this optimizer yet.');\n            });\n        });\n    };\n    Optimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"setWeights() is not implemented for this optimizer class \" +\n                    (\"\" + this.getClassName()));\n            });\n        });\n    };\n    /**\n     * Extract the first element of the weight values and set it\n     * as the iterations counter variable of this instance of optimizer.\n     *\n     * @param weightValues\n     * @returns Weight values with the first element consumed and excluded.\n     */\n    Optimizer.prototype.extractIterations = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, weightValues[0].tensor.data()];\n                    case 1:\n                        _a.iterations_ = (_b.sent())[0];\n                        return [2 /*return*/, weightValues.slice(1)];\n                }\n            });\n        });\n    };\n    return Optimizer;\n}(serialization_1.Serializable));\nexports.Optimizer = Optimizer;\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n    value: function (instance) {\n        return instance.minimize != null && instance.computeGradients != null &&\n            instance.applyGradients != null;\n    }\n});\n//# sourceMappingURL=optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar kernelRegistry = new Map();\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nfunction getKernel(kernelName, backendName) {\n    var key = makeKey(kernelName, backendName);\n    return kernelRegistry.get(key);\n}\nexports.getKernel = getKernel;\nfunction getKernelsForBackend(backendName) {\n    var it = kernelRegistry.entries();\n    var result = [];\n    while (true) {\n        var _a = it.next(), done = _a.done, value = _a.value;\n        if (done) {\n            break;\n        }\n        var key = value[0], config = value[1];\n        var backend = key.split('_')[0];\n        if (backend === backendName) {\n            result.push(config);\n        }\n    }\n    return result;\n}\nexports.getKernelsForBackend = getKernelsForBackend;\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nfunction registerKernel(config) {\n    var kernelName = config.kernelName, backendName = config.backendName;\n    var key = makeKey(kernelName, backendName);\n    if (kernelRegistry.has(key)) {\n        throw new Error(\"The kernel '\" + kernelName + \"' for backend \" +\n            (\"'\" + backendName + \"' is already registered\"));\n    }\n    kernelRegistry.set(key, config);\n}\nexports.registerKernel = registerKernel;\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nfunction unregisterKernel(kernelName, backendName) {\n    var key = makeKey(kernelName, backendName);\n    if (!kernelRegistry.has(key)) {\n        throw new Error(\"The kernel '\" + kernelName + \"' for backend \" +\n            (\"'\" + backendName + \"' is not registered\"));\n    }\n    kernelRegistry.delete(key);\n}\nexports.unregisterKernel = unregisterKernel;\nfunction makeKey(kernelName, backendName) {\n    return backendName + \"_\" + kernelName;\n}\n//# sourceMappingURL=kernel_registry.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank = exports.Rank || (exports.Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nvar upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nfunction upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(\"Can not upcast \" + typeA + \" with \" + typeB);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\nexports.upcastType = upcastType;\n/** Returns the output type after summation. */\nfunction sumOutType(type) {\n    return upcastType(type, 'int32');\n}\nexports.sumOutType = sumOutType;\n//# sourceMappingURL=types.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParamsConsistent(shapes, axis) {\n    var rank = shapes[0].length;\n    shapes.forEach(function (shape, i) {\n        util.assert(shape.length === rank, function () {\n            return \"Error in concat\" + rank + \"D: rank of tensors[\" + i + \"] must be the same \" +\n                (\"as the rank of the rest (\" + rank + \")\");\n        });\n    });\n    util.assert(axis >= 0 && axis < rank, function () { return \"Error in concat\" + rank + \"D: axis must be between 0 and \" + (rank - 1) + \".\"; });\n    var firstShape = shapes[0];\n    shapes.forEach(function (shape, i) {\n        for (var r = 0; r < rank; r++) {\n            util.assert((r === axis) || (shape[r] === firstShape[r]), function () { return \"Error in concat\" + rank + \"D: Shape of tensors[\" + i + \"] (\" + shape + \") \" +\n                (\"does not match the shape of the rest (\" + firstShape + \") \") +\n                (\"along the non-concatenated axis \" + i + \".\"); });\n        }\n    });\n}\nexports.assertParamsConsistent = assertParamsConsistent;\nfunction computeOutShape(shapes, axis) {\n    var outputShape = shapes[0].slice();\n    for (var i = 1; i < shapes.length; i++) {\n        outputShape[axis] += shapes[i][axis];\n    }\n    return outputShape;\n}\nexports.computeOutShape = computeOutShape;\n//# sourceMappingURL=concat_util.js.map","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar where_impl_1 = require(\"../backends/where_impl\");\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar broadcast_util_1 = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalNot_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'logicalNot', 'bool');\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.logicalNot($x); }, { $x: $x });\n}\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalAnd_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'logicalAnd', 'bool');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'logicalAnd', 'bool');\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.logicalAnd($a, $b); }, { $a: $a, $b: $b });\n}\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalOr_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'logicalOr', 'bool');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'logicalOr', 'bool');\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.logicalOr($a, $b); }, { $a: $a, $b: $b });\n}\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalXor_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'logicalXor', 'bool');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'logicalXor', 'bool');\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    // x ^ y = (x | y) & ~(x & y)\n    return exports.logicalOr(a, b).logicalAnd(exports.logicalAnd(a, b).logicalNot());\n}\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same shape and type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction where_(condition, a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'where');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'where');\n    var $condition = tensor_util_env_1.convertToTensor(condition, 'condition', 'where', 'bool');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in where: ');\n    if ($condition.rank === 1) {\n        // If condition rank is 1, then the first dimension must match the size of\n        // condition.\n        util_1.assert($condition.shape[0] === $a.shape[0], function () { return 'The first dimension of `a` must match the size of `condition`.'; });\n    }\n    else {\n        // A must have the same shape as condition.\n        util_1.assertShapesMatch($condition.shape, $b.shape, 'Error in where: ');\n    }\n    // TODO(julianoks): Return null for condition gradient\n    // when backprop supports it.\n    var grad = function (dy, saved) {\n        var $condition = saved[0];\n        return {\n            $condition: function () { return tensor_ops_1.zerosLike($condition).toFloat(); },\n            $a: function () { return dy.mul($condition.cast(dy.dtype)); },\n            $b: function () { return dy.mul($condition.logicalNot().cast(dy.dtype)); }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.select($condition, $a, $b);\n        save([$condition]);\n        return res;\n    }, { $condition: $condition, $a: $a, $b: $b }, grad);\n}\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction whereAsync_(condition) {\n    return __awaiter(this, void 0, void 0, function () {\n        var $condition, vals, res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    $condition = tensor_util_env_1.convertToTensor(condition, 'condition', 'whereAsync', 'bool');\n                    return [4 /*yield*/, $condition.data()];\n                case 1:\n                    vals = _a.sent();\n                    res = where_impl_1.whereImpl($condition.shape, vals);\n                    if (condition !== $condition) {\n                        $condition.dispose();\n                    }\n                    return [2 /*return*/, res];\n            }\n        });\n    });\n}\nexports.logicalAnd = operation_1.op({ logicalAnd_: logicalAnd_ });\nexports.logicalNot = operation_1.op({ logicalNot_: logicalNot_ });\nexports.logicalOr = operation_1.op({ logicalOr_: logicalOr_ });\nexports.logicalXor = operation_1.op({ logicalXor_: logicalXor_ });\nexports.where = operation_1.op({ where_: where_ });\nexports.whereAsync = whereAsync_;\n//# sourceMappingURL=logical_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_ops_1 = require(\"../ops/tensor_ops\");\nvar util_1 = require(\"../util\");\nvar types_1 = require(\"./types\");\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nvar NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nfunction encodeWeights(tensors, group) {\n    return __awaiter(this, void 0, void 0, function () {\n        var specs, dataPromises, names, _loop_1, i, tensorValues;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    specs = [];\n                    dataPromises = [];\n                    names = Array.isArray(tensors) ?\n                        tensors.map(function (tensor) { return tensor.name; }) :\n                        Object.keys(tensors);\n                    _loop_1 = function (i) {\n                        var name_1 = names[i];\n                        var t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name_1];\n                        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n                            t.dtype !== 'string') {\n                            throw new Error(\"Unsupported dtype in weight '\" + name_1 + \"': \" + t.dtype);\n                        }\n                        var spec = { name: name_1, shape: t.shape, dtype: t.dtype };\n                        if (t.dtype === 'string') {\n                            var utf8bytes = new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                                var vals, totalNumBytes, bytes, offset, i_1, val, bytesOfLength;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, t.bytes()];\n                                        case 1:\n                                            vals = _a.sent();\n                                            totalNumBytes = vals.reduce(function (p, c) { return p + c.length; }, 0) +\n                                                NUM_BYTES_STRING_LENGTH * vals.length;\n                                            bytes = new Uint8Array(totalNumBytes);\n                                            offset = 0;\n                                            for (i_1 = 0; i_1 < vals.length; i_1++) {\n                                                val = vals[i_1];\n                                                bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                                                bytes.set(bytesOfLength, offset);\n                                                offset += NUM_BYTES_STRING_LENGTH;\n                                                bytes.set(val, offset);\n                                                offset += val.length;\n                                            }\n                                            resolve(bytes);\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                            dataPromises.push(utf8bytes);\n                        }\n                        else {\n                            dataPromises.push(t.data());\n                        }\n                        if (group != null) {\n                            spec.group = group;\n                        }\n                        specs.push(spec);\n                    };\n                    for (i = 0; i < names.length; ++i) {\n                        _loop_1(i);\n                    }\n                    return [4 /*yield*/, Promise.all(dataPromises)];\n                case 1:\n                    tensorValues = _a.sent();\n                    return [2 /*return*/, { data: concatenateTypedArrays(tensorValues), specs: specs }];\n            }\n        });\n    });\n}\nexports.encodeWeights = encodeWeights;\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nfunction decodeWeights(buffer, specs) {\n    // TODO(adarob, cais): Support quantization.\n    var out = {};\n    var offset = 0;\n    var _loop_2 = function (spec) {\n        var name_2 = spec.name;\n        var dtype = spec.dtype;\n        var shape = spec.shape;\n        var size = util_1.sizeFromShape(shape);\n        var values = void 0;\n        if ('quantization' in spec) {\n            var quantization_1 = spec.quantization;\n            if (quantization_1.dtype !== 'uint8' && quantization_1.dtype !== 'uint16') {\n                throw new Error(\"Weight \" + spec.name + \" has unknown \" +\n                    (\"quantization dtype \" + quantization_1.dtype + \". \") +\n                    \"Supported quantization dtypes are: 'uint8' and 'uint16'.\");\n            }\n            var quantizationSizeFactor = types_1.DTYPE_VALUE_SIZE_MAP[quantization_1.dtype];\n            var byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n            var quantizedArray = (quantization_1.dtype === 'uint8') ?\n                new Uint8Array(byteBuffer) :\n                new Uint16Array(byteBuffer);\n            if (dtype === 'float32') {\n                values = Float32Array.from(quantizedArray, function (v) { return v * quantization_1.scale + quantization_1.min; });\n            }\n            else if (dtype === 'int32') {\n                values = Int32Array.from(quantizedArray, function (v) { return Math.round(v * quantization_1.scale + quantization_1.min); });\n            }\n            else {\n                throw new Error(\"Unsupported dtype in weight '\" + name_2 + \"': \" + dtype);\n            }\n            offset += size * quantizationSizeFactor;\n        }\n        else if (dtype === 'string') {\n            var size_1 = util_1.sizeFromShape(spec.shape);\n            values = [];\n            for (var i = 0; i < size_1; i++) {\n                var byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n                offset += NUM_BYTES_STRING_LENGTH;\n                var bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n                values.push(bytes);\n                offset += byteLength;\n            }\n        }\n        else {\n            var dtypeFactor = types_1.DTYPE_VALUE_SIZE_MAP[dtype];\n            var byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n            if (dtype === 'float32') {\n                values = new Float32Array(byteBuffer);\n            }\n            else if (dtype === 'int32') {\n                values = new Int32Array(byteBuffer);\n            }\n            else if (dtype === 'bool') {\n                values = new Uint8Array(byteBuffer);\n            }\n            else {\n                throw new Error(\"Unsupported dtype in weight '\" + name_2 + \"': \" + dtype);\n            }\n            offset += size * dtypeFactor;\n        }\n        out[name_2] = tensor_ops_1.tensor(values, shape, dtype);\n    };\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        _loop_2(spec);\n    }\n    return out;\n}\nexports.decodeWeights = decodeWeights;\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nfunction concatenateTypedArrays(xs) {\n    // TODO(adarob, cais): Support quantization.\n    if (xs === null) {\n        throw new Error(\"Invalid input value: \" + JSON.stringify(xs));\n    }\n    var totalByteLength = 0;\n    // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n    // can have a different byte length from that of the `TypedArray` itself,\n    // for example, when the `TypedArray` is created from an offset in an\n    // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n    // the `TypedArray` in byte length. If an element of `xs` does not show\n    // this property, a new `TypedArray` that satisfy this property will be\n    // constructed and pushed into `normalizedXs`.\n    var normalizedXs = [];\n    xs.forEach(function (x) {\n        totalByteLength += x.byteLength;\n        // tslint:disable:no-any\n        normalizedXs.push(x.byteLength === x.buffer.byteLength ? x :\n            new x.constructor(x));\n        if (!(x instanceof Float32Array || x instanceof Int32Array ||\n            x instanceof Uint8Array)) {\n            throw new Error(\"Unsupported TypedArray subtype: \" + x.constructor.name);\n        }\n        // tslint:enable:no-any\n    });\n    var y = new Uint8Array(totalByteLength);\n    var offset = 0;\n    normalizedXs.forEach(function (x) {\n        y.set(new Uint8Array(x.buffer), offset);\n        offset += x.byteLength;\n    });\n    return y.buffer;\n}\nexports.concatenateTypedArrays = concatenateTypedArrays;\n// Use Buffer on Node.js instead of Blob/atob/btoa\nvar useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n        typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nfunction stringByteLength(str) {\n    if (useNodeBuffer) {\n        return Buffer.byteLength(str);\n    }\n    return new Blob([str]).size;\n}\nexports.stringByteLength = stringByteLength;\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nfunction arrayBufferToBase64String(buffer) {\n    if (useNodeBuffer) {\n        return Buffer.from(buffer).toString('base64');\n    }\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n}\nexports.arrayBufferToBase64String = arrayBufferToBase64String;\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nfunction base64StringToArrayBuffer(str) {\n    if (useNodeBuffer) {\n        var buf = Buffer.from(str, 'base64');\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n    var s = atob(str);\n    var buffer = new Uint8Array(s.length);\n    for (var i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\nexports.base64StringToArrayBuffer = base64StringToArrayBuffer;\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nfunction concatenateArrayBuffers(buffers) {\n    var totalByteLength = 0;\n    buffers.forEach(function (buffer) {\n        totalByteLength += buffer.byteLength;\n    });\n    var temp = new Uint8Array(totalByteLength);\n    var offset = 0;\n    buffers.forEach(function (buffer) {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\nexports.concatenateArrayBuffers = concatenateArrayBuffers;\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nfunction basename(path) {\n    var SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    var items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\nexports.basename = basename;\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nfunction getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ?\n            0 :\n            modelArtifacts.weightData.byteLength,\n    };\n}\nexports.getModelArtifactsInfoForJSON = getModelArtifactsInfoForJSON;\n//# sourceMappingURL=io_utils.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IORouterRegistry = /** @class */ (function () {\n    function IORouterRegistry() {\n        this.saveRouters = [];\n        this.loadRouters = [];\n    }\n    IORouterRegistry.getInstance = function () {\n        if (IORouterRegistry.instance == null) {\n            IORouterRegistry.instance = new IORouterRegistry();\n        }\n        return IORouterRegistry.instance;\n    };\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    IORouterRegistry.registerSaveRouter = function (saveRouter) {\n        IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    };\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n    IORouterRegistry.registerLoadRouter = function (loadRouter) {\n        IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    };\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n    IORouterRegistry.getSaveHandlers = function (url) {\n        return IORouterRegistry.getHandlers(url, 'save');\n    };\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param onProgress Optional, progress callback function, fired periodically\n     *   before the load is completed.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n    IORouterRegistry.getLoadHandlers = function (url, onProgress) {\n        return IORouterRegistry.getHandlers(url, 'load', onProgress);\n    };\n    IORouterRegistry.getHandlers = function (url, handlerType, onProgress) {\n        var validHandlers = [];\n        var routers = handlerType === 'load' ?\n            IORouterRegistry.getInstance().loadRouters :\n            IORouterRegistry.getInstance().saveRouters;\n        routers.forEach(function (router) {\n            var handler = router(url, onProgress);\n            if (handler !== null) {\n                validHandlers.push(handler);\n            }\n        });\n        return validHandlers;\n    };\n    return IORouterRegistry;\n}());\nexports.IORouterRegistry = IORouterRegistry;\nexports.registerSaveRouter = function (loudRouter) {\n    return IORouterRegistry.registerSaveRouter(loudRouter);\n};\nexports.registerLoadRouter = function (loudRouter) {\n    return IORouterRegistry.registerLoadRouter(loudRouter);\n};\nexports.getSaveHandlers = function (url) {\n    return IORouterRegistry.getSaveHandlers(url);\n};\nexports.getLoadHandlers = function (url, onProgress) {\n    return IORouterRegistry.getLoadHandlers(url, onProgress);\n};\n//# sourceMappingURL=router_registry.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar canvas_util_1 = require(\"./canvas_util\");\nvar tex_util_1 = require(\"./tex_util\");\nfunction callAndCheck(gl, debugMode, func) {\n    var returnValue = func();\n    if (debugMode) {\n        checkWebGLError(gl);\n    }\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nfunction checkWebGLError(gl) {\n    var error = gl.getError();\n    if (error !== gl.NO_ERROR) {\n        throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n    }\n}\n// https://en.wikipedia.org/wiki/Half-precision_floating-point_format\nvar MIN_FLOAT16 = 5.96e-8;\nvar MAX_FLOAT16 = 65504;\nfunction canBeRepresented(num) {\n    if (environment_1.env().getBool('WEBGL_RENDER_FLOAT32_ENABLED') || num === 0 ||\n        (MIN_FLOAT16 < Math.abs(num) && Math.abs(num) < MAX_FLOAT16)) {\n        return true;\n    }\n    return false;\n}\nexports.canBeRepresented = canBeRepresented;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, debug, extensionName) {\n    return throwIfNull(gl, debug, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, debug, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, debug, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, debug, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, debug, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, debug, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, debug, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, debug, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, debug, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl, debug) {\n    return throwIfNull(gl, debug, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, debug, program) {\n    callAndCheck(gl, debug, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, debug, program) {\n    callAndCheck(gl, debug, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, debug, data) {\n    var buffer = throwIfNull(gl, debug, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, debug, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, debug, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, debug, data) {\n    var buffer = throwIfNull(gl, debug, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, debug, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, debug, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction getNumChannels() {\n    if (environment_1.env().getNumber('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getNumChannels = getNumChannels;\nfunction createTexture(gl, debug) {\n    return throwIfNull(gl, debug, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(width, height) {\n    var maxTextureSize = environment_1.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl, debug) {\n    return throwIfNull(gl, debug, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, debug, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    var loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        // The GPU compiler decided to strip out this attribute because it's unused,\n        // thus no need to bind.\n        return false;\n    }\n    callAndCheck(gl, debug, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, debug, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, debug, function () { return gl.enableVertexAttribArray(loc); });\n    return true;\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, debug, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, debug, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, debug, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, debug, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, debug, program, uniformName) {\n    return throwIfNull(gl, debug, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexports.getProgramUniformLocation = getProgramUniformLocation;\nfunction bindTextureToProgramUniformSampler(gl, debug, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, debug, function () { return bindTextureUnit(gl, debug, texture, textureUnit); });\n    callAndCheck(gl, debug, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl, debug) {\n    callAndCheck(gl, debug, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, debug, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, debug, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, debug, texture, framebuffer) {\n    callAndCheck(gl, debug, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, debug, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, debug, framebuffer) {\n    callAndCheck(gl, debug, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, debug, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, debug, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, debug, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getBatchDim(shape, dimsToSkip) {\n    if (dimsToSkip === void 0) { dimsToSkip = 2; }\n    return util.sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\nexports.getBatchDim = getBatchDim;\nfunction getRowsCols(shape) {\n    if (shape.length === 0) {\n        throw Error('Cannot get rows and columns of an empty shape array.');\n    }\n    return [\n        shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]\n    ];\n}\nexports.getRowsCols = getRowsCols;\nfunction getShapeAs3D(shape) {\n    var shapeAs3D = [1, 1, 1];\n    var isScalar = shape.length === 0 || (shape.length === 1 && shape[0] === 1);\n    if (!isScalar) {\n        shapeAs3D =\n            [getBatchDim(shape)].concat(getRowsCols(shape));\n    }\n    return shapeAs3D;\n}\nexports.getShapeAs3D = getShapeAs3D;\nfunction getTextureShapeFromLogicalShape(logShape, isPacked) {\n    var _a;\n    if (isPacked === void 0) { isPacked = false; }\n    var maxTexSize = environment_1.env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if (isPacked) {\n        maxTexSize = maxTexSize * 2;\n        // This logic ensures we accurately count the number of packed texels needed\n        // to accommodate the tensor. We can only pack values in the same texel if\n        // they are from adjacent pairs of rows/cols within the same batch. So if a\n        // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n        // fact that the texels containing the third row are half empty.\n        logShape = logShape.map(function (d, i) { return i >= logShape.length - 2 ?\n            util.nearestLargerEven(logShape[i]) :\n            logShape[i]; });\n        // Packed texture height is at least 2 (the channel height of a single\n        // texel).\n        if (logShape.length === 1) {\n            logShape = [2, logShape[0]];\n        }\n    }\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [1, size];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTexSize &&\n        logShape[2] <= maxTexSize) {\n        return [logShape[0] * logShape[1], logShape[2]];\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 &&\n        logShape[0] * logShape[1] * logShape[2] <= maxTexSize &&\n        logShape[3] <= maxTexSize) {\n        return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        if (isPacked) {\n            // For packed textures size equals the number of channels required to\n            // accommodate the texture data. However in order to squarify such that\n            // inner dimensions stay even, we rewrite size to equal the number of\n            // texels. Then in the return statement we rehydrate the squarified\n            // dimensions to channel units.\n            var batchDim = getBatchDim(logShape);\n            var rows = 2, cols = 2;\n            if (logShape.length) {\n                _a = getRowsCols(logShape), rows = _a[0], cols = _a[1];\n            }\n            size = batchDim * (rows / 2) * (cols / 2);\n            return util.sizeToSquarishShape(size).map(function (d) { return d * 2; });\n        }\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\nfunction isEven(n) {\n    return n % 2 === 0;\n}\n/**\n * This determines whether reshaping a packed texture requires rearranging\n * the data within the texture, assuming 2x2 packing.\n */\nfunction isReshapeFree(shape1, shape2) {\n    shape1 = shape1.slice(-2);\n    shape2 = shape2.slice(-2);\n    if (util.arraysEqual(shape1, shape2)) {\n        return true;\n    }\n    if (!shape1.length || !shape2.length) { // One of the shapes is a scalar.\n        return true;\n    }\n    if (shape1[0] === 0 || shape1[1] === 0 || shape2[0] === 0 ||\n        shape2[1] === 0) {\n        return true;\n    }\n    if (shape1.length !== shape2.length) { // One of the shapes is a vector.\n        var shape1Cols = shape1.slice(-1)[0];\n        var shape2Cols = shape2.slice(-1)[0];\n        if (shape1Cols === shape2Cols) {\n            return true;\n        }\n        if (isEven(shape1Cols) && isEven(shape2Cols) &&\n            (shape1[0] === 1 || shape2[0] === 1)) {\n            return true;\n        }\n    }\n    return shape1[1] === shape2[1] && isEven(shape1[0]) && isEven(shape2[0]);\n}\nexports.isReshapeFree = isReshapeFree;\n// We cache webgl params because the environment gets reset between\n// unit tests and we don't want to constantly query the WebGLContext for\n// MAX_TEXTURE_SIZE.\nvar MAX_TEXTURE_SIZE;\nvar MAX_TEXTURES_IN_SHADER;\nfunction getWebGLMaxTextureSize(webGLVersion) {\n    if (MAX_TEXTURE_SIZE == null) {\n        var gl = canvas_util_1.getWebGLContext(webGLVersion);\n        MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    }\n    return MAX_TEXTURE_SIZE;\n}\nexports.getWebGLMaxTextureSize = getWebGLMaxTextureSize;\nfunction resetMaxTextureSize() {\n    MAX_TEXTURE_SIZE = null;\n}\nexports.resetMaxTextureSize = resetMaxTextureSize;\nfunction resetMaxTexturesInShader() {\n    MAX_TEXTURES_IN_SHADER = null;\n}\nexports.resetMaxTexturesInShader = resetMaxTexturesInShader;\nfunction getMaxTexturesInShader(webGLVersion) {\n    if (MAX_TEXTURES_IN_SHADER == null) {\n        var gl = canvas_util_1.getWebGLContext(webGLVersion);\n        MAX_TEXTURES_IN_SHADER = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    }\n    // We cap at 16 to avoid spurious runtime \"memory exhausted\" error.\n    return Math.min(16, MAX_TEXTURES_IN_SHADER);\n}\nexports.getMaxTexturesInShader = getMaxTexturesInShader;\nfunction getWebGLDisjointQueryTimerVersion(webGLVersion) {\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    var queryTimerVersion;\n    var gl = canvas_util_1.getWebGLContext(webGLVersion);\n    if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n        webGLVersion === 2) {\n        queryTimerVersion = 2;\n    }\n    else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n        queryTimerVersion = 1;\n    }\n    else {\n        queryTimerVersion = 0;\n    }\n    return queryTimerVersion;\n}\nexports.getWebGLDisjointQueryTimerVersion = getWebGLDisjointQueryTimerVersion;\nfunction hasExtension(gl, extensionName) {\n    var ext = gl.getExtension(extensionName);\n    return ext != null;\n}\nexports.hasExtension = hasExtension;\nfunction isWebGLVersionEnabled(webGLVersion) {\n    try {\n        var gl = canvas_util_1.getWebGLContext(webGLVersion);\n        if (gl != null) {\n            return true;\n        }\n    }\n    catch (e) {\n        return false;\n    }\n    return false;\n}\nexports.isWebGLVersionEnabled = isWebGLVersionEnabled;\nfunction isCapableOfRenderingToFloatTexture(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = canvas_util_1.getWebGLContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n    }\n    else {\n        if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n            return false;\n        }\n    }\n    var isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\nexports.isCapableOfRenderingToFloatTexture = isCapableOfRenderingToFloatTexture;\n/**\n * Check if we can download values from a float/half-float texture.\n *\n * Note that for performance reasons we use binding a texture to a framebuffer\n * as a proxy for ability to download float values later using readPixels. The\n * texture params of this texture will not match those in readPixels exactly\n * but if we are unable to bind some kind of float texture to the frameBuffer\n * then we definitely will not be able to read float values from it.\n */\nfunction isDownloadFloatTextureEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    var gl = canvas_util_1.getWebGLContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n        if (!hasExtension(gl, 'WEBGL_color_buffer_float')) {\n            return false;\n        }\n    }\n    else {\n        if (hasExtension(gl, 'EXT_color_buffer_float')) {\n            return createFloatTextureAndBindToFramebuffer(gl);\n        }\n        var COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if (hasExtension(gl, COLOR_BUFFER_HALF_FLOAT)) {\n            var textureHalfFloatExtension = gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            return createHalfFloatTextureAndBindToFramebuffer(gl, textureHalfFloatExtension);\n        }\n        return false;\n    }\n    var isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\nexports.isDownloadFloatTextureEnabled = isDownloadFloatTextureEnabled;\nfunction createFloatTextureAndBindToFramebuffer(gl) {\n    var texConfig = tex_util_1.getTextureConfig(gl);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var width = 1;\n    var height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeFloat, null);\n    var frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nfunction createHalfFloatTextureAndBindToFramebuffer(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    var texConfig = tex_util_1.getTextureConfig(gl, textureHalfFloatExtension);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    var width = 1;\n    var height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatHalfFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeHalfFloat, null);\n    var frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    var isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nfunction isWebGLFenceEnabled(webGLVersion) {\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    var gl = canvas_util_1.getWebGLContext(webGLVersion);\n    // tslint:disable-next-line:no-any\n    var isEnabled = gl.fenceSync != null;\n    return isEnabled;\n}\nexports.isWebGLFenceEnabled = isWebGLFenceEnabled;\n//# sourceMappingURL=webgl_util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction complex_(real, imag) {\n    var $real = tensor_util_env_1.convertToTensor(real, 'real', 'complex');\n    var $imag = tensor_util_env_1.convertToTensor(imag, 'imag', 'complex');\n    util.assertShapesMatch($real.shape, $imag.shape, \"real and imag shapes, \" + $real.shape + \" and \" + $imag.shape + \", \" +\n        \"must match in call to tf.complex().\");\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.complex($real, $imag); }, { $real: $real, $imag: $imag });\n}\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction real_(input) {\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'real');\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.real($input); }, { $input: $input });\n}\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction imag_(input) {\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'imag');\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.imag($input); }, { $input: $input });\n}\nexports.complex = operation_1.op({ complex_: complex_ });\nexports.real = operation_1.op({ real_: real_ });\nexports.imag = operation_1.op({ imag_: imag_ });\n//# sourceMappingURL=complex_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, function () { return \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"); });\n    util.assert(input.rank === size.length, function () { return \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"); });\n    var _loop_1 = function (i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], function () { return \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"); });\n    };\n    for (var i = 0; i < input.rank; ++i) {\n        _loop_1(i);\n    }\n}\nexports.assertParamsValid = assertParamsValid;\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\nfunction maskToAxes(mask) {\n    var axes = [];\n    var axis = 0;\n    while (mask > 0) {\n        if (mask & 1) {\n            axes.push(axis);\n        }\n        mask /= 2;\n        axis++;\n    }\n    return axes;\n}\nexports.maskToAxes = maskToAxes;\n/** Computes the output shape given the strided slice params. */\nfunction computeOutShape(begin, end, strides) {\n    var size = [];\n    for (var axis = 0; axis < begin.length; axis++) {\n        size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n    }\n    return size;\n}\nexports.computeOutShape = computeOutShape;\nfunction startForAxis(beginMask, startIndices, strides, inputShape, axis) {\n    // Begin with the specified index\n    var start = startIndices[axis];\n    var stride = strides[axis] || 1;\n    // Check the axis bit from right of beginMask or the begin index is not set\n    // for the axis.\n    if (beginMask & 1 << axis || start == null) {\n        if (stride > 0) {\n            // Forward iteration - use the first element. These values will get\n            // clamped below (Note: We could have set them to 0 and axis_size-1, but\n            // use lowest() and max() to maintain symmetry with StopForAxis())\n            start = Number.MIN_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the last element.\n            start = Number.MAX_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    var axisSize = inputShape[axis];\n    if (start < 0) {\n        start += axisSize;\n    }\n    // Clamping\n    start = util.clamp(0, start, axisSize - 1);\n    return start;\n}\nexports.startForAxis = startForAxis;\nfunction stopForAxis(endMask, stopIndices, strides, inputShape, axis) {\n    // Begin with the specified index\n    var stop = stopIndices[axis];\n    var stride = strides[axis] || 1;\n    // Check the axis bit from right of endMask or if the stop index is not set\n    // for this axis.\n    if (endMask & (1 << axis) || stop == null) {\n        if (stride > 0) {\n            // Forward iteration - use the last element. These values will get\n            // clamped below\n            stop = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the first element.\n            stop = Number.MIN_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    var axisSize = inputShape[axis];\n    if (stop < 0) {\n        stop += axisSize;\n    }\n    // Clamping\n    // Because the end index points one past the last element, we need slightly\n    // different clamping ranges depending on the direction.\n    if (stride > 0) {\n        // Forward iteration\n        stop = util.clamp(0, stop, axisSize);\n    }\n    else {\n        // Backward iteration\n        stop = util.clamp(-1, stop, axisSize - 1);\n    }\n    return stop;\n}\nexports.stopForAxis = stopForAxis;\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nfunction isSliceContinous(shape, begin, size) {\n    // Index of the first axis that has size > 1.\n    var firstNonOneAxis = size.length;\n    for (var i = 0; i < size.length; i++) {\n        if (size[i] > 1) {\n            firstNonOneAxis = i;\n            break;\n        }\n    }\n    for (var i = firstNonOneAxis + 1; i < size.length; i++) {\n        if (begin[i] > 0 || size[i] !== shape[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isSliceContinous = isSliceContinous;\nfunction computeFlatOffset(begin, strides) {\n    var flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n    for (var i = 0; i < begin.length - 1; i++) {\n        flatOffset += begin[i] * strides[i];\n    }\n    return flatOffset;\n}\nexports.computeFlatOffset = computeFlatOffset;\n//# sourceMappingURL=slice_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"./engine\");\nvar tensor_1 = require(\"./tensor\");\nvar tensor_util_env_1 = require(\"./tensor_util_env\");\nvar util = require(\"./util\");\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction grad(f) {\n    util.assert(util.isFunction(f), function () { return 'The f passed in grad(f) must be a function'; });\n    return function (x, dy) {\n        // x can be of any dtype, thus null as the last argument.\n        var $x = tensor_util_env_1.convertToTensor(x, 'x', 'tf.grad', null);\n        var $dy = (dy != null) ? tensor_util_env_1.convertToTensor(dy, 'dy', 'tf.grad') : null;\n        return engine_1.ENGINE.tidy(function () {\n            var _a = engine_1.ENGINE.gradients(function () { return f($x); }, [$x], $dy), value = _a.value, grads = _a.grads;\n            if ($dy != null) {\n                util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            checkGrads(grads);\n            return grads[0];\n        });\n    };\n}\nexports.grad = grad;\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction grads(f) {\n    util.assert(util.isFunction(f), function () { return 'The f passed in grads(f) must be a function'; });\n    return function (args, dy) {\n        util.assert(Array.isArray(args), function () { return 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s'; });\n        // args can be of any dtype, thus null as the last argument.\n        var $args = tensor_util_env_1.convertToTensorArray(args, 'args', 'tf.grads', null);\n        var $dy = (dy != null) ? tensor_util_env_1.convertToTensor(dy, 'dy', 'tf.grads') : null;\n        return engine_1.ENGINE.tidy(function () {\n            var _a = engine_1.ENGINE.gradients(function () { return f.apply(void 0, $args); }, $args, $dy), value = _a.value, grads = _a.grads;\n            if ($dy != null) {\n                util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(grads);\n            return grads;\n        });\n    };\n}\nexports.grads = grads;\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction valueAndGrad(f) {\n    util.assert(util.isFunction(f), function () { return 'The f passed in valueAndGrad(f) must be a function'; });\n    return function (x, dy) {\n        util.assert(x instanceof tensor_1.Tensor, function () { return 'The x passed in valueAndGrad(f)(x) must be a tensor'; });\n        util.assert(dy == null || dy instanceof tensor_1.Tensor, function () { return 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor'; });\n        var _a = engine_1.ENGINE.gradients(function () { return f(x); }, [x], dy), grads = _a.grads, value = _a.value;\n        checkGrads(grads);\n        return { grad: grads[0], value: value };\n    };\n}\nexports.valueAndGrad = valueAndGrad;\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction valueAndGrads(f) {\n    util.assert(util.isFunction(f), function () { return 'The f passed in valueAndGrads(f) must be a function'; });\n    return function (args, dy) {\n        util.assert(Array.isArray(args) && args.every(function (arg) { return arg instanceof tensor_1.Tensor; }), function () { return 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors'; });\n        util.assert(dy == null || dy instanceof tensor_1.Tensor, function () { return 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor'; });\n        var res = engine_1.ENGINE.gradients(function () { return f.apply(void 0, args); }, args, dy);\n        if (dy != null) {\n            util.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n        }\n        checkGrads(res.grads);\n        return res;\n    };\n}\nexports.valueAndGrads = valueAndGrads;\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction variableGrads(f, varList) {\n    util.assert(util.isFunction(f), function () { return 'The f passed in variableGrads(f) must be a function'; });\n    util.assert(varList == null ||\n        Array.isArray(varList) && varList.every(function (v) { return v instanceof tensor_1.Variable; }), function () {\n        return 'The varList passed in variableGrads(f, varList) must be an array ' +\n            'of variables';\n    });\n    var specifiedVarList = varList != null;\n    if (!specifiedVarList) {\n        // Get all of the trainable variables.\n        varList = [];\n        for (var varName in engine_1.ENGINE.registeredVariables) {\n            varList.push(engine_1.ENGINE.registeredVariables[varName]);\n        }\n    }\n    var specifiedNonTrainable = specifiedVarList ? varList.filter(function (variable) { return !variable.trainable; }) : null;\n    // Prune non-trainable variables.\n    var originalVarCount = varList.length;\n    varList = varList.filter(function (variable) { return variable.trainable; });\n    util.assert(varList.length > 0, function () { return \"variableGrads() expects at least one of the input variables to \" +\n        (\"be trainable, but none of the \" + originalVarCount + \" variables is \") +\n        \"trainable.\"; });\n    var allowNoGradients = true;\n    var _a = engine_1.ENGINE.gradients(f, varList, null, allowNoGradients), value = _a.value, grads = _a.grads;\n    util.assert(grads.some(function (g) { return g != null; }), function () { return 'Cannot find a connection between any variable and the result of ' +\n        'the loss function y=f(x). Please make sure the operations that ' +\n        'use variables are inside the function f passed to minimize().'; });\n    util.assert(value.rank === 0, function () { return \"The f passed in variableGrads(f) must return a scalar, but it \" +\n        (\"returned a rank-\" + value.rank + \" tensor\"); });\n    var namedGrads = {};\n    varList.forEach(function (v, i) {\n        if (grads[i] != null) {\n            namedGrads[v.name] = grads[i];\n        }\n    });\n    if (specifiedNonTrainable != null) {\n        // If varList is explicitly provided and contains non-trainable values,\n        // add them to the returned gradients with `null` values.\n        specifiedNonTrainable.forEach(function (v) { return namedGrads[v.name] = null; });\n    }\n    return { value: value, grads: namedGrads };\n}\nexports.variableGrads = variableGrads;\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction customGrad(f) {\n    return engine_1.ENGINE.customGrad(f);\n}\nexports.customGrad = customGrad;\nfunction checkGrads(grads) {\n    var numNullGradients = grads.filter(function (g) { return g == null; }).length;\n    if (numNullGradients > 0) {\n        throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\");\n    }\n}\n//# sourceMappingURL=gradients.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contexts = {};\nvar WEBGL_ATTRIBUTES = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: true\n};\nfunction setWebGLContext(webGLVersion, gl) {\n    contexts[webGLVersion] = gl;\n}\nexports.setWebGLContext = setWebGLContext;\nfunction getWebGLContext(webGLVersion) {\n    if (!(webGLVersion in contexts)) {\n        contexts[webGLVersion] = getWebGLRenderingContext(webGLVersion);\n    }\n    var gl = contexts[webGLVersion];\n    if (gl.isContextLost()) {\n        delete contexts[webGLVersion];\n        return getWebGLContext(webGLVersion);\n    }\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.DITHER);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SAMPLE_COVERAGE);\n    gl.enable(gl.SCISSOR_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    return contexts[webGLVersion];\n}\nexports.getWebGLContext = getWebGLContext;\nfunction createCanvas(webGLVersion) {\n    if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n        return new OffscreenCanvas(300, 150);\n    }\n    else if (typeof document !== 'undefined') {\n        return document.createElement('canvas');\n    }\n    else {\n        throw new Error('Cannot create a canvas in this context');\n    }\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion !== 1 && webGLVersion !== 2) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    var canvas = createCanvas(webGLVersion);\n    canvas.addEventListener('webglcontextlost', function (ev) {\n        ev.preventDefault();\n        delete contexts[webGLVersion];\n    }, false);\n    if (webGLVersion === 1) {\n        return (canvas.getContext('webgl', WEBGL_ATTRIBUTES) ||\n            canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES));\n    }\n    return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}\n//# sourceMappingURL=canvas_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar util_2 = require(\"../util\");\nvar concat_util_1 = require(\"./concat_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n    return exports.concat(tensors, 0 /* axis */);\n}\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(tensors, axis) {\n    return exports.concat(tensors, axis);\n}\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(tensors, axis) {\n    return exports.concat(tensors, axis);\n}\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(tensors, axis) {\n    return exports.concat(tensors, axis);\n}\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction concat_(tensors, axis) {\n    if (axis === void 0) { axis = 0; }\n    util_1.assert(tensors.length >= 1, function () { return 'Pass at least one tensor to concat'; });\n    var $tensors = tensor_util_env_1.convertToTensorArray(tensors, 'tensors', 'concat');\n    if ($tensors[0].dtype === 'complex64') {\n        $tensors.forEach(function (tensor) {\n            if (tensor.dtype !== 'complex64') {\n                throw new Error(\"Cannot concatenate complex64 tensors with a tensor\\n          with dtype \" + tensor.dtype + \". \");\n            }\n        });\n    }\n    axis = util_2.parseAxisParam(axis, $tensors[0].shape)[0];\n    var outShape = concat_util_1.computeOutShape($tensors.map(function (t) { return t.shape; }), axis);\n    if (util_1.sizeFromShape(outShape) === 0) {\n        return tensor_ops_1.tensor([], outShape);\n    }\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    $tensors = $tensors.filter(function (t) { return t.size > 0; });\n    if ($tensors.length === 1) {\n        return $tensors[0];\n    }\n    var shapes = $tensors.map(function (t) { return t.shape; });\n    concat_util_1.assertParamsConsistent(shapes, axis);\n    var der = function (dy) {\n        var sizeSplits = shapes.map(function (s) { return s[axis]; });\n        var derTensors = exports.split(dy, sizeSplits, axis);\n        return derTensors.map(function (t) { return function () { return t; }; });\n    };\n    var inputs = $tensors;\n    var attr = { axis: axis };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.concat($tensors, axis); }, inputs, der, 'Concat', attr);\n}\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction split_(x, numOrSizeSplits, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'split');\n    axis = util_2.parseAxisParam(axis, $x.shape)[0];\n    var splitSizes;\n    if (typeof (numOrSizeSplits) === 'number') {\n        util_1.assert($x.shape[axis] % numOrSizeSplits === 0, function () { return 'Number of splits must evenly divide the axis.'; });\n        splitSizes =\n            new Array(numOrSizeSplits).fill($x.shape[axis] / numOrSizeSplits);\n    }\n    else {\n        util_1.assert($x.shape[axis] === numOrSizeSplits.reduce(function (a, b) { return a + b; }), function () { return 'The sum of sizes must match the size of the axis dimension.'; });\n        splitSizes = numOrSizeSplits;\n    }\n    var der = function (dy) { return ({ $x: function () { return exports.concat(dy, axis); } }); };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.split($x, splitSizes, axis); }, { $x: $x }, der);\n}\nexports.concat = operation_1.op({ concat_: concat_ });\nexports.concat1d = operation_1.op({ concat1d_: concat1d_ });\nexports.concat2d = operation_1.op({ concat2d_: concat2d_ });\nexports.concat3d = operation_1.op({ concat3d_: concat3d_ });\nexports.concat4d = operation_1.op({ concat4d_: concat4d_ });\nexports.split = operation_1.op({ split_: split_ });\n//# sourceMappingURL=concat_split.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = parseTupleParam(filterSize), filterHeight = _a[0], filterWidth = _a[1];\n    var filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\nexports.computePool2DInfo = computePool2DInfo;\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nfunction computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat) {\n    if (dataFormat === void 0) { dataFormat = 'NDHWC'; }\n    var _a = parse3TupleParam(filterSize), filterDepth = _a[0], filterHeight = _a[1], filterWidth = _a[2];\n    var filterShape;\n    var $dataFormat;\n    if (dataFormat === 'NDHWC') {\n        $dataFormat = 'channelsLast';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n    }\n    else if (dataFormat === 'NCDHW') {\n        $dataFormat = 'channelsFirst';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\nexports.computePool3DInfo = computePool3DInfo;\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nfunction computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise, dataFormat) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1], batchSize = _a[0], inHeight = _a[1], inWidth = _a[2], inChannels = _a[3];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inHeight = inShape[1], inWidth = inShape[2], inChannels = inShape[3];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inHeight = inShape[2], inWidth = inShape[3];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterHeight = filterShape[0], filterWidth = filterShape[1], filterChannels = filterShape[3];\n    var _b = parseTupleParam(strides), strideHeight = _b[0], strideWidth = _b[1];\n    var _c = parseTupleParam(dilations), dilationHeight = _c[0], dilationWidth = _c[1];\n    var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    var _d = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode), padInfo = _d.padInfo, outHeight = _d.outHeight, outWidth = _d.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        effectiveFilterHeight: effectiveFilterHeight,\n        effectiveFilterWidth: effectiveFilterWidth,\n        dilationHeight: dilationHeight,\n        dilationWidth: dilationWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv2DInfo = computeConv2DInfo;\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nfunction computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise, dataFormat, roundingMode) {\n    if (depthwise === void 0) { depthwise = false; }\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\n    var _a = [-1, -1, -1, -1, -1], batchSize = _a[0], inDepth = _a[1], inHeight = _a[2], inWidth = _a[3], inChannels = _a[4];\n    if (dataFormat === 'channelsLast') {\n        batchSize = inShape[0], inDepth = inShape[1], inHeight = inShape[2], inWidth = inShape[3], inChannels = inShape[4];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        batchSize = inShape[0], inChannels = inShape[1], inDepth = inShape[2], inHeight = inShape[3], inWidth = inShape[4];\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n    var filterDepth = filterShape[0], filterHeight = filterShape[1], filterWidth = filterShape[2], filterChannels = filterShape[4];\n    var _b = parse3TupleParam(strides), strideDepth = _b[0], strideHeight = _b[1], strideWidth = _b[2];\n    var _c = parse3TupleParam(dilations), dilationDepth = _c[0], dilationHeight = _c[1], dilationWidth = _c[2];\n    var effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n    var effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    var effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    var _d = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode), padInfo = _d.padInfo, outDepth = _d.outDepth, outHeight = _d.outHeight, outWidth = _d.outWidth;\n    var outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    var outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize: batchSize,\n        dataFormat: dataFormat,\n        inDepth: inDepth,\n        inHeight: inHeight,\n        inWidth: inWidth,\n        inChannels: inChannels,\n        outDepth: outDepth,\n        outHeight: outHeight,\n        outWidth: outWidth,\n        outChannels: outChannels,\n        padInfo: padInfo,\n        strideDepth: strideDepth,\n        strideHeight: strideHeight,\n        strideWidth: strideWidth,\n        filterDepth: filterDepth,\n        filterHeight: filterHeight,\n        filterWidth: filterWidth,\n        effectiveFilterDepth: effectiveFilterDepth,\n        effectiveFilterHeight: effectiveFilterHeight,\n        effectiveFilterWidth: effectiveFilterWidth,\n        dilationDepth: dilationDepth,\n        dilationHeight: dilationHeight,\n        dilationWidth: dilationWidth,\n        inShape: inShape,\n        outShape: outShape,\n        filterShape: filterShape\n    };\n}\nexports.computeConv3DInfo = computeConv3DInfo;\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputRows = inShape[0];\n    var inputCols = inShape[1];\n    var outputRows = conditionalRound((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputRows), function () { return \"The output # of rows (\" + outputRows + \") must be an integer. \" +\n        \"Change the stride and/or zero pad parameters\"; });\n    var outputCols = conditionalRound((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputCols), function () { return \"The output # of columns (\" + outputCols + \") must be an integer. \" +\n        \"Change the stride and/or zero pad parameters\"; });\n    return [outputRows, outputCols];\n}\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    var inputDepth = inShape[0];\n    var inputRows = inShape[1];\n    var inputCols = inShape[2];\n    var outputDepths = conditionalRound((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputDepths), function () { return \"The output # of depths (\" + outputDepths + \") must be an integer. \" +\n        \"Change the stride and/or zero pad parameters\"; });\n    var outputRows = conditionalRound((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputRows), function () { return \"The output # of rows (\" + outputRows + \") must be an integer. \" +\n        \"Change the stride and/or zero pad parameters\"; });\n    var outputCols = conditionalRound((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    util.assert(util.isInt(outputCols), function () { return \"The output # of columns (\" + outputCols + \") must be an integer. \" +\n        \"Change the stride and/or zero pad parameters\"; });\n    return [outputDepths, outputRows, outputCols, outChannels];\n}\nfunction computeDefaultPad(inputShape, fieldSize, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    var effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nexports.computeDefaultPad = computeDefaultPad;\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction parse3TupleParam(param) {\n    return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode) {\n    var padInfo;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        var padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        var outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n        var padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n        var top_1 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_1;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_1, bottom: bottom, left: left, right: right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outHeight: outHeight, outWidth: outWidth };\n}\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n    var padInfo;\n    var outDepth;\n    var outHeight;\n    var outWidth;\n    if (typeof pad === 'number') {\n        var padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = {\n            top: pad,\n            bottom: pad,\n            left: pad,\n            right: pad,\n            front: pad,\n            back: pad,\n            type: padType\n        };\n        var outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n        outDepth = outShape[0];\n        outHeight = outShape[1];\n        outWidth = outShape[2];\n    }\n    else if (pad === 'same') {\n        outDepth = Math.ceil(inDepth / strideDepth);\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        var padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n        var padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        var padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        var front = Math.floor(padAlongDepth / 2);\n        var back = padAlongDepth - front;\n        var top_2 = Math.floor(padAlongHeight / 2);\n        var bottom = padAlongHeight - top_2;\n        var left = Math.floor(padAlongWidth / 2);\n        var right = padAlongWidth - left;\n        padInfo = { top: top_2, bottom: bottom, left: left, right: right, front: front, back: back, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            front: 0,\n            back: 0,\n            type: 'VALID'\n        };\n        outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(\"Unknown padding parameter: \" + pad);\n    }\n    return { padInfo: padInfo, outDepth: outDepth, outHeight: outHeight, outWidth: outWidth };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode\n */\nfunction conditionalRound(value, roundingMode) {\n    if (!roundingMode) {\n        return value;\n    }\n    switch (roundingMode) {\n        case 'round':\n            // used for Caffe Conv\n            return Math.round(value);\n        case 'ceil':\n            // used for Caffe Pool\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(\"Unknown roundingMode \" + roundingMode);\n    }\n}\nfunction tupleValuesAreOne(param) {\n    var _a = parseTupleParam(param), dimA = _a[0], dimB = _a[1], dimC = _a[2];\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nexports.tupleValuesAreOne = tupleValuesAreOne;\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\nexports.eitherStridesOrDilationsAreOne = eitherStridesOrDilationsAreOne;\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nfunction convertConv2DDataFormat(dataFormat) {\n    if (dataFormat === 'NHWC') {\n        return 'channelsLast';\n    }\n    else if (dataFormat === 'NCHW') {\n        return 'channelsFirst';\n    }\n    else {\n        throw new Error(\"Unknown dataFormat \" + dataFormat);\n    }\n}\nexports.convertConv2DDataFormat = convertConv2DDataFormat;\n//# sourceMappingURL=conv_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\n/** @doclink Optimizer */\nvar SGDOptimizer = /** @class */ (function (_super) {\n    __extends(SGDOptimizer, _super);\n    function SGDOptimizer(learningRate) {\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.setLearningRate(learningRate);\n        return _this;\n    }\n    SGDOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (v) { return v.name; }) :\n            Object.keys(variableGradients);\n        varNames.forEach(function (name, i) {\n            var gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            var value = engine_1.ENGINE.registeredVariables[name];\n            globals_1.tidy(function () {\n                var newValue = _this.c.mul(gradient).add(value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    };\n    /**\n     * Sets the learning rate of the optimizer.\n     */\n    SGDOptimizer.prototype.setLearningRate = function (learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = globals_1.keep(ops_1.scalar(-learningRate));\n    };\n    SGDOptimizer.prototype.dispose = function () {\n        this.c.dispose();\n    };\n    SGDOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.saveIterations()];\n                    case 1: return [2 /*return*/, [_a.sent()]];\n                }\n            });\n        });\n    };\n    SGDOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        if (weightValues.length !== 0) {\n                            throw new Error('SGD optimizer does not have settable weights.');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SGDOptimizer.prototype.getConfig = function () {\n        return { 'learningRate': this.learningRate };\n    };\n    /** @nocollapse */\n    SGDOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate']);\n    };\n    /** @nocollapse */\n    SGDOptimizer.className = 'SGD'; // Note: Name matters for Python compatibility.\n    return SGDOptimizer;\n}(optimizer_1.Optimizer));\nexports.SGDOptimizer = SGDOptimizer;\nserialization_1.registerClass(SGDOptimizer);\n//# sourceMappingURL=sgd_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isMobile() {\n    // tslint:disable-next-line:no-any\n    var a = navigator.userAgent || navigator.vendor || window.opera;\n    // tslint:disable-next-line:max-line-length\n    return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n        .test(a) ||\n        // tslint:disable-next-line:max-line-length\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n            .test(a.substr(0, 4));\n}\nexports.isMobile = isMobile;\nfunction isBrowser() {\n    return (typeof window !== 'undefined' && window.document != null) ||\n        //@ts-ignore\n        (typeof WorkerGlobalScope !== 'undefined');\n}\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=device_util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nfunction validateUpdateShape(shape, indices, updates) {\n    var sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n    var batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n    var shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n        (\"shape[sliceDim:], got updates.shape: \" + updates.shape) +\n        (\", indices.shape: \" + indices.shape + \", shape: \" + shape) +\n        (\", sliceDim: \" + sliceDim + \", and batchDim: \" + batchDim + \".\");\n    if (updates.rank < batchDim) {\n        throw new Error(shapeError + (\" update.rank < \" + batchDim + \". \"));\n    }\n    if (shape.length < sliceDim + (updates.rank - batchDim)) {\n        throw new Error(shapeError +\n            (\" Output shape length < \" + (sliceDim + (updates.rank - batchDim))));\n    }\n    if (updates.rank !== batchDim + shape.length - sliceDim) {\n        throw new Error(shapeError + (\" update.rank != \" + (batchDim + shape.length - sliceDim)));\n    }\n    for (var d = 0; d < batchDim; ++d) {\n        if (updates.shape[d] !== indices.shape[d]) {\n            throw new Error(shapeError +\n                (\" updates.shape[\" + d + \"] (\" + updates.shape[d] + \") != indices.shape[\" + d + \"] (\" + indices.shape[d] + \").\"));\n        }\n    }\n    for (var d = 0; d < updates.rank - batchDim; ++d) {\n        if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n            throw new Error(shapeError +\n                (\" updates.shape[\" + (d + batchDim) + \"] (\" + updates.shape[d + batchDim] + \") != shape[\" + (d + batchDim) + \"] (\" + shape[d + batchDim] + \")\"));\n        }\n    }\n}\nexports.validateUpdateShape = validateUpdateShape;\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nfunction validateInput(updates, indices, shape) {\n    if (indices.rank < 1) {\n        throw new Error('tf.scatterND() expects the indices to be rank 1 or higher,' +\n            (\" but the rank was \" + indices.rank + \".\"));\n    }\n    if (updates.rank < 1) {\n        throw new Error('tf.scatterND() expects the updates to be rank 1 or higher,' +\n            (\" but the rank was \" + updates.rank + \".\"));\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error(\"The dtype of 'indices' should be int32, but got dtype: \" + indices.dtype);\n    }\n    if (shape.length < 1) {\n        throw new Error(\"Output rank must be greater or equal to 1, but got shape: \" + shape);\n    }\n    if (shape.length === 0) {\n        if (indices.size === 0) {\n            throw new Error(\"Indices specified for empty output. indices shape: \" + indices.shape);\n        }\n        if (updates.size === 0) {\n            throw new Error(\"Updates specified for empty output. updates shape: \" + updates.shape);\n        }\n    }\n    validateUpdateShape(shape, indices, updates);\n}\nexports.validateInput = validateInput;\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nfunction calculateShapes(updates, indices, shape) {\n    // Calculate the number of dimensions in indices\n    var sliceRank = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n    // Calculate the number of elements that make up each slice of our updated\n    // tensor. This allows us to work with flattened tensors and copy over whole\n    // slices at a time.\n    var totalNd = shape.length;\n    var sliceSize = 1;\n    for (var i = sliceRank; i < totalNd; ++i) {\n        sliceSize *= shape[i];\n    }\n    var safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n    var numUpdates = indices.size / safeSliceDim;\n    var strides = util_1.computeStrides(shape.slice(0, sliceRank)).concat([1]);\n    var outputSize = util_1.sizeFromShape(shape);\n    return { sliceRank: sliceRank, numUpdates: numUpdates, sliceSize: sliceSize, strides: strides, outputSize: outputSize };\n}\nexports.calculateShapes = calculateShapes;\n//# sourceMappingURL=scatter_nd_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EPSILON_FLOAT32 = 1e-7;\nexports.EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nvar DataStorage = /** @class */ (function () {\n    function DataStorage(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    DataStorage.prototype.get = function (dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    };\n    DataStorage.prototype.set = function (dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    };\n    DataStorage.prototype.has = function (dataId) {\n        return this.data.has(dataId);\n    };\n    DataStorage.prototype.delete = function (dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    };\n    DataStorage.prototype.numDataIds = function () {\n        return this.dataIdsCount;\n    };\n    return DataStorage;\n}());\nexports.DataStorage = DataStorage;\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nvar KernelBackend = /** @class */ (function () {\n    function KernelBackend() {\n    }\n    KernelBackend.prototype.time = function (f) {\n        return notYetImplemented('time');\n    };\n    KernelBackend.prototype.read = function (dataId) {\n        return notYetImplemented('read');\n    };\n    KernelBackend.prototype.readSync = function (dataId) {\n        return notYetImplemented('readSync');\n    };\n    KernelBackend.prototype.numDataIds = function () {\n        return notYetImplemented('numDataIds');\n    };\n    KernelBackend.prototype.disposeData = function (dataId) {\n        return notYetImplemented('disposeData');\n    };\n    KernelBackend.prototype.write = function (values, shape, dtype) {\n        return notYetImplemented('write');\n    };\n    KernelBackend.prototype.move = function (dataId, values, shape, dtype) {\n        return notYetImplemented('move');\n    };\n    KernelBackend.prototype.memory = function () {\n        return notYetImplemented('memory');\n    };\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    KernelBackend.prototype.floatPrecision = function () {\n        return notYetImplemented('floatPrecision');\n    };\n    /** Returns the smallest representable number.  */\n    KernelBackend.prototype.epsilon = function () {\n        return this.floatPrecision() === 32 ? exports.EPSILON_FLOAT32 : exports.EPSILON_FLOAT16;\n    };\n    KernelBackend.prototype.batchMatMul = function (a, b, transposeA, transposeB) {\n        return notYetImplemented('batchMatMul');\n    };\n    KernelBackend.prototype.fusedBatchMatMul = function (_a) {\n        var a = _a.a, b = _a.b, transposeA = _a.transposeA, transposeB = _a.transposeB, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedBatchMatMul');\n    };\n    KernelBackend.prototype.slice = function (x, begin, size) {\n        return notYetImplemented('slice');\n    };\n    KernelBackend.prototype.stridedSlice = function (x, begin, end, strides) {\n        return notYetImplemented('stridedSlice');\n    };\n    KernelBackend.prototype.unstack = function (x, axis) {\n        return notYetImplemented('unstack');\n    };\n    KernelBackend.prototype.reverse = function (a, axis) {\n        return notYetImplemented('reverse');\n    };\n    KernelBackend.prototype.concat = function (tensors, axis) {\n        return notYetImplemented('concat');\n    };\n    KernelBackend.prototype.neg = function (a) {\n        return notYetImplemented('neg');\n    };\n    KernelBackend.prototype.add = function (a, b) {\n        return notYetImplemented('add');\n    };\n    KernelBackend.prototype.addN = function (tensors) {\n        return notYetImplemented('addN');\n    };\n    KernelBackend.prototype.subtract = function (a, b) {\n        return notYetImplemented('subtract');\n    };\n    KernelBackend.prototype.multiply = function (a, b) {\n        return notYetImplemented('multiply');\n    };\n    KernelBackend.prototype.realDivide = function (a, b) {\n        return notYetImplemented('realDivide');\n    };\n    KernelBackend.prototype.floorDiv = function (a, b) {\n        return notYetImplemented('floorDiv');\n    };\n    KernelBackend.prototype.sum = function (x, axes) {\n        return notYetImplemented('sum');\n    };\n    KernelBackend.prototype.prod = function (x, axes) {\n        return notYetImplemented('prod');\n    };\n    KernelBackend.prototype.unsortedSegmentSum = function (x, segmentIds, numSegments) {\n        return notYetImplemented('unsortedSegmentSum');\n    };\n    KernelBackend.prototype.argMin = function (x, axis) {\n        return notYetImplemented('argMin');\n    };\n    KernelBackend.prototype.argMax = function (x, axis) {\n        return notYetImplemented('argMax');\n    };\n    KernelBackend.prototype.equal = function (a, b) {\n        return notYetImplemented('equal');\n    };\n    KernelBackend.prototype.notEqual = function (a, b) {\n        return notYetImplemented('notEqual');\n    };\n    KernelBackend.prototype.less = function (a, b) {\n        return notYetImplemented('less');\n    };\n    KernelBackend.prototype.lessEqual = function (a, b) {\n        return notYetImplemented('lessEqual');\n    };\n    KernelBackend.prototype.greater = function (a, b) {\n        return notYetImplemented('greater');\n    };\n    KernelBackend.prototype.greaterEqual = function (a, b) {\n        return notYetImplemented('greaterEqual');\n    };\n    KernelBackend.prototype.logicalNot = function (a) {\n        return notYetImplemented('logicalNot');\n    };\n    KernelBackend.prototype.logicalAnd = function (a, b) {\n        return notYetImplemented('logicalAnd');\n    };\n    KernelBackend.prototype.logicalOr = function (a, b) {\n        return notYetImplemented('logicalOr');\n    };\n    KernelBackend.prototype.where = function (condition) {\n        return notYetImplemented('where');\n    };\n    KernelBackend.prototype.select = function (condition, a, b) {\n        return notYetImplemented('select');\n    };\n    KernelBackend.prototype.topk = function (x, k, sorted) {\n        return notYetImplemented('topk');\n    };\n    KernelBackend.prototype.min = function (x, axes) {\n        return notYetImplemented('min');\n    };\n    KernelBackend.prototype.minimum = function (a, b) {\n        return notYetImplemented('minimum');\n    };\n    KernelBackend.prototype.mod = function (a, b) {\n        return notYetImplemented('mod');\n    };\n    KernelBackend.prototype.max = function (x, axes) {\n        return notYetImplemented('max');\n    };\n    KernelBackend.prototype.maximum = function (a, b) {\n        return notYetImplemented('maximum');\n    };\n    KernelBackend.prototype.all = function (x, axes) {\n        return notYetImplemented('all');\n    };\n    KernelBackend.prototype.any = function (x, axes) {\n        return notYetImplemented('any');\n    };\n    KernelBackend.prototype.squaredDifference = function (a, b) {\n        return notYetImplemented('squaredDifference');\n    };\n    KernelBackend.prototype.ceil = function (x) {\n        return notYetImplemented('ceil');\n    };\n    KernelBackend.prototype.floor = function (x) {\n        return notYetImplemented('floor');\n    };\n    KernelBackend.prototype.round = function (x) {\n        return notYetImplemented('round');\n    };\n    KernelBackend.prototype.sign = function (x) {\n        return notYetImplemented('sign');\n    };\n    KernelBackend.prototype.isNaN = function (x) {\n        return notYetImplemented('isNaN');\n    };\n    KernelBackend.prototype.isInf = function (x) {\n        return notYetImplemented('isInf');\n    };\n    KernelBackend.prototype.isFinite = function (x) {\n        return notYetImplemented('isFinite');\n    };\n    KernelBackend.prototype.pow = function (a, b) {\n        return notYetImplemented('pow');\n    };\n    KernelBackend.prototype.exp = function (x) {\n        return notYetImplemented('exp');\n    };\n    KernelBackend.prototype.expm1 = function (x) {\n        return notYetImplemented('expm1');\n    };\n    KernelBackend.prototype.log = function (x) {\n        return notYetImplemented('log');\n    };\n    KernelBackend.prototype.log1p = function (x) {\n        return notYetImplemented('log1p');\n    };\n    KernelBackend.prototype.sqrt = function (x) {\n        return notYetImplemented('sqrt');\n    };\n    KernelBackend.prototype.rsqrt = function (x) {\n        return notYetImplemented('rsqrt');\n    };\n    KernelBackend.prototype.square = function (x) {\n        return notYetImplemented('square');\n    };\n    KernelBackend.prototype.reciprocal = function (x) {\n        return notYetImplemented('reciprocal');\n    };\n    KernelBackend.prototype.relu = function (x) {\n        return notYetImplemented('relu');\n    };\n    KernelBackend.prototype.relu6 = function (x) {\n        return notYetImplemented('relu6');\n    };\n    KernelBackend.prototype.prelu = function (x, a) {\n        return notYetImplemented('prelu');\n    };\n    KernelBackend.prototype.elu = function (x) {\n        return notYetImplemented('elu');\n    };\n    KernelBackend.prototype.eluDer = function (dy, y) {\n        return notYetImplemented('eluDer');\n    };\n    KernelBackend.prototype.selu = function (x) {\n        return notYetImplemented('selu');\n    };\n    KernelBackend.prototype.int = function (x) {\n        return notYetImplemented('int');\n    };\n    KernelBackend.prototype.clip = function (x, min, max) {\n        return notYetImplemented('clip');\n    };\n    KernelBackend.prototype.abs = function (x) {\n        return notYetImplemented('abs');\n    };\n    KernelBackend.prototype.complexAbs = function (x) {\n        return notYetImplemented('complexAbs');\n    };\n    KernelBackend.prototype.sigmoid = function (x) {\n        return notYetImplemented('sigmoid');\n    };\n    KernelBackend.prototype.softplus = function (x) {\n        return notYetImplemented('softplus');\n    };\n    KernelBackend.prototype.sin = function (x) {\n        return notYetImplemented('sin');\n    };\n    KernelBackend.prototype.cos = function (x) {\n        return notYetImplemented('cos');\n    };\n    KernelBackend.prototype.tan = function (x) {\n        return notYetImplemented('tan');\n    };\n    KernelBackend.prototype.asin = function (x) {\n        return notYetImplemented('asin');\n    };\n    KernelBackend.prototype.acos = function (x) {\n        return notYetImplemented('acos');\n    };\n    KernelBackend.prototype.atan = function (x) {\n        return notYetImplemented('atan');\n    };\n    KernelBackend.prototype.atan2 = function (a, b) {\n        return notYetImplemented('atan2');\n    };\n    KernelBackend.prototype.sinh = function (x) {\n        return notYetImplemented('sinh');\n    };\n    KernelBackend.prototype.cosh = function (x) {\n        return notYetImplemented('cosh');\n    };\n    KernelBackend.prototype.tanh = function (x) {\n        return notYetImplemented('tanh');\n    };\n    KernelBackend.prototype.asinh = function (x) {\n        return notYetImplemented('asinh');\n    };\n    KernelBackend.prototype.acosh = function (x) {\n        return notYetImplemented('acosh');\n    };\n    KernelBackend.prototype.atanh = function (x) {\n        return notYetImplemented('atanh');\n    };\n    KernelBackend.prototype.erf = function (x) {\n        return notYetImplemented('erf');\n    };\n    KernelBackend.prototype.step = function (x, alpha) {\n        return notYetImplemented('step');\n    };\n    KernelBackend.prototype.fusedConv2d = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedConv2d');\n    };\n    KernelBackend.prototype.conv2d = function (x, filter, convInfo) {\n        return notYetImplemented('conv2d');\n    };\n    KernelBackend.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('conv2dDerInput');\n    };\n    KernelBackend.prototype.conv2dDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('conv2dDerFilter');\n    };\n    KernelBackend.prototype.fusedDepthwiseConv2D = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        return notYetImplemented('fusedDepthwiseConv2D');\n    };\n    KernelBackend.prototype.depthwiseConv2D = function (input, filter, convInfo) {\n        return notYetImplemented('depthwiseConv2D');\n    };\n    KernelBackend.prototype.depthwiseConv2DDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('depthwiseConv2DDerInput');\n    };\n    KernelBackend.prototype.depthwiseConv2DDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('depthwiseConv2DDerFilter');\n    };\n    KernelBackend.prototype.conv3d = function (x, filter, convInfo) {\n        return notYetImplemented('conv3d');\n    };\n    KernelBackend.prototype.conv3dDerInput = function (dy, filter, convInfo) {\n        return notYetImplemented('conv3dDerInput');\n    };\n    KernelBackend.prototype.conv3dDerFilter = function (x, dY, convInfo) {\n        return notYetImplemented('conv3dDerFilter');\n    };\n    KernelBackend.prototype.maxPool = function (x, convInfo) {\n        return notYetImplemented('maxPool');\n    };\n    KernelBackend.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        return notYetImplemented('maxPoolBackprop');\n    };\n    KernelBackend.prototype.avgPool = function (x, convInfo) {\n        return notYetImplemented('avgPool');\n    };\n    KernelBackend.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        return notYetImplemented('avgPoolBackprop');\n    };\n    KernelBackend.prototype.avgPool3d = function (x, convInfo) {\n        return notYetImplemented('avgPool3d');\n    };\n    KernelBackend.prototype.avgPool3dBackprop = function (dy, x, convInfo) {\n        return notYetImplemented('avgPool3dBackprop');\n    };\n    KernelBackend.prototype.maxPool3d = function (x, convInfo) {\n        return notYetImplemented('maxPool3d');\n    };\n    KernelBackend.prototype.maxPool3dBackprop = function (dy, x, y, convInfo) {\n        return notYetImplemented('maxPool3dBackprop');\n    };\n    KernelBackend.prototype.reshape = function (x, shape) {\n        return notYetImplemented('reshape');\n    };\n    KernelBackend.prototype.cast = function (x, dtype) {\n        return notYetImplemented('cast');\n    };\n    KernelBackend.prototype.tile = function (x, reps) {\n        return notYetImplemented('tile');\n    };\n    KernelBackend.prototype.pad = function (x, paddings, constantValue) {\n        return notYetImplemented('pad');\n    };\n    KernelBackend.prototype.transpose = function (x, perm) {\n        return notYetImplemented('transpose');\n    };\n    KernelBackend.prototype.gather = function (x, indices, axis) {\n        return notYetImplemented('gather');\n    };\n    KernelBackend.prototype.gatherND = function (x, indices) {\n        return notYetImplemented('gatherND');\n    };\n    KernelBackend.prototype.scatterND = function (indices, updates, shape) {\n        return notYetImplemented('scatterND');\n    };\n    KernelBackend.prototype.batchToSpaceND = function (x, blockShape, crops) {\n        return notYetImplemented('batchToSpaceND');\n    };\n    KernelBackend.prototype.spaceToBatchND = function (x, blockShape, paddings) {\n        return notYetImplemented('spaceToBatchND');\n    };\n    KernelBackend.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        return notYetImplemented('resizeBilinear');\n    };\n    KernelBackend.prototype.resizeBilinearBackprop = function (dy, x, alignCorners) {\n        return notYetImplemented('resizeBilinearBackprop');\n    };\n    KernelBackend.prototype.resizeNearestNeighbor = function (x, newHEight, newWidth, alignCorners) {\n        return notYetImplemented('resizeNearestNeighbor');\n    };\n    KernelBackend.prototype.resizeNearestNeighborBackprop = function (dy, x, alignCorners) {\n        return notYetImplemented('resizeNearestNeighborBackprop');\n    };\n    KernelBackend.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        return notYetImplemented('batchNormalization');\n    };\n    KernelBackend.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        return notYetImplemented('localResponseNormalization4D');\n    };\n    KernelBackend.prototype.LRNGrad = function (dy, inputImage, outputImage, radius, bias, alpha, beta) {\n        return notYetImplemented('LRNGrad');\n    };\n    KernelBackend.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        return notYetImplemented('multinomial');\n    };\n    KernelBackend.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        return notYetImplemented('oneHot');\n    };\n    KernelBackend.prototype.cumsum = function (x, axis, exclusive, reverse) {\n        return notYetImplemented('cumsum');\n    };\n    KernelBackend.prototype.nonMaxSuppression = function (boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n        return notYetImplemented('nonMaxSuppression');\n    };\n    KernelBackend.prototype.fft = function (x) {\n        return notYetImplemented('fft');\n    };\n    KernelBackend.prototype.ifft = function (x) {\n        return notYetImplemented('ifft');\n    };\n    KernelBackend.prototype.complex = function (real, imag) {\n        return notYetImplemented('complex');\n    };\n    KernelBackend.prototype.real = function (input) {\n        return notYetImplemented('real');\n    };\n    KernelBackend.prototype.imag = function (input) {\n        return notYetImplemented('imag');\n    };\n    KernelBackend.prototype.cropAndResize = function (image, boxes, boxIndex, cropSize, method, extrapolationValue) {\n        return notYetImplemented('cropAndResize');\n    };\n    KernelBackend.prototype.depthToSpace = function (x, blockSize, dataFormat) {\n        return notYetImplemented('depthToSpace');\n    };\n    // Aligns with the \"SplitV\" kernel in TensorFlow.\n    KernelBackend.prototype.split = function (value, sizeSplits, axis) {\n        return notYetImplemented('split');\n    };\n    KernelBackend.prototype.sparseToDense = function (sparseIndices, sparseValues, outputShape, defaultValue) {\n        return notYetImplemented('sparseToDense');\n    };\n    KernelBackend.prototype.diag = function (x) {\n        return notYetImplemented('diag');\n    };\n    KernelBackend.prototype.fill = function (shape, value, dtype) {\n        return notYetImplemented('fill');\n    };\n    KernelBackend.prototype.onesLike = function (x) {\n        return notYetImplemented('onesLike');\n    };\n    KernelBackend.prototype.zerosLike = function (x) {\n        return notYetImplemented('zerosLike');\n    };\n    KernelBackend.prototype.linspace = function (start, stop, num) {\n        return notYetImplemented('linspace');\n    };\n    KernelBackend.prototype.dispose = function () {\n        return notYetImplemented('dispose');\n    };\n    return KernelBackend;\n}());\nexports.KernelBackend = KernelBackend;\nfunction notYetImplemented(kernelName) {\n    throw new Error(\"'\" + kernelName + \"' not yet implemented or not found in the registry. \" +\n        \"Did you forget to import the kernel?\");\n}\n//# sourceMappingURL=backend.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_ops_1 = require(\"../ops/tensor_ops\");\nvar util_1 = require(\"../util\");\n// Utilities needed by backend consumers of tf-core.\n__export(require(\"../ops/axis_util\"));\n__export(require(\"../ops/broadcast_util\"));\n__export(require(\"../ops/concat_util\"));\n__export(require(\"../ops/conv_util\"));\nvar types_1 = require(\"../types\");\nexports.upcastType = types_1.upcastType;\nfunction castTensor(x, dtype, backend) {\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return x.clone();\n        }\n        var zerosTensor = tensor_ops_1.zeros(x.shape);\n        var floatX = x.toFloat();\n        var result = backend.complex(floatX, zerosTensor);\n        zerosTensor.dispose();\n        floatX.dispose();\n        return result;\n    }\n    if (!util_1.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        return engine_1.ENGINE.makeTensorFromDataId(x.dataId, x.shape, dtype);\n    }\n    if (x.dtype === 'complex64') {\n        var real = backend.real(x);\n        var result = real.cast(dtype);\n        real.dispose();\n        return result;\n    }\n    if (dtype === 'int32') {\n        return backend.int(x);\n    }\n    else if (dtype === 'bool') {\n        var zero = tensor_ops_1.scalar(0, x.dtype);\n        var result = backend.notEqual(x, zero);\n        zero.dispose();\n        return result;\n    }\n    else {\n        throw new Error(\"Error in Cast: failed to cast \" + x.dtype + \" to \" + dtype);\n    }\n}\nexports.castTensor = castTensor;\nfunction reshapeTensor(x, shape) {\n    return engine_1.ENGINE.makeTensorFromDataId(x.dataId, shape, x.dtype);\n}\nexports.reshapeTensor = reshapeTensor;\nfunction linspaceImpl(start, stop, num) {\n    var step = (stop - start) / (num - 1);\n    var values = util_1.makeZerosTypedArray(num, 'float32');\n    values[0] = start;\n    for (var i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return tensor_ops_1.tensor1d(values, 'float32');\n}\nexports.linspaceImpl = linspaceImpl;\n//# sourceMappingURL=backend_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Implementation of the NonMaxSuppression kernel shared between webgl and cpu.\n */\nvar tensor_ops_1 = require(\"../ops/tensor_ops\");\nfunction nonMaxSuppressionImpl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    var candidates = Array.from(scores)\n        .map(function (score, boxIndex) { return ({ score: score, boxIndex: boxIndex }); })\n        .filter(function (c) { return c.score > scoreThreshold; })\n        .sort(function (c1, c2) { return c2.score - c1.score; });\n    var selected = [];\n    for (var i = 0; i < candidates.length; i++) {\n        var _a = candidates[i], score = _a.score, boxIndex = _a.boxIndex;\n        if (score < scoreThreshold) {\n            break;\n        }\n        var ignoreCandidate = false;\n        for (var j = selected.length - 1; j >= 0; --j) {\n            var iou = intersectionOverUnion(boxes, boxIndex, selected[j]);\n            if (iou >= iouThreshold) {\n                ignoreCandidate = true;\n                break;\n            }\n        }\n        if (!ignoreCandidate) {\n            selected.push(boxIndex);\n            if (selected.length >= maxOutputSize) {\n                break;\n            }\n        }\n    }\n    return tensor_ops_1.tensor1d(selected, 'int32');\n}\nexports.nonMaxSuppressionImpl = nonMaxSuppressionImpl;\nfunction intersectionOverUnion(boxes, i, j) {\n    var iCoord = boxes.subarray(i * 4, i * 4 + 4);\n    var jCoord = boxes.subarray(j * 4, j * 4 + 4);\n    var yminI = Math.min(iCoord[0], iCoord[2]);\n    var xminI = Math.min(iCoord[1], iCoord[3]);\n    var ymaxI = Math.max(iCoord[0], iCoord[2]);\n    var xmaxI = Math.max(iCoord[1], iCoord[3]);\n    var yminJ = Math.min(jCoord[0], jCoord[2]);\n    var xminJ = Math.min(jCoord[1], jCoord[3]);\n    var ymaxJ = Math.max(jCoord[0], jCoord[2]);\n    var xmaxJ = Math.max(jCoord[1], jCoord[3]);\n    var areaI = (ymaxI - yminI) * (xmaxI - xminI);\n    var areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n    if (areaI <= 0 || areaJ <= 0) {\n        return 0.0;\n    }\n    var intersectionYmin = Math.max(yminI, yminJ);\n    var intersectionXmin = Math.max(xminI, xminJ);\n    var intersectionYmax = Math.min(ymaxI, ymaxJ);\n    var intersectionXmax = Math.min(xmaxI, xmaxJ);\n    var intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\n    return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n//# sourceMappingURL=non_max_suppression_impl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** An implementation of the Where kernel shared between cpu and webgl */\nvar array_ops_1 = require(\"../ops/array_ops\");\nfunction whereImpl(condShape, condVals) {\n    var indices = [];\n    for (var i = 0; i < condVals.length; i++) {\n        if (condVals[i]) {\n            indices.push(i);\n        }\n    }\n    var inBuffer = array_ops_1.buffer(condShape, 'int32');\n    var out = array_ops_1.buffer([indices.length, condShape.length], 'int32');\n    for (var i = 0; i < indices.length; i++) {\n        var loc = inBuffer.indexToLoc(indices[i]);\n        var offset = i * condShape.length;\n        out.values.set(loc, offset);\n    }\n    return out.toTensor();\n}\nexports.whereImpl = whereImpl;\n//# sourceMappingURL=where_impl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar erf_util = require(\"../../ops/erf_util\");\nvar selu_util = require(\"../../ops/selu_util\");\nvar UnaryOpProgram = /** @class */ (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nvar CHECK_NAN_SNIPPET = \"if (isnan(x)) return x;\";\nexports.LINEAR = \"return x;\";\nexports.ABS = \"return abs(x);\";\nexports.RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexports.RELU6 = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n\";\nexports.ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \" + selu_util.SELU_SCALEALPHA + \";\\n  float scale = \" + selu_util.SELU_SCALE + \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return CHECK_NAN_SNIPPET + (\"\\n    return x > 0.0 ? 1.0 : float(\" + alpha + \");\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"return -x;\";\nexports.CEIL = \"return ceil(x);\";\nexports.FLOOR = \"return floor(x);\";\nexports.SIGN = \"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n\";\nexports.IS_NAN = \"return float(isnan(x));\";\nexports.IS_INF = \"return float(isinf(x));\";\nexports.IS_FINITE = \"return float(!isnan(x) && !isinf(x));\";\nexports.ROUND = \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\";\nexports.EXP = \"return exp(x);\";\nexports.EXPM1 = \"return exp(x) - 1.0;\";\nexports.LOG = \"if (x < 0.0) return NAN;\\n  return log(x);\";\nexports.LOG1P = \"return log(1.0 + x);\";\nexports.SQRT = \"return sqrt(x);\";\nexports.RSQRT = \"return inversesqrt(x);\";\nexports.SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";\n/**\n * mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n *\n * epsilon is the difference between 1.0 and the next representable\n * float. For a single precision 32 bit float this should be 2^-23, see:\n * https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\n *\n * too_large = (x > -threshold) is value above which exp(x) may overflow\n * but softplus(x) == x is within machine epsilon\n *\n * too_small = (x < threshold) is value below which exp(x) may underflow,\n * but softplus(x) == exp(x) is within machine epsilon.\n */\nexports.SOFTPLUS = \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\";\nexports.SIN = CHECK_NAN_SNIPPET + \"\\n  return sin(x);\\n\";\nexports.COS = CHECK_NAN_SNIPPET + \"\\n  return cos(x);\\n\";\nexports.TAN = \"return tan(x);\";\nexports.ASIN = CHECK_NAN_SNIPPET + \"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return asin(x);\\n\";\nexports.ACOS = CHECK_NAN_SNIPPET + \"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return acos(x);\\n\";\nexports.ATAN = CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.ASINH = CHECK_NAN_SNIPPET + \"return log(x + sqrt(x * x + 1.0));\";\nexports.ACOSH = CHECK_NAN_SNIPPET + \"\\n  if (x < 1.0) return NAN;\\n  return log(x + sqrt(x * x - 1.0));\";\nexports.ATANH = CHECK_NAN_SNIPPET + \"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;\";\nexports.ERF = \"\\n  // Error function is calculated approximately with elementary function.\\n  // See \\\"Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\n  float p = \" + erf_util.ERF_P + \";\\n  float a1 = \" + erf_util.ERF_A1 + \";\\n  float a2 = \" + erf_util.ERF_A2 + \";\\n  float a3 = \" + erf_util.ERF_A3 + \";\\n  float a4 = \" + erf_util.ERF_A4 + \";\\n  float a5 = \" + erf_util.ERF_A5 + \";\\n\\n  float sign = sign(x);\\n  x = abs(x);\\n  float t = 1.0 / (1.0 + p * x);\\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\\n\";\nexports.SQUARE = \"return x * x;\";\nexports.RECIPROCAL = \"return 1.0 / x;\";\nexports.LOGICAL_NOT = \"return float(!(x >= 1.0));\";\nexports.TO_INT = \"return float(int(x));\";\nexports.CLONE = 'return x;';\n//# sourceMappingURL=unaryop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexports.SELU_SCALE = 1.0507009873554804934193349852946;\n//# sourceMappingURL=selu_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction neg_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'neg');\n    var grad = function (dy) {\n        return { $x: function () { return dy.neg(); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.neg($x); }, { $x: $x }, grad);\n}\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction ceil_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'ceil');\n    // TODO(manrajgrover): Return null for gradients when backprop supports it.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.ceil($x); }, { $x: $x }, grad);\n}\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction floor_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'floor');\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.floor($x); }, { $x: $x }, grad);\n}\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sign_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sign');\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.sign($x); }, { $x: $x }, grad);\n}\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isNaN_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'isNaN');\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.isNaN($x); }, { $x: $x }, grad);\n}\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isInf_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'isInf');\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.isInf($x); }, { $x: $x }, grad);\n}\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isFinite_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'isFinite');\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.isFinite($x); }, { $x: $x }, grad);\n}\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction round_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'round');\n    // TODO(nsthorat): Let gradients be null for cases where we want to stop\n    // backpropgation.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.round($x); }, { $x: $x }, grad);\n}\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction exp_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'exp');\n    var bck = function (dy, saved) {\n        return { x: function () { return dy.mulStrict(saved[0]); } };\n    };\n    var attrs = {};\n    var inputsToSave = [];\n    var outputsToSave = [true];\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.exp($x);\n        save([y]);\n        return y;\n    }, { x: $x }, bck, 'Exp', attrs, inputsToSave, outputsToSave);\n}\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction expm1_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'expm1');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.mul($x.exp()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.expm1($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction log_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'log');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.toFloat()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.log($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction log1p_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'log1p');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.add(1)); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.log1p($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sqrt_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sqrt');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.toFloat().sqrt().mul(2)); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.sqrt($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction rsqrt_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'rsqrt');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.pow(1.5).mul(2)).neg(); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.rsqrt($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction reciprocal_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reciprocal');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.square().neg()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.reciprocal($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction abs_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'abs');\n    if ($x.dtype === 'complex64') {\n        return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.complexAbs($x); }, { $x: $x });\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { x: function () { return dy.mul($x.toFloat().step(-1)); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.abs($x);\n        save([$x]);\n        return res;\n    }, { x: $x }, grad, 'Abs');\n}\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'clipByValue');\n    util.assert((clipValueMin <= clipValueMax), function () { return \"Error in clip: min (\" + clipValueMin + \") must be \" +\n        (\"less than or equal to max (\" + clipValueMax + \").\"); });\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            x: function () { return dy.where($x.greaterEqual(clipValueMin)\n                .logicalAnd($x.lessEqual(clipValueMax)), tensor_ops_1.zerosLike(dy)); },\n        };\n    };\n    var inputsToSave = [$x];\n    var attr = { min: clipValueMin, max: clipValueMax };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.clip($x, clipValueMin, clipValueMax);\n        save([$x]);\n        return res;\n    }, { x: $x }, grad, 'ClipByValue', attr, inputsToSave);\n}\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sigmoid_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sigmoid');\n    var grad = function (dy, saved) {\n        var y = saved[0];\n        return { x: function () { return dy.mul(y.mul(tensor_ops_1.scalar(1).sub(y))); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.sigmoid($x);\n        save([y]);\n        return y;\n    }, { x: $x }, grad, 'Sigmoid');\n}\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction logSigmoid_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'logSigmoid');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.mul($x.neg().sigmoid()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.softplus($x.neg()).neg();\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction softplus_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'softplus');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.mul($x.sigmoid()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.softplus($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sin_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sin');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return $x.toFloat().cos().mul(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.sin($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction cos_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'cos');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return $x.toFloat().sin().neg().mul(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.cos($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction tan_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'tan');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.cos().square()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.tan($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction asin_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'asin');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            $x: function () { return dy.divStrict(tensor_ops_1.scalar(1).sub($x.toFloat().square()).sqrt()); }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.asin($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction acos_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'acos');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            $x: function () {\n                return dy.divStrict(tensor_ops_1.scalar(1).sub($x.toFloat().square()).sqrt()).neg();\n            }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.acos($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atan_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'atan');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div($x.toFloat().square().add(1)); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.atan($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sinh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sinh');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return $x.toFloat().cosh().mulStrict(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.sinh($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction cosh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'cosh');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return $x.toFloat().sinh().mulStrict(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.cosh($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction tanh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'tanh');\n    var grad = function (dy, saved) {\n        var y = saved[0];\n        return { $x: function () { return tensor_ops_1.scalar(1).sub(y.square()).mulStrict(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.tanh($x);\n        save([y]);\n        return y;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction asinh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'asinh');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            $x: function () { return dy.divStrict(tensor_ops_1.scalar(1).add($x.toFloat().square()).sqrt()); }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.asinh($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction acosh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'acosh');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.divStrict($x.toFloat().square().sub(1).sqrt()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.acosh($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atanh_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'atanh');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return dy.div(tensor_ops_1.scalar(1).sub($x.toFloat().square())); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.atanh($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction erf_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'erf');\n    util.assert($x.dtype === 'int32' || $x.dtype === 'float32', function () { return 'Input dtype must be `int32` or `float32`.'; });\n    if ($x.dtype === 'int32') {\n        $x = $x.toFloat();\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            $x: function () { return dy.mul($x.square().neg().exp().mul(2 / Math.sqrt(Math.PI))); }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.erf($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction step_(x, alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'step');\n    // TODO(manrajgrover): Return null for gradients when backprop supports\n    // it.\n    var grad = function (dy) {\n        return { $x: function () { return tensor_ops_1.zerosLike(dy); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.step($x, alpha); }, { $x: $x }, grad);\n}\nexports.abs = operation_1.op({ abs_: abs_ });\nexports.acos = operation_1.op({ acos_: acos_ });\nexports.acosh = operation_1.op({ acosh_: acosh_ });\nexports.asin = operation_1.op({ asin_: asin_ });\nexports.asinh = operation_1.op({ asinh_: asinh_ });\nexports.atan = operation_1.op({ atan_: atan_ });\nexports.atanh = operation_1.op({ atanh_: atanh_ });\nexports.ceil = operation_1.op({ ceil_: ceil_ });\nexports.clipByValue = operation_1.op({ clipByValue_: clipByValue_ });\nexports.cos = operation_1.op({ cos_: cos_ });\nexports.cosh = operation_1.op({ cosh_: cosh_ });\nexports.erf = operation_1.op({ erf_: erf_ });\nexports.exp = operation_1.op({ exp_: exp_ });\nexports.expm1 = operation_1.op({ expm1_: expm1_ });\nexports.floor = operation_1.op({ floor_: floor_ });\nexports.log = operation_1.op({ log_: log_ });\nexports.log1p = operation_1.op({ log1p_: log1p_ });\nexports.logSigmoid = operation_1.op({ logSigmoid_: logSigmoid_ });\nexports.neg = operation_1.op({ neg_: neg_ });\nexports.reciprocal = operation_1.op({ reciprocal_: reciprocal_ });\nexports.round = operation_1.op({ round_: round_ });\nexports.rsqrt = operation_1.op({ rsqrt_: rsqrt_ });\nexports.sigmoid = operation_1.op({ sigmoid_: sigmoid_ });\nexports.sign = operation_1.op({ sign_: sign_ });\nexports.isNaN = operation_1.op({ isNaN_: isNaN_ });\nexports.isInf = operation_1.op({ isInf_: isInf_ });\nexports.isFinite = operation_1.op({ isFinite_: isFinite_ });\nexports.sin = operation_1.op({ sin_: sin_ });\nexports.sinh = operation_1.op({ sinh_: sinh_ });\nexports.softplus = operation_1.op({ softplus_: softplus_ });\nexports.sqrt = operation_1.op({ sqrt_: sqrt_ });\nexports.step = operation_1.op({ step_: step_ });\nexports.tan = operation_1.op({ tan_: tan_ });\nexports.tanh = operation_1.op({ tanh_: tanh_ });\n//# sourceMappingURL=unary_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar conv_util = require(\"./conv_util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv1d_(x, filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n    if (dataFormat === void 0) { dataFormat = 'NWC'; }\n    if (dilation === void 0) { dilation = 1; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv1d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv1d');\n    var x3D = $x;\n    var reshapedTo3D = false;\n    if ($x.rank === 2) {\n        reshapedTo3D = true;\n        x3D = $x.as3D(1, $x.shape[0], $x.shape[1]);\n    }\n    util.assert(x3D.rank === 3, function () { return \"Error in conv1d: input must be rank 3, but got rank \" + x3D.rank + \".\"; });\n    util.assert($filter.rank === 3, function () { return \"Error in conv1d: filter must be rank 3, but got rank \" +\n        ($filter.rank + \".\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in conv1d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    util.assert(x3D.shape[2] === $filter.shape[1], function () { return \"Error in conv1d: depth of input (\" + x3D.shape[2] + \") must match \" +\n        (\"input depth for filter \" + $filter.shape[1] + \".\"); });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(stride, dilation), function () { return 'Error in conv1D: Either stride or dilation must be 1. ' +\n        (\"Got stride \" + stride + \" and dilation '\" + dilation + \"'\"); });\n    util.assert(dataFormat === 'NWC', function () { return \"Error in conv1d: got dataFormat of \" + dataFormat + \" but only NWC is currently supported.\"; });\n    var filter4D = $filter.as4D(1, $filter.shape[0], $filter.shape[1], $filter.shape[2]);\n    var input4D = x3D.as4D(x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]);\n    var strides = [1, stride];\n    var dilations = [1, dilation];\n    var conv2dDataFormat = 'NHWC';\n    var res = exports.conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n    if (reshapedTo3D) {\n        return res.as2D(res.shape[2], res.shape[3]);\n    }\n    return res.as3D(res.shape[0], res.shape[2], res.shape[3]);\n}\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2d_(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    if (dilations === void 0) { dilations = [1, 1]; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv2d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv2d');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in conv2d: input must be rank 4, but got rank \" + x4D.rank + \".\"; });\n    util.assert($filter.rank === 4, function () { return \"Error in conv2d: filter must be rank 4, but got rank \" +\n        ($filter.rank + \".\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in conv2d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    util.assert(inDepth === $filter.shape[2], function () { return \"Error in conv2d: depth of input (\" + inDepth + \") must match \" +\n        (\"input depth for filter \" + $filter.shape[2] + \".\"); });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in conv2D: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    var $dataFormat = conv_util.convertConv2DDataFormat(dataFormat);\n    var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n    var grad = function (dy, saved) {\n        var _a = saved, $filter = _a[0], x4D = _a[1];\n        util.assert(conv_util.tupleValuesAreOne(dilations), function () { return 'Error in gradient of conv2D: dilation rates greater than 1 ' +\n            (\"are not yet supported in gradients. Got dilations '\" + dilations + \"'\"); });\n        return {\n            x: function () { return exports.conv2dDerInput(x4D.shape, dy, $filter, strides, pad, dataFormat); },\n            filter: function () {\n                return exports.conv2dDerFilter(x4D, dy, $filter.shape, strides, pad, dataFormat);\n            }\n        };\n    };\n    var inputsToSave = [$filter, x4D];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.conv2d(x4D, $filter, convInfo);\n        save([$filter, x4D]);\n        return res;\n    }, { x: x4D, filter: $filter }, grad, 'Conv2D', convInfo, inputsToSave);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction conv2dDerInput_(xShape, dy, filter, strides, pad, dataFormat, dimRoundingMode) {\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    util.assert(xShape.length === dy.rank, function () { return \"Length of inShape \" +\n        (\"(\" + xShape.length + \") and rank of dy (\" + dy.rank + \") must match\"); });\n    var xShape4D = xShape;\n    var dy4D = dy;\n    var reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n        xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n    }\n    util.assert(xShape4D.length === 4, function () {\n        return \"Error in conv2dDerInput: inShape must be length 4, but got length \" +\n            (xShape4D.length + \".\");\n    });\n    util.assert(dy4D.rank === 4, function () { return \"Error in conv2dDerInput: dy must be rank 4, but got \" +\n        (\"rank \" + dy4D.rank); });\n    util.assert(filter.rank === 4, function () { return \"Error in conv2dDerInput: filter must be rank 4, but got \" +\n        (\"rank \" + filter.rank); });\n    var inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n    var outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    util.assert(inDepth === filter.shape[2], function () { return \"Error in conv2dDerInput: depth of input (\" + inDepth + \") must \" +\n        (\"match input depth for filter \" + filter.shape[2] + \".\"); });\n    util.assert(outDepth === filter.shape[3], function () { return \"Error in conv2dDerInput: depth of output (\" + outDepth + \") must \" +\n        (\"match output depth for filter \" + filter.shape[3] + \".\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in conv2dDerInput: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var dilations = 1;\n    var grad = function (ddx, saved) {\n        var filter = saved[0], dy4D = saved[1];\n        return {\n            dy4D: function () { return exports.conv2d(ddx, filter, strides, pad, dataFormat, dilations, dimRoundingMode); },\n            filter: function () { return exports.conv2dDerFilter(ddx, dy4D, filter.shape, strides, pad, dataFormat, dimRoundingMode); }\n        };\n    };\n    var $dataFormat = conv_util.convertConv2DDataFormat(dataFormat);\n    var convInfo = conv_util.computeConv2DInfo(xShape4D, filter.shape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.conv2dDerInput(dy4D, filter, convInfo);\n        save([filter, dy4D]);\n        return res;\n    }, { dy4D: dy4D, filter: filter }, grad);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction conv2dDerFilter_(x, dy, filterShape, strides, pad, dataFormat, dimRoundingMode) {\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    var x4D = x;\n    if (x.rank === 3) {\n        x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    var dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in conv2dDerFilter: input must be rank 4, but got shape \" +\n        (x4D.shape + \".\"); });\n    util.assert(dy4D.rank === 4, function () { return \"Error in conv2dDerFilter: dy must be rank 4, but got shape \" +\n        (dy4D.shape + \".\"); });\n    util.assert(filterShape.length === 4, function () { return \"Error in conv2dDerFilter: filterShape must be length 4, but got \" +\n        (filterShape + \".\"); });\n    var inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    var outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    util.assert(inDepth === filterShape[2], function () { return \"Error in conv2dDerFilter: depth of input \" + inDepth + \") must \" +\n        (\"match input depth in filter (\" + filterShape[2] + \".\"); });\n    util.assert(outDepth === filterShape[3], function () { return \"Error in conv2dDerFilter: depth of dy (\" + outDepth + \") must \" +\n        (\"match output depth for filter (\" + filterShape[3] + \").\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in conv2dDerFilter: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var dilations = 1;\n    var $dataFormat = conv_util.convertConv2DDataFormat(dataFormat);\n    var convInfo = conv_util.computeConv2DInfo(x4D.shape, filterShape, strides, dilations, pad, dimRoundingMode, false, $dataFormat);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.conv2dDerFilter(x4D, dy4D, convInfo); }, { x4D: x4D, dy4D: dy4D });\n}\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode The rounding mode used when computing output\n *    dimensions if pad is a number. If none is provided, it will not round\n *    and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv2dTranspose');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv2dTranspose');\n    return conv2dDerInput_(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction depthwiseConv2d_(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode) {\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    if (dilations === void 0) { dilations = [1, 1]; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'depthwiseConv2d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'depthwiseConv2d');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in depthwiseConv2d: input must be rank 4, but got \" +\n        (\"rank \" + x4D.rank + \".\"); });\n    util.assert($filter.rank === 4, function () { return \"Error in depthwiseConv2d: filter must be rank 4, but got rank \" +\n        ($filter.rank + \".\"); });\n    util.assert(x4D.shape[3] === $filter.shape[2], function () { return \"Error in depthwiseConv2d: number of input channels \" +\n        (\"(\" + x4D.shape[3] + \") must match the inChannels dimension in \") +\n        (\"filter \" + $filter.shape[2] + \".\"); });\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n        return 'Error in depthwiseConv2d: Either strides or dilations must be 1. ' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\");\n    });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in depthwiseConv2d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    var grad = function (dy, saved) {\n        util.assert(conv_util.tupleValuesAreOne(dilations), function () { return 'Error in gradient of depthwiseConv2d: dilation rates ' +\n            \"greater than 1 are not yet supported. Got dilations \" +\n            (\"'\" + dilations + \"'\"); });\n        var x4D = saved[0], $filter = saved[1];\n        return {\n            x: function () { return exports.depthwiseConv2dDerInput(x4D.shape, dy, $filter, convInfo); },\n            filter: function () { return exports.depthwiseConv2dDerFilter(x4D, dy, $filter.shape, convInfo); },\n        };\n    };\n    var inputsToSave = [x4D, $filter];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.depthwiseConv2D(x4D, $filter, convInfo);\n        save([x4D, $filter]);\n        return res;\n    }, { x: x4D, filter: $filter }, grad, 'DepthwiseConv2dNative', convInfo, inputsToSave);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad, dilation, dataFormat) {\n    if (dilation === void 0) { dilation = [1, 1]; }\n    if (dataFormat === void 0) { dataFormat = 'NHWC'; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'separableConv2d');\n    var $depthwiseFilter = tensor_util_env_1.convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n    var $pointwiseFilter = tensor_util_env_1.convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    if (dataFormat === 'NCHW') {\n        throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n            'NHWC is supported');\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in separableConv2d: input must be rank 4, but got \" +\n        (\"rank \" + x4D.rank + \".\"); });\n    util.assert($depthwiseFilter.rank === 4, function () { return \"Error in separableConv2d: depthwise filter must be rank 4, but \" +\n        (\"got rank \" + $depthwiseFilter.rank + \".\"); });\n    util.assert($pointwiseFilter.rank === 4, function () { return \"Error in separableConv2d: pointwise filter must be rank 4, but \" +\n        (\"got rank \" + $depthwiseFilter.rank + \".\"); });\n    util.assert($pointwiseFilter.shape[0] === 1, function () {\n        return \"Error in separableConv2d: the first dimension of pointwise filter \" +\n            (\" must be 1, but got \" + $pointwiseFilter.shape[0] + \".\");\n    });\n    util.assert($pointwiseFilter.shape[1] === 1, function () { return \"Error in separableConv2d: the second dimension of pointwise \" +\n        (\"filter must be 1, but got \" + $pointwiseFilter.shape[1] + \".\"); });\n    var inChannels = $depthwiseFilter.shape[2];\n    var channelMultiplier = $depthwiseFilter.shape[3];\n    util.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, function () {\n        return \"Error in separableConv2d: the third dimension of pointwise filter \" +\n            (\"must be \" + inChannels * channelMultiplier + \", \") +\n            (\"but got \" + $pointwiseFilter.shape[2] + \".\");\n    });\n    var depthwise = exports.depthwiseConv2d(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n    var pointwiseStride = 1;\n    var res = exports.conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction tupleValuesAreOne(param) {\n    var _a = parseTupleParam(param), dimA = _a[0], dimB = _a[1], dimC = _a[2];\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\nfunction depthwiseConv2dDerInput_(xShape, dy, filter, convInfo) {\n    var dy4D = dy;\n    var reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n    }\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.depthwiseConv2DDerInput(dy4D, filter, convInfo); }, { dy4D: dy4D });\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\nfunction depthwiseConv2dDerFilter_(x, dy, filterShape, convInfo) {\n    var x4D = x;\n    if (x.rank === 3) {\n        x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    var dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n    }\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.depthwiseConv2DDerFilter(x4D, dy4D, convInfo); }, { x4D: x4D, dy4D: dy4D });\n}\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv3d_(x, filter, strides, pad, dataFormat, dilations) {\n    if (dataFormat === void 0) { dataFormat = 'NDHWC'; }\n    if (dilations === void 0) { dilations = [1, 1, 1]; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv3d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv3d');\n    var x5D = $x;\n    var reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = $x.as5D(1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]);\n    }\n    util.assert(x5D.rank === 5, function () { return \"Error in conv3d: input must be rank 5, but got rank \" + x5D.rank + \".\"; });\n    util.assert($filter.rank === 5, function () { return \"Error in conv3d: filter must be rank 5, but got rank \" +\n        ($filter.rank + \".\"); });\n    util.assert(x5D.shape[4] === $filter.shape[3], function () { return \"Error in conv3d: depth of input (\" + x5D.shape[4] + \") must match \" +\n        (\"input depth for filter \" + $filter.shape[3] + \".\"); });\n    util.assert(eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in conv3D: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    util.assert(dataFormat === 'NDHWC', function () { return \"Error in conv3d: got dataFormat of \" + dataFormat + \" but only NDHWC is currently supported.\"; });\n    var convInfo = conv_util.computeConv3DInfo(x5D.shape, $filter.shape, strides, dilations, pad);\n    var grad = function (dy, saved) {\n        util.assert(tupleValuesAreOne(dilations), function () {\n            return 'Error in gradient of conv3D: dilation rates greater than 1 are ' +\n                (\"not yet supported in gradients. Got dilations '\" + dilations + \"'\");\n        });\n        var x5D = saved[0], $filter = saved[1];\n        return {\n            x: function () { return conv3dDerInput_(x5D.shape, dy, $filter, strides, pad); },\n            $filter: function () { return conv3dDerFilter_(x5D, dy, $filter.shape, strides, pad); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.conv3d(x5D, $filter, convInfo);\n        save([x5D, $filter]);\n        return res;\n    }, { x: x5D, $filter: $filter }, grad);\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3dDerInput_(xShape, dy, filter, strides, pad) {\n    util.assert(xShape.length === dy.rank, function () { return \"Length of inShape \" +\n        (\"(\" + xShape.length + \") and rank of dy (\" + dy.rank + \") must match\"); });\n    var xShape5D = xShape;\n    var dy5D = dy;\n    var reshapedTo5D = false;\n    if (dy.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = dy.as5D(1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]);\n        xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n    }\n    var inDepth = xShape5D[4];\n    var outDepth = dy5D.shape[4];\n    util.assert(xShape5D.length === 5, function () {\n        return \"Error in conv3dDerInput: inShape must be length 5, but got length \" +\n            (xShape5D.length + \".\");\n    });\n    util.assert(dy5D.rank === 5, function () { return \"Error in conv3dDerInput: dy must be rank 5, but got \" +\n        (\"rank \" + dy5D.rank); });\n    util.assert(filter.rank === 5, function () { return \"Error in conv3dDerInput: filter must be rank 5, but got \" +\n        (\"rank \" + filter.rank); });\n    util.assert(inDepth === filter.shape[3], function () { return \"Error in conv3dDerInput: depth of input (\" + inDepth + \") must \" +\n        (\"match input depth for filter \" + filter.shape[3] + \".\"); });\n    util.assert(outDepth === filter.shape[4], function () { return \"Error in conv3dDerInput: depth of output (\" + outDepth + \") must \" +\n        (\"match output depth for filter \" + filter.shape[4] + \".\"); });\n    var dilations = 1;\n    var convInfo = conv_util.computeConv3DInfo(xShape5D, filter.shape, strides, dilations, pad);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.conv3dDerInput(dy5D, filter, convInfo); }, { dy5D: dy5D });\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\n/**\n * Computes the derivative of the filter of a 3D convolution.\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     [batch, depth, height, width, inChannels]. If rank 4, batch of 1 is\n *     assumed.\n * @param dy The dy image, of rank 5 or rank 4, of shape\n *     [batch, depth, height, width, outDepth]. If rank 4, batch of 1 is\n *     assumed.\n * @param filterShape The shape of the filter, length 5,\n *     [filterDepth, filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideDepth, strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\nfunction conv3dDerFilter_(x, dy, filterShape, strides, pad) {\n    var x5D = x;\n    if (x.rank === 4) {\n        x5D = x.as5D(1, x.shape[0], x.shape[1], x.shape[2], x.shape[3]);\n    }\n    var dy5D = dy;\n    if (dy5D.rank === 4) {\n        dy5D = dy.as5D(1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]);\n    }\n    util.assert(x5D.rank === 5, function () { return \"Error in conv3dDerFilter: input must be rank 5, but got shape \" +\n        (x5D.shape + \".\"); });\n    util.assert(dy5D.rank === 5, function () { return \"Error in conv3dDerFilter: dy must be rank 5, but got shape \" +\n        (dy5D.shape + \".\"); });\n    util.assert(filterShape.length === 5, function () { return \"Error in conv3dDerFilter: filterShape must be length 5, but got \" +\n        (filterShape + \".\"); });\n    util.assert(x5D.shape[4] === filterShape[3], function () { return \"Error in conv3dDerFilter: depth of input \" + x5D.shape[4] + \") must \" +\n        (\"match input depth in filter (\" + filterShape[3] + \".\"); });\n    util.assert(dy5D.shape[4] === filterShape[4], function () { return \"Error in conv3dDerFilter: depth of dy (\" + dy5D.shape[4] + \") must \" +\n        (\"match output depth for filter (\" + filterShape[4] + \").\"); });\n    var dilations = 1;\n    var convInfo = conv_util.computeConv3DInfo(x5D.shape, filterShape, strides, dilations, pad);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.conv3dDerFilter(x5D, dy5D, convInfo); }, { x5D: x5D, dy5D: dy5D });\n}\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv3dTranspose');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv3dTranspose');\n    return conv3dDerInput_(outputShape, $x, $filter, strides, pad);\n}\nexports.conv1d = operation_1.op({ conv1d_: conv1d_ });\nexports.conv2d = operation_1.op({ conv2d_: conv2d_ });\nexports.conv3d = operation_1.op({ conv3d_: conv3d_ });\nexports.conv2dDerFilter = operation_1.op({ conv2dDerFilter_: conv2dDerFilter_ });\nexports.conv2dDerInput = operation_1.op({ conv2dDerInput_: conv2dDerInput_ });\nexports.depthwiseConv2d = operation_1.op({ depthwiseConv2d_: depthwiseConv2d_ });\nexports.depthwiseConv2dDerInput = operation_1.op({ depthwiseConv2dDerInput_: depthwiseConv2dDerInput_ });\nexports.depthwiseConv2dDerFilter = operation_1.op({ depthwiseConv2dDerFilter_: depthwiseConv2dDerFilter_ });\nexports.separableConv2d = operation_1.op({ separableConv2d_: separableConv2d_ });\nexports.conv2dTranspose = operation_1.op({ conv2dTranspose_: conv2dTranspose_ });\nexports.conv3dTranspose = operation_1.op({ conv3dTranspose_: conv3dTranspose_ });\n//# sourceMappingURL=conv.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar slice_util = require(\"./slice_util\");\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(x, begin, size) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'slice1d');\n    util.assert($x.rank === 1, function () {\n        return \"slice1d expects a rank-1 tensor, but got a rank-\" + $x.rank + \" tensor\";\n    });\n    return exports.slice($x, [begin], [size]);\n}\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(x, begin, size) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'slice2d');\n    util.assert($x.rank === 2, function () {\n        return \"slice2d expects a rank-2 tensor, but got a rank-\" + $x.rank + \" tensor\";\n    });\n    return exports.slice($x, begin, size);\n}\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(x, begin, size) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'slice3d');\n    util.assert($x.rank === 3, function () {\n        return \"slice3d expects a rank-3 tensor, but got a rank-\" + $x.rank + \" tensor\";\n    });\n    return exports.slice($x, begin, size);\n}\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(x, begin, size) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'slice4d');\n    util.assert($x.rank === 4, function () {\n        return \"slice4d expects a rank-4 tensor, but got a rank-\" + $x.rank + \" tensor\";\n    });\n    return exports.slice($x, begin, size);\n}\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction slice_(x, begin, size) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'slice');\n    if ($x.rank === 0) {\n        throw new Error('Slicing scalar is not possible');\n    }\n    // The following logic allows for more ergonomic calls.\n    var begin_;\n    if (typeof begin === 'number') {\n        begin_ = [begin].concat(new Array($x.rank - 1).fill(0));\n    }\n    else if (begin.length < $x.rank) {\n        begin_ = begin.concat(new Array($x.rank - begin.length).fill(0));\n    }\n    else {\n        begin_ = begin.slice();\n    }\n    begin_.forEach(function (d) {\n        util.assert(d !== -1, function () { return 'slice() does not support negative begin indexing.'; });\n    });\n    var size_;\n    if (size == null) {\n        size_ = new Array($x.rank).fill(-1);\n    }\n    else if (typeof size === 'number') {\n        size_ = [size].concat(new Array($x.rank - 1).fill(-1));\n    }\n    else if (size.length < $x.rank) {\n        size_ = size.concat(new Array($x.rank - size.length).fill(-1));\n    }\n    else {\n        size_ = size;\n    }\n    size_ = size_.map(function (d, i) {\n        if (d >= 0) {\n            return d;\n        }\n        else {\n            util.assert(d === -1, function () { return \"Negative size values should be exactly -1 but got \" +\n                (d + \" for the slice() size at index \" + i + \".\"); });\n            return $x.shape[i] - begin_[i];\n        }\n    });\n    slice_util.assertParamsValid($x, begin_, size_);\n    var inputShape = $x.shape;\n    var grad = function (dy) {\n        // Create an Nx2 padding where the first column represents how many\n        // zeros are prepended (at start) for each dimension, and the second\n        // column indicates how many zeros are appended (at end).\n        // The number of zeros to append is the shape of the input\n        // elementwise-subtracted by both the begin vector and sizes vector.\n        var paddings = [];\n        for (var i = 0; i < dy.rank; i++) {\n            paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n        }\n        return { x: function () { return dy.pad(paddings); } };\n    };\n    var attrs = { begin: begin_, size: size_ };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.slice($x, begin_, size_); }, { x: $x }, grad, 'Slice', attrs);\n}\nexports.slice = operation_1.op({ slice_: slice_ });\nexports.slice1d = operation_1.op({ slice1d_: slice1d_ });\nexports.slice2d = operation_1.op({ slice2d_: slice2d_ });\nexports.slice3d = operation_1.op({ slice3d_: slice3d_ });\nexports.slice4d = operation_1.op({ slice4d_: slice4d_ });\n//# sourceMappingURL=slice.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar complex_ops_1 = require(\"../ops/complex_ops\");\nvar operation_1 = require(\"../ops/operation\");\nvar util_1 = require(\"../util\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input) {\n    util_1.assert(input.dtype === 'complex64', function () { return \"The dtype for tf.spectral.fft() must be complex64 \" +\n        (\"but got \" + input.dtype + \".\"); });\n    // Collapse all outer dimensions to a single batch dimension.\n    var innerDimensionSize = input.shape[input.shape.length - 1];\n    var batch = input.size / innerDimensionSize;\n    var input2D = input.as2D(batch, innerDimensionSize);\n    var ret = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.fft(input2D); }, { input: input });\n    return ret.reshape(input.shape);\n}\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input) {\n    util_1.assert(input.dtype === 'complex64', function () { return \"The dtype for tf.spectral.ifft() must be complex64 \" +\n        (\"but got \" + input.dtype + \".\"); });\n    // Collapse all outer dimensions to a single batch dimension.\n    var innerDimensionSize = input.shape[input.shape.length - 1];\n    var batch = input.size / innerDimensionSize;\n    var input2D = input.as2D(batch, innerDimensionSize);\n    var ret = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.ifft(input2D); }, { input: input });\n    return ret.reshape(input.shape);\n}\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input, fftLength) {\n    util_1.assert(input.dtype === 'float32', function () { return \"The dtype for rfft() must be real value but got \" + input.dtype; });\n    var innerDimensionSize = input.shape[input.shape.length - 1];\n    var batch = input.size / innerDimensionSize;\n    var adjustedInput;\n    if (fftLength != null && fftLength < innerDimensionSize) {\n        // Need to crop\n        var begin = input.shape.map(function (v) { return 0; });\n        var size = input.shape.map(function (v) { return v; });\n        size[input.shape.length - 1] = fftLength;\n        adjustedInput = input.slice(begin, size);\n        innerDimensionSize = fftLength;\n    }\n    else if (fftLength != null && fftLength > innerDimensionSize) {\n        // Need to pad with zeros\n        var zerosShape = input.shape.map(function (v) { return v; });\n        zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n        adjustedInput = input.concat(tensor_ops_1.zeros(zerosShape), input.shape.length - 1);\n        innerDimensionSize = fftLength;\n    }\n    else {\n        adjustedInput = input;\n    }\n    // Complement the input with zero imaginary numbers.\n    var zerosInput = adjustedInput.zerosLike();\n    var complexInput = complex_ops_1.complex(adjustedInput, zerosInput).as2D(batch, innerDimensionSize);\n    var ret = exports.fft(complexInput);\n    // Exclude complex conjugations. These conjugations are put symmetrically.\n    var half = Math.floor(innerDimensionSize / 2) + 1;\n    var realValues = complex_ops_1.real(ret);\n    var imagValues = complex_ops_1.imag(ret);\n    var realComplexConjugate = realValues.split([half, innerDimensionSize - half], realValues.shape.length - 1);\n    var imagComplexConjugate = imagValues.split([half, innerDimensionSize - half], imagValues.shape.length - 1);\n    var outputShape = adjustedInput.shape.slice();\n    outputShape[adjustedInput.shape.length - 1] = half;\n    return complex_ops_1.complex(realComplexConjugate[0], imagComplexConjugate[0])\n        .reshape(outputShape);\n}\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input) {\n    var innerDimensionSize = input.shape[input.shape.length - 1];\n    var batch = input.size / innerDimensionSize;\n    if (innerDimensionSize <= 2) {\n        var complexInput = input.as2D(batch, innerDimensionSize);\n        var ret = exports.ifft(complexInput);\n        return complex_ops_1.real(ret);\n    }\n    else {\n        // The length of unique components of the DFT of a real-valued signal\n        // is 2 * (input_len - 1)\n        var outputShape = [batch, 2 * (innerDimensionSize - 1)];\n        var realInput = complex_ops_1.real(input).as2D(batch, innerDimensionSize);\n        var imagInput = complex_ops_1.imag(input).as2D(batch, innerDimensionSize);\n        var realConjugate = realInput.slice([0, 1], [batch, innerDimensionSize - 2]).reverse(1);\n        var imagConjugate = imagInput.slice([0, 1], [batch, innerDimensionSize - 2])\n            .reverse(1)\n            .mul(tensor_ops_1.scalar(-1));\n        var r = realInput.concat(realConjugate, 1);\n        var i = imagInput.concat(imagConjugate, 1);\n        var complexInput = complex_ops_1.complex(r, i).as2D(outputShape[0], outputShape[1]);\n        var ret = exports.ifft(complexInput);\n        return complex_ops_1.real(ret);\n    }\n}\nexports.fft = operation_1.op({ fft_: fft_ });\nexports.ifft = operation_1.op({ ifft_: ifft_ });\nexports.rfft = operation_1.op({ rfft_: rfft_ });\nexports.irfft = operation_1.op({ irfft_: irfft_ });\n//# sourceMappingURL=spectral_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\nvar util_1 = require(\"../util\");\nvar router_registry_1 = require(\"./router_registry\");\nvar URL_SCHEME_SUFFIX = '://';\nvar ModelStoreManagerRegistry = /** @class */ (function () {\n    function ModelStoreManagerRegistry() {\n        this.managers = {};\n    }\n    ModelStoreManagerRegistry.getInstance = function () {\n        if (ModelStoreManagerRegistry.instance == null) {\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n        }\n        return ModelStoreManagerRegistry.instance;\n    };\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    ModelStoreManagerRegistry.registerManager = function (scheme, manager) {\n        util_1.assert(scheme != null, function () { return 'scheme must not be undefined or null.'; });\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n        }\n        util_1.assert(scheme.length > 0, function () { return 'scheme must not be an empty string.'; });\n        var registry = ModelStoreManagerRegistry.getInstance();\n        util_1.assert(registry.managers[scheme] == null, function () { return \"A model store manager is already registered for scheme '\" + scheme + \"'.\"; });\n        registry.managers[scheme] = manager;\n    };\n    ModelStoreManagerRegistry.getManager = function (scheme) {\n        var manager = this.getInstance().managers[scheme];\n        if (manager == null) {\n            throw new Error(\"Cannot find model manager for scheme '\" + scheme + \"'\");\n        }\n        return manager;\n    };\n    ModelStoreManagerRegistry.getSchemes = function () {\n        return Object.keys(this.getInstance().managers);\n    };\n    return ModelStoreManagerRegistry;\n}());\nexports.ModelStoreManagerRegistry = ModelStoreManagerRegistry;\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url) {\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n        throw new Error(\"The url string provided does not contain a scheme. \" +\n            \"Supported schemes are: \" +\n            (\"\" + ModelStoreManagerRegistry.getSchemes().join(',')));\n    }\n    return {\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\n        path: url.split(URL_SCHEME_SUFFIX)[1],\n    };\n}\nfunction cloneModelInternal(sourceURL, destURL, deleteSource) {\n    if (deleteSource === void 0) { deleteSource = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var loadHandlers, loadHandler, saveHandlers, saveHandler, sourceScheme, sourcePath, sameMedium, modelArtifacts, saveResult;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    util_1.assert(sourceURL !== destURL, function () { return \"Old path and new path are the same: '\" + sourceURL + \"'\"; });\n                    loadHandlers = router_registry_1.IORouterRegistry.getLoadHandlers(sourceURL);\n                    util_1.assert(loadHandlers.length > 0, function () { return \"Copying failed because no load handler is found for source URL \" + sourceURL + \".\"; });\n                    util_1.assert(loadHandlers.length < 2, function () { return \"Copying failed because more than one (\" + loadHandlers.length + \") \" +\n                        (\"load handlers for source URL \" + sourceURL + \".\"); });\n                    loadHandler = loadHandlers[0];\n                    saveHandlers = router_registry_1.IORouterRegistry.getSaveHandlers(destURL);\n                    util_1.assert(saveHandlers.length > 0, function () { return \"Copying failed because no save handler is found for destination \" +\n                        (\"URL \" + destURL + \".\"); });\n                    util_1.assert(saveHandlers.length < 2, function () { return \"Copying failed because more than one (\" + loadHandlers.length + \") \" +\n                        (\"save handlers for destination URL \" + destURL + \".\"); });\n                    saveHandler = saveHandlers[0];\n                    sourceScheme = parseURL(sourceURL).scheme;\n                    sourcePath = parseURL(sourceURL).path;\n                    sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n                    return [4 /*yield*/, loadHandler.load()];\n                case 1:\n                    modelArtifacts = _a.sent();\n                    if (!(deleteSource && sameMedium)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, ModelStoreManagerRegistry.getManager(sourceScheme)\n                            .removeModel(sourcePath)];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3: return [4 /*yield*/, saveHandler.save(modelArtifacts)];\n                case 4:\n                    saveResult = _a.sent();\n                    if (!(deleteSource && !sameMedium)) return [3 /*break*/, 6];\n                    return [4 /*yield*/, ModelStoreManagerRegistry.getManager(sourceScheme)\n                            .removeModel(sourcePath)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6: return [2 /*return*/, saveResult.modelArtifactsInfo];\n            }\n        });\n    });\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction listModels() {\n    return __awaiter(this, void 0, void 0, function () {\n        var schemes, out, _i, schemes_1, scheme, schemeOut, path, url;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    schemes = ModelStoreManagerRegistry.getSchemes();\n                    out = {};\n                    _i = 0, schemes_1 = schemes;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < schemes_1.length)) return [3 /*break*/, 4];\n                    scheme = schemes_1[_i];\n                    return [4 /*yield*/, ModelStoreManagerRegistry.getManager(scheme).listModels()];\n                case 2:\n                    schemeOut = _a.sent();\n                    for (path in schemeOut) {\n                        url = scheme + URL_SCHEME_SUFFIX + path;\n                        out[url] = schemeOut[path];\n                    }\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/, out];\n            }\n        });\n    });\n}\nexports.listModels = listModels;\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction removeModel(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var schemeAndPath, manager;\n        return __generator(this, function (_a) {\n            schemeAndPath = parseURL(url);\n            manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n            return [2 /*return*/, manager.removeModel(schemeAndPath.path)];\n        });\n    });\n}\nexports.removeModel = removeModel;\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction copyModel(sourceURL, destURL) {\n    return __awaiter(this, void 0, void 0, function () {\n        var deleteSource;\n        return __generator(this, function (_a) {\n            deleteSource = false;\n            return [2 /*return*/, cloneModelInternal(sourceURL, destURL, deleteSource)];\n        });\n    });\n}\nexports.copyModel = copyModel;\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction moveModel(sourceURL, destURL) {\n    return __awaiter(this, void 0, void 0, function () {\n        var deleteSource;\n        return __generator(this, function (_a) {\n            deleteSource = true;\n            return [2 /*return*/, cloneModelInternal(sourceURL, destURL, deleteSource)];\n        });\n    });\n}\nexports.moveModel = moveModel;\n//# sourceMappingURL=model_management.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\n/** @doclink Optimizer */\nvar AdadeltaOptimizer = /** @class */ (function (_super) {\n    __extends(AdadeltaOptimizer, _super);\n    function AdadeltaOptimizer(learningRate, rho, epsilon) {\n        if (epsilon === void 0) { epsilon = null; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.rho = rho;\n        _this.epsilon = epsilon;\n        _this.accumulatedGrads = [];\n        _this.accumulatedUpdates = [];\n        if (epsilon == null) {\n            _this.epsilon = engine_1.ENGINE.backend.epsilon();\n        }\n        return _this;\n    }\n    AdadeltaOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (item) { return item.name; }) :\n            Object.keys(variableGradients);\n        variableNames.forEach(function (name, i) {\n            var value = engine_1.ENGINE.registeredVariables[name];\n            var trainable = false;\n            if (_this.accumulatedGrads[i] == null) {\n                _this.accumulatedGrads[i] = {\n                    originalName: name + \"/accum_grad\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                };\n            }\n            if (_this.accumulatedUpdates[i] == null) {\n                _this.accumulatedUpdates[i] = {\n                    originalName: name + \"/accum_var\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                };\n            }\n            var gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            var accumulatedGrad = _this.accumulatedGrads[i].variable;\n            var accumulatedUpdate = _this.accumulatedUpdates[i].variable;\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = accumulatedGrad.mul(_this.rho).add(gradient.square().mul(1 - _this.rho));\n                var updates = accumulatedUpdate.add(_this.epsilon)\n                    .sqrt()\n                    .div(accumulatedGrad.add(_this.epsilon).sqrt())\n                    .mul(gradient);\n                var newAccumulatedUpdate = accumulatedUpdate.mul(_this.rho).add(updates.square().mul(1 - _this.rho));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                accumulatedUpdate.assign(newAccumulatedUpdate);\n                var newValue = updates.mul(-_this.learningRate).add(value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    };\n    AdadeltaOptimizer.prototype.dispose = function () {\n        if (this.accumulatedUpdates != null) {\n            globals_1.dispose(this.accumulatedGrads.map(function (v) { return v.variable; }));\n            globals_1.dispose(this.accumulatedUpdates.map(function (v) { return v.variable; }));\n        }\n    };\n    AdadeltaOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        variables = this.accumulatedGrads.concat(this.accumulatedUpdates);\n                        return [4 /*yield*/, this.saveIterations()];\n                    case 1: return [2 /*return*/, [_a.sent()].concat(variables.map(function (v) { return ({ name: v.originalName, tensor: v.variable }); }))];\n                }\n            });\n        });\n    };\n    AdadeltaOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variableCount, trainable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        variableCount = weightValues.length / 2;\n                        trainable = false;\n                        this.accumulatedGrads =\n                            weightValues.slice(0, variableCount).map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        this.accumulatedUpdates =\n                            weightValues.slice(variableCount, variableCount * 2)\n                                .map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AdadeltaOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'rho': this.rho,\n            'epsilon': this.epsilon\n        };\n    };\n    /** @nocollapse */\n    AdadeltaOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['rho'], config['epsilon']);\n    };\n    /** @nocollapse */\n    AdadeltaOptimizer.className = 'Adadelta'; // Name matters for Python compatibility.\n    return AdadeltaOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdadeltaOptimizer = AdadeltaOptimizer;\nserialization_1.registerClass(AdadeltaOptimizer);\n//# sourceMappingURL=adadelta_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\n/** @doclink Optimizer */\nvar AdagradOptimizer = /** @class */ (function (_super) {\n    __extends(AdagradOptimizer, _super);\n    function AdagradOptimizer(learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.initialAccumulatorValue = initialAccumulatorValue;\n        _this.accumulatedGrads = [];\n        return _this;\n    }\n    AdagradOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (item) { return item.name; }) :\n            Object.keys(variableGradients);\n        variableNames.forEach(function (name, i) {\n            var value = engine_1.ENGINE.registeredVariables[name];\n            if (_this.accumulatedGrads[i] == null) {\n                var trainable_1 = false;\n                _this.accumulatedGrads[i] = {\n                    originalName: name + \"/accumulator\",\n                    variable: globals_1.tidy(function () { return ops_1.fill(value.shape, _this.initialAccumulatorValue)\n                        .variable(trainable_1); })\n                };\n            }\n            var gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            var accumulatedGrad = _this.accumulatedGrads[i].variable;\n            globals_1.tidy(function () {\n                var newAccumulatedGrad = accumulatedGrad.add(gradient.square());\n                accumulatedGrad.assign(newAccumulatedGrad);\n                var newValue = gradient\n                    .div(newAccumulatedGrad.add(engine_1.ENGINE.backend.epsilon()).sqrt())\n                    .mul(-_this.learningRate)\n                    .add(value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    };\n    AdagradOptimizer.prototype.dispose = function () {\n        if (this.accumulatedGrads != null) {\n            globals_1.dispose(this.accumulatedGrads.map(function (v) { return v.variable; }));\n        }\n    };\n    AdagradOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.saveIterations()];\n                    case 1: \n                    // Order matters for Python compatibility.\n                    return [2 /*return*/, [_a.sent()].concat(this.accumulatedGrads.map(function (v) { return ({ name: v.originalName, tensor: v.variable }); }))];\n                }\n            });\n        });\n    };\n    AdagradOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trainable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        trainable = false;\n                        this.accumulatedGrads = weightValues.map(function (v) { return ({ originalName: v.name, variable: v.tensor.variable(trainable) }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AdagradOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'initialAccumulatorValue': this.initialAccumulatorValue,\n        };\n    };\n    /** @nocollapse */\n    AdagradOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['initialAccumulatorValue']);\n    };\n    /** @nocollapse */\n    AdagradOptimizer.className = 'Adagrad'; // Note: Name matters for Python compatibility.\n    return AdagradOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdagradOptimizer = AdagradOptimizer;\nserialization_1.registerClass(AdagradOptimizer);\n//# sourceMappingURL=adagrad_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamOptimizer = /** @class */ (function (_super) {\n    __extends(AdamOptimizer, _super);\n    function AdamOptimizer(learningRate, beta1, beta2, epsilon) {\n        if (epsilon === void 0) { epsilon = null; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.epsilon = epsilon;\n        _this.accumulatedFirstMoment = [];\n        _this.accumulatedSecondMoment = [];\n        globals_1.tidy(function () {\n            // accB* will be updated by batch.\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n            _this.accBeta2 = ops_1.scalar(beta2).variable();\n        });\n        if (epsilon == null) {\n            _this.epsilon = engine_1.ENGINE.backend.epsilon();\n        }\n        return _this;\n    }\n    AdamOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (v) { return v.name; }) :\n            Object.keys(variableGradients);\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = ops_1.sub(1, _this.accBeta1);\n            var oneMinusAccBeta2 = ops_1.sub(1, _this.accBeta2);\n            varNames.forEach(function (name, i) {\n                var value = engine_1.ENGINE.registeredVariables[name];\n                var trainable = false;\n                if (_this.accumulatedFirstMoment[i] == null) {\n                    _this.accumulatedFirstMoment[i] = {\n                        originalName: name + \"/m\",\n                        variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                    };\n                }\n                if (_this.accumulatedSecondMoment[i] == null) {\n                    _this.accumulatedSecondMoment[i] = {\n                        originalName: name + \"/v\",\n                        variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                    };\n                }\n                var gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                var firstMoment = _this.accumulatedFirstMoment[i].variable;\n                var secondMoment = _this.accumulatedSecondMoment[i].variable;\n                var newFirstMoment = firstMoment.mul(_this.beta1).add(gradient.mul(1 - _this.beta1));\n                var newSecondMoment = secondMoment.mul(_this.beta2)\n                    .add(gradient.square().mul(1 - _this.beta2));\n                var biasCorrectedFirstMoment = newFirstMoment.div(oneMinusAccBeta1);\n                var biasCorrectedSecondMoment = newSecondMoment.div(oneMinusAccBeta2);\n                firstMoment.assign(newFirstMoment);\n                secondMoment.assign(newSecondMoment);\n                var newValue = biasCorrectedFirstMoment\n                    .div(biasCorrectedSecondMoment.sqrt().add(_this.epsilon))\n                    .mul(-_this.learningRate)\n                    .add(value);\n                value.assign(newValue);\n            });\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n            _this.accBeta2.assign(_this.accBeta2.mul(_this.beta2));\n        });\n        this.incrementIterations();\n    };\n    AdamOptimizer.prototype.dispose = function () {\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            globals_1.dispose(this.accumulatedFirstMoment.map(function (v) { return v.variable; }));\n        }\n        if (this.accumulatedSecondMoment != null) {\n            globals_1.dispose(this.accumulatedSecondMoment.map(function (v) { return v.variable; }));\n        }\n    };\n    AdamOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        variables = this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment);\n                        return [4 /*yield*/, this.saveIterations()];\n                    case 1: return [2 /*return*/, [_a.sent()].concat(variables.map(function (v) { return ({ name: v.originalName, tensor: v.variable }); }))];\n                }\n            });\n        });\n    };\n    AdamOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variableCount, trainable;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        globals_1.tidy(function () {\n                            _this.accBeta1.assign(ops_1.pow(_this.beta1, _this.iterations_ + 1));\n                            _this.accBeta2.assign(ops_1.pow(_this.beta2, _this.iterations_ + 1));\n                        });\n                        variableCount = weightValues.length / 2;\n                        trainable = false;\n                        this.accumulatedFirstMoment =\n                            weightValues.slice(0, variableCount).map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        this.accumulatedSecondMoment =\n                            weightValues.slice(variableCount, variableCount * 2)\n                                .map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AdamOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n        };\n    };\n    /** @nocollapse */\n    AdamOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon']);\n    };\n    /** @nocollapse */\n    AdamOptimizer.className = 'Adam'; // Note: Name matters for Python compatibility.\n    return AdamOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamOptimizer = AdamOptimizer;\nserialization_1.registerClass(AdamOptimizer);\n//# sourceMappingURL=adam_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\nvar AdamaxOptimizer = /** @class */ (function (_super) {\n    __extends(AdamaxOptimizer, _super);\n    function AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay) {\n        if (epsilon === void 0) { epsilon = null; }\n        if (decay === void 0) { decay = 0.0; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.beta1 = beta1;\n        _this.beta2 = beta2;\n        _this.epsilon = epsilon;\n        _this.decay = decay;\n        _this.accumulatedFirstMoment = [];\n        _this.accumulatedWeightedInfNorm = [];\n        globals_1.tidy(function () {\n            _this.iteration = ops_1.scalar(0).variable();\n            _this.accBeta1 = ops_1.scalar(beta1).variable();\n        });\n        if (epsilon == null) {\n            _this.epsilon = engine_1.ENGINE.backend.epsilon();\n        }\n        return _this;\n    }\n    AdamaxOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (item) { return item.name; }) :\n            Object.keys(variableGradients);\n        globals_1.tidy(function () {\n            var oneMinusAccBeta1 = ops_1.sub(1, _this.accBeta1);\n            var lr = ops_1.div(-_this.learningRate, _this.iteration.mul(_this.decay).add(1));\n            variableNames.forEach(function (name, i) {\n                var value = engine_1.ENGINE.registeredVariables[name];\n                var trainable = false;\n                if (_this.accumulatedFirstMoment[i] == null) {\n                    _this.accumulatedFirstMoment[i] = {\n                        originalName: name + \"/m\",\n                        variable: ops_1.zerosLike(value).variable(trainable)\n                    };\n                }\n                if (_this.accumulatedWeightedInfNorm[i] == null) {\n                    _this.accumulatedWeightedInfNorm[i] = {\n                        originalName: name + \"/v\",\n                        variable: ops_1.zerosLike(value).variable(trainable)\n                    };\n                }\n                var gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                var firstMoment = _this.accumulatedFirstMoment[i].variable;\n                var weightedInfNorm = _this.accumulatedWeightedInfNorm[i].variable;\n                var newFirstMoment = firstMoment.mul(_this.beta1).add(gradient.mul(1 - _this.beta1));\n                var ut0 = weightedInfNorm.mul(_this.beta2);\n                var ut1 = gradient.abs();\n                var newWeightedInfNorm = ut0.maximum(ut1);\n                firstMoment.assign(newFirstMoment);\n                weightedInfNorm.assign(newWeightedInfNorm);\n                var newValue = lr.div(oneMinusAccBeta1)\n                    .mul(newFirstMoment.div(newWeightedInfNorm.add(_this.epsilon)))\n                    .add(value);\n                value.assign(newValue);\n            });\n            _this.iteration.assign(_this.iteration.add(1));\n            _this.accBeta1.assign(_this.accBeta1.mul(_this.beta1));\n        });\n        this.incrementIterations();\n    };\n    AdamaxOptimizer.prototype.dispose = function () {\n        this.accBeta1.dispose();\n        this.iteration.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            globals_1.dispose(this.accumulatedFirstMoment.map(function (v) { return v.variable; }));\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            globals_1.dispose(this.accumulatedWeightedInfNorm.map(function (v) { return v.variable; }));\n        }\n    };\n    AdamaxOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error('getWeights() is not implemented for Adamax yet.');\n            });\n        });\n    };\n    AdamaxOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error('setWeights() is not implemented for Adamax yet.');\n            });\n        });\n    };\n    AdamaxOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n            'decay': this.decay\n        };\n    };\n    /** @nocollapse */\n    AdamaxOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon'], config['decay']);\n    };\n    /** @nocollapse */\n    AdamaxOptimizer.className = 'Adamax'; // Note: Name matters for Python compatbility.\n    return AdamaxOptimizer;\n}(optimizer_1.Optimizer));\nexports.AdamaxOptimizer = AdamaxOptimizer;\nserialization_1.registerClass(AdamaxOptimizer);\n//# sourceMappingURL=adamax_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar sgd_optimizer_1 = require(\"./sgd_optimizer\");\n/** @doclink Optimizer */\nvar MomentumOptimizer = /** @class */ (function (_super) {\n    __extends(MomentumOptimizer, _super);\n    function MomentumOptimizer(learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        var _this = _super.call(this, learningRate) || this;\n        _this.learningRate = learningRate;\n        _this.momentum = momentum;\n        _this.useNesterov = useNesterov;\n        _this.accumulations = [];\n        _this.m = ops_1.scalar(_this.momentum);\n        return _this;\n    }\n    MomentumOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (item) { return item.name; }) :\n            Object.keys(variableGradients);\n        variableNames.forEach(function (name, i) {\n            var value = engine_1.ENGINE.registeredVariables[name];\n            if (_this.accumulations[i] == null) {\n                var trainable_1 = false;\n                _this.accumulations[i] = {\n                    originalName: name + \"/momentum\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable_1); })\n                };\n            }\n            var accumulation = _this.accumulations[i].variable;\n            var gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            globals_1.tidy(function () {\n                var newValue;\n                var newAccumulation = _this.m.mul(accumulation).add(gradient);\n                if (_this.useNesterov) {\n                    newValue =\n                        _this.c.mul(gradient.add(newAccumulation.mul(_this.m))).add(value);\n                }\n                else {\n                    newValue = _this.c.mul(newAccumulation).add(value);\n                }\n                accumulation.assign(newAccumulation);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    };\n    MomentumOptimizer.prototype.dispose = function () {\n        this.m.dispose();\n        if (this.accumulations != null) {\n            globals_1.dispose(this.accumulations.map(function (v) { return v.variable; }));\n        }\n    };\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n    MomentumOptimizer.prototype.setMomentum = function (momentum) {\n        this.momentum = momentum;\n    };\n    MomentumOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.saveIterations()];\n                    case 1: \n                    // Order matters for Python compatibility.\n                    return [2 /*return*/, [_a.sent()].concat(this.accumulations.map(function (v) { return ({ name: v.originalName, tensor: v.variable }); }))];\n                }\n            });\n        });\n    };\n    MomentumOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trainable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        trainable = false;\n                        this.accumulations = weightValues.map(function (v) { return ({ originalName: v.name, variable: v.tensor.variable(trainable) }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MomentumOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'momentum': this.momentum,\n            'useNesterov': this.useNesterov\n        };\n    };\n    /** @nocollapse */\n    MomentumOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    };\n    /** @nocollapse */\n    MomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\n    return MomentumOptimizer;\n}(sgd_optimizer_1.SGDOptimizer));\nexports.MomentumOptimizer = MomentumOptimizer;\nserialization_1.registerClass(MomentumOptimizer);\n//# sourceMappingURL=momentum_optimizer.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar serialization_1 = require(\"../serialization\");\nvar optimizer_1 = require(\"./optimizer\");\n/** @doclink Optimizer */\nvar RMSPropOptimizer = /** @class */ (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = null; }\n        if (centered === void 0) { centered = false; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.decay = decay;\n        _this.momentum = momentum;\n        _this.epsilon = epsilon;\n        _this.accumulatedMeanSquares = [];\n        _this.accumulatedMoments = [];\n        _this.accumulatedMeanGrads = [];\n        _this.centered = centered;\n        if (epsilon == null) {\n            _this.epsilon = engine_1.ENGINE.backend.epsilon();\n        }\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(function (item) { return item.name; }) :\n            Object.keys(variableGradients);\n        variableNames.forEach(function (name, i) {\n            var value = engine_1.ENGINE.registeredVariables[name];\n            var trainable = false;\n            if (_this.accumulatedMeanSquares[i] == null) {\n                _this.accumulatedMeanSquares[i] = {\n                    originalName: name + \"/rms\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                };\n            }\n            if (_this.accumulatedMoments[i] == null) {\n                _this.accumulatedMoments[i] = {\n                    originalName: name + \"/momentum\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                };\n            }\n            if (_this.accumulatedMeanGrads[i] == null && _this.centered) {\n                _this.accumulatedMeanGrads[i] = {\n                    originalName: name + \"/mg\",\n                    variable: globals_1.tidy(function () { return ops_1.zerosLike(value).variable(trainable); })\n                };\n            }\n            var gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            var accumulatedMeanSquare = _this.accumulatedMeanSquares[i].variable;\n            var accumulatedMoments = _this.accumulatedMoments[i].variable;\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = accumulatedMeanSquare.mul(_this.decay)\n                    .add(gradient.square().mul(1 - _this.decay));\n                if (_this.centered) {\n                    var accumulatedMeanGrad = _this.accumulatedMeanGrads[i].variable;\n                    // Centered gradient\n                    var newAccumulatedMeanGrad = accumulatedMeanGrad.mul(_this.decay)\n                        .add(gradient.mul(1 - _this.decay));\n                    var newAccumulatedMoments = accumulatedMoments.mul(_this.momentum)\n                        .add(gradient.mul(_this.learningRate)\n                        .div(newAccumulatedMeanSquare\n                        .sub(newAccumulatedMeanGrad.square().add(_this.epsilon))\n                        .sqrt()));\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    // Plain gradient\n                    var newAccumulatedMeanSquare_1 = accumulatedMeanSquare.mul(_this.decay)\n                        .add(gradient.square().mul(1 - _this.decay));\n                    var newAccumulatedMoments = accumulatedMoments.mul(_this.momentum)\n                        .add(gradient.mul(_this.learningRate)\n                        .div(newAccumulatedMeanSquare_1.add(_this.epsilon)\n                        .sqrt()));\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare_1);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    var newValue = value.sub(newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        });\n        this.incrementIterations();\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        if (this.accumulatedMeanSquares != null) {\n            globals_1.dispose(this.accumulatedMeanSquares.map(function (v) { return v.variable; }));\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            globals_1.dispose(this.accumulatedMeanGrads.map(function (v) { return v.variable; }));\n        }\n        if (this.accumulatedMoments != null) {\n            globals_1.dispose(this.accumulatedMoments.map(function (v) { return v.variable; }));\n        }\n    };\n    RMSPropOptimizer.prototype.getWeights = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        variables = this.accumulatedMeanSquares.concat(this.accumulatedMoments);\n                        if (this.centered) {\n                            variables.push.apply(variables, this.accumulatedMeanGrads);\n                        }\n                        return [4 /*yield*/, this.saveIterations()];\n                    case 1: return [2 /*return*/, [_a.sent()].concat(variables.map(function (v) { return ({ name: v.originalName, tensor: v.variable }); }))];\n                }\n            });\n        });\n    };\n    RMSPropOptimizer.prototype.setWeights = function (weightValues) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variableCount, trainable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.extractIterations(weightValues)];\n                    case 1:\n                        weightValues = _a.sent();\n                        variableCount = this.centered ? weightValues.length / 3 : weightValues.length / 2;\n                        trainable = false;\n                        this.accumulatedMeanSquares =\n                            weightValues.slice(0, variableCount).map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        this.accumulatedMoments =\n                            weightValues.slice(variableCount, variableCount * 2)\n                                .map(function (v) { return ({\n                                originalName: v.name,\n                                variable: v.tensor.variable(trainable)\n                            }); });\n                        if (this.centered) {\n                            this.accumulatedMeanGrads =\n                                weightValues.slice(variableCount * 2, variableCount * 3)\n                                    .map(function (v) { return ({\n                                    originalName: v.name,\n                                    variable: v.tensor.variable(trainable)\n                                }); });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RMSPropOptimizer.prototype.getConfig = function () {\n        return {\n            'learningRate': this.learningRate,\n            'decay': this.decay,\n            'momentum': this.momentum,\n            'epsilon': this.epsilon,\n            'centered': this.centered\n        };\n    };\n    /** @nocollapse */\n    RMSPropOptimizer.fromConfig = function (cls, config) {\n        return new cls(config['learningRate'], config['decay'], config['momentum'], config['epsilon'], config['centered']);\n    };\n    /** @nocollapse */\n    RMSPropOptimizer.className = 'RMSProp'; // Note: Name matters for Python compatibility.\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\nserialization_1.registerClass(RMSPropOptimizer);\n//# sourceMappingURL=rmsprop_optimizer.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/* tslint:disable */\n\n/** Properties of an Any. */\nexport declare interface IAny {\n  /** Any typeUrl */\n  typeUrl?: (string|null);\n\n  /** Any value */\n  value?: (Uint8Array|null);\n}\n\n/** DataType enum. */\nexport enum DataType {\n  'DT_INVALID' = 0,\n  'DT_FLOAT' = 1,\n  'DT_DOUBLE' = 2,\n  'DT_INT32' = 3,\n  'DT_UINT8' = 4,\n  'DT_INT16' = 5,\n  'DT_INT8' = 6,\n  'DT_STRING' = 7,\n  'DT_COMPLEX64' = 8,\n  'DT_INT64' = 9,\n  'DT_BOOL' = 10,\n  'DT_QINT8' = 11,\n  'DT_QUINT8' = 12,\n  'DT_QINT32' = 13,\n  'DT_BFLOAT16' = 14,\n  'DT_FLOAT_REF' = 101,\n  'DT_DOUBLE_REF' = 102,\n  'DT_INT32_REF' = 103,\n  'DT_UINT8_REF' = 104,\n  'DT_INT16_REF' = 105,\n  'DT_INT8_REF' = 106,\n  'DT_STRING_REF' = 107,\n  'DT_COMPLEX64_REF' = 108,\n  'DT_INT64_REF' = 109,\n  'DT_BOOL_REF' = 110,\n  'DT_QINT8_REF' = 111,\n  'DT_QUINT8_REF' = 112,\n  'DT_QINT32_REF' = 113,\n  'DT_BFLOAT16_REF' = 114\n}\n\n/** Properties of a TensorShape. */\nexport declare interface ITensorShape {\n  /** TensorShape dim */\n  dim?: (TensorShape.IDim[]|null);\n\n  /** TensorShape unknownRank */\n  unknownRank?: (boolean|null);\n}\n\nexport namespace TensorShape {\n  /** Properties of a Dim. */\n  export declare interface IDim {\n    /** Dim size */\n    size?: (number|string|null);\n\n    /** Dim name */\n    name?: (string|null);\n  }\n}\n\n/** Properties of a Tensor. */\nexport declare interface ITensor {\n  /** Tensor dtype */\n  dtype?: (DataType|null);\n\n  /** Tensor tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Tensor versionNumber */\n  versionNumber?: (number|null);\n\n  /** Tensor tensorContent */\n  tensorContent?: (Uint8Array|null);\n\n  /** Tensor floatVal */\n  floatVal?: (number[]|null);\n\n  /** Tensor doubleVal */\n  doubleVal?: (number[]|null);\n\n  /** Tensor intVal */\n  intVal?: (number[]|null);\n\n  /** Tensor stringVal */\n  stringVal?: (Uint8Array[]|null);\n\n  /** Tensor scomplexVal */\n  scomplexVal?: (number[]|null);\n\n  /** Tensor int64Val */\n  int64Val?: ((number | string)[]|null);\n\n  /** Tensor boolVal */\n  boolVal?: (boolean[]|null);\n\n  /** Tensor uint32Val */\n  uint32Val?: (number[]|null);\n\n  /** Tensor uint64Val */\n  uint64Val?: ((number | string)[]|null);\n}\n\n/** Properties of an AttrValue. */\nexport declare interface IAttrValue {\n  /** AttrValue list */\n  list?: (AttrValue.IListValue|null);\n\n  /** AttrValue s */\n  s?: (string|null);\n\n  /** AttrValue i */\n  i?: (number|string|null);\n\n  /** AttrValue f */\n  f?: (number|null);\n\n  /** AttrValue b */\n  b?: (boolean|null);\n\n  /** AttrValue type */\n  type?: (DataType|null);\n\n  /** AttrValue shape */\n  shape?: (ITensorShape|null);\n\n  /** AttrValue tensor */\n  tensor?: (ITensor|null);\n\n  /** AttrValue placeholder */\n  placeholder?: (string|null);\n\n  /** AttrValue func */\n  func?: (INameAttrList|null);\n}\n\nexport namespace AttrValue {\n  /** Properties of a ListValue. */\n  export declare interface IListValue {\n    /** ListValue s */\n    s?: (string[]|null);\n\n    /** ListValue i */\n    i?: ((number | string)[]|null);\n\n    /** ListValue f */\n    f?: (number[]|null);\n\n    /** ListValue b */\n    b?: (boolean[]|null);\n\n    /** ListValue type */\n    type?: (DataType[]|null);\n\n    /** ListValue shape */\n    shape?: (ITensorShape[]|null);\n\n    /** ListValue tensor */\n    tensor?: (ITensor[]|null);\n\n    /** ListValue func */\n    func?: (INameAttrList[]|null);\n  }\n}\n\n/** Properties of a NameAttrList. */\nexport declare interface INameAttrList {\n  /** NameAttrList name */\n  name?: (string|null);\n\n  /** NameAttrList attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a NodeDef. */\nexport declare interface INodeDef {\n  /** NodeDef name */\n  name?: (string|null);\n\n  /** NodeDef op */\n  op?: (string|null);\n\n  /** NodeDef input */\n  input?: (string[]|null);\n\n  /** NodeDef device */\n  device?: (string|null);\n\n  /** NodeDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a VersionDef. */\nexport declare interface IVersionDef {\n  /** VersionDef producer */\n  producer?: (number|null);\n\n  /** VersionDef minConsumer */\n  minConsumer?: (number|null);\n\n  /** VersionDef badConsumers */\n  badConsumers?: (number[]|null);\n}\n\n/** Properties of a GraphDef. */\nexport declare interface IGraphDef {\n  /** GraphDef node */\n  node?: (INodeDef[]|null);\n\n  /** GraphDef versions */\n  versions?: (IVersionDef|null);\n\n  /** GraphDef library */\n  library?: (IFunctionDefLibrary|null);\n}\n\n/** Properties of a CollectionDef. */\nexport declare interface ICollectionDef {\n  /** CollectionDef nodeList */\n  nodeList?: (CollectionDef.INodeList|null);\n\n  /** CollectionDef bytesList */\n  bytesList?: (CollectionDef.IBytesList|null);\n\n  /** CollectionDef int64List */\n  int64List?: (CollectionDef.IInt64List|null);\n\n  /** CollectionDef floatList */\n  floatList?: (CollectionDef.IFloatList|null);\n\n  /** CollectionDef anyList */\n  anyList?: (CollectionDef.IAnyList|null);\n}\n\nexport namespace CollectionDef {\n  /** Properties of a NodeList. */\n  export declare interface INodeList {\n    /** NodeList value */\n    value?: (string[]|null);\n  }\n\n  /** Properties of a BytesList. */\n  export declare interface IBytesList {\n    /** BytesList value */\n    value?: (Uint8Array[]|null);\n  }\n\n  /** Properties of an Int64List. */\n  export declare interface IInt64List {\n    /** Int64List value */\n    value?: ((number | string)[]|null);\n  }\n\n  /** Properties of a FloatList. */\n  export declare interface IFloatList {\n    /** FloatList value */\n    value?: (number[]|null);\n  }\n\n  /** Properties of an AnyList. */\n  export declare interface IAnyList {\n    /** AnyList value */\n    value?: (IAny[]|null);\n  }\n}\n\n/** Properties of a SaverDef. */\nexport declare interface ISaverDef {\n  /** SaverDef filenameTensorName */\n  filenameTensorName?: (string|null);\n\n  /** SaverDef saveTensorName */\n  saveTensorName?: (string|null);\n\n  /** SaverDef restoreOpName */\n  restoreOpName?: (string|null);\n\n  /** SaverDef maxToKeep */\n  maxToKeep?: (number|null);\n\n  /** SaverDef sharded */\n  sharded?: (boolean|null);\n\n  /** SaverDef keepCheckpointEveryNHours */\n  keepCheckpointEveryNHours?: (number|null);\n\n  /** SaverDef version */\n  version?: (SaverDef.CheckpointFormatVersion|null);\n}\n\nexport namespace SaverDef {\n  /** CheckpointFormatVersion enum. */\n  export enum CheckpointFormatVersion {'LEGACY' = 0, 'V1' = 1, 'V2' = 2}\n}\n\n/** Properties of a TensorInfo. */\nexport declare interface ITensorInfo {\n  /** TensorInfo name */\n  name?: (string|null);\n\n  /** TensorInfo cooSparse */\n  cooSparse?: (TensorInfo.ICooSparse|null);\n\n  /** TensorInfo dtype */\n  dtype?: (DataType|null);\n\n  /** TensorInfo tensorShape */\n  tensorShape?: (ITensorShape|null);\n}\n\nexport namespace TensorInfo {\n  /** Properties of a CooSparse. */\n  export declare interface ICooSparse {\n    /** CooSparse valuesTensorName */\n    valuesTensorName?: (string|null);\n\n    /** CooSparse indicesTensorName */\n    indicesTensorName?: (string|null);\n\n    /** CooSparse denseShapeTensorName */\n    denseShapeTensorName?: (string|null);\n  }\n}\n\n/** Properties of a SignatureDef. */\nexport declare interface ISignatureDef {\n  /** SignatureDef inputs */\n  inputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef outputs */\n  outputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef methodName */\n  methodName?: (string|null);\n}\n\n/** Properties of an AssetFileDef. */\nexport declare interface IAssetFileDef {\n  /** AssetFileDef tensorInfo */\n  tensorInfo?: (ITensorInfo|null);\n\n  /** AssetFileDef filename */\n  filename?: (string|null);\n}\n\n/** Properties of an OpDef. */\nexport declare interface IOpDef {\n  /** OpDef name */\n  name?: (string|null);\n\n  /** OpDef inputArg */\n  inputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef outputArg */\n  outputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef attr */\n  attr?: (OpDef.IAttrDef[]|null);\n\n  /** OpDef deprecation */\n  deprecation?: (OpDef.IOpDeprecation|null);\n\n  /** OpDef summary */\n  summary?: (string|null);\n\n  /** OpDef description */\n  description?: (string|null);\n\n  /** OpDef isCommutative */\n  isCommutative?: (boolean|null);\n\n  /** OpDef isAggregate */\n  isAggregate?: (boolean|null);\n\n  /** OpDef isStateful */\n  isStateful?: (boolean|null);\n\n  /** OpDef allowsUninitializedInput */\n  allowsUninitializedInput?: (boolean|null);\n}\n\nexport namespace OpDef {\n  /** Properties of an ArgDef. */\n  export declare interface IArgDef {\n    /** ArgDef name */\n    name?: (string|null);\n\n    /** ArgDef description */\n    description?: (string|null);\n\n    /** ArgDef type */\n    type?: (DataType|null);\n\n    /** ArgDef typeAttr */\n    typeAttr?: (string|null);\n\n    /** ArgDef numberAttr */\n    numberAttr?: (string|null);\n\n    /** ArgDef typeListAttr */\n    typeListAttr?: (string|null);\n\n    /** ArgDef isRef */\n    isRef?: (boolean|null);\n  }\n\n  /** Properties of an AttrDef. */\n  export declare interface IAttrDef {\n    /** AttrDef name */\n    name?: (string|null);\n\n    /** AttrDef type */\n    type?: (string|null);\n\n    /** AttrDef defaultValue */\n    defaultValue?: (IAttrValue|null);\n\n    /** AttrDef description */\n    description?: (string|null);\n\n    /** AttrDef hasMinimum */\n    hasMinimum?: (boolean|null);\n\n    /** AttrDef minimum */\n    minimum?: (number|string|null);\n\n    /** AttrDef allowedValues */\n    allowedValues?: (IAttrValue|null);\n  }\n\n  /** Properties of an OpDeprecation. */\n  export declare interface IOpDeprecation {\n    /** OpDeprecation version */\n    version?: (number|null);\n\n    /** OpDeprecation explanation */\n    explanation?: (string|null);\n  }\n}\n\n/** Properties of an OpList. */\nexport declare interface IOpList {\n  /** OpList op */\n  op?: (IOpDef[]|null);\n}\n\n/** Properties of a MetaGraphDef. */\nexport declare interface IMetaGraphDef {\n  /** MetaGraphDef metaInfoDef */\n  metaInfoDef?: (MetaGraphDef.IMetaInfoDef|null);\n\n  /** MetaGraphDef graphDef */\n  graphDef?: (IGraphDef|null);\n\n  /** MetaGraphDef saverDef */\n  saverDef?: (ISaverDef|null);\n\n  /** MetaGraphDef collectionDef */\n  collectionDef?: ({[k: string]: ICollectionDef}|null);\n\n  /** MetaGraphDef signatureDef */\n  signatureDef?: ({[k: string]: ISignatureDef}|null);\n\n  /** MetaGraphDef assetFileDef */\n  assetFileDef?: (IAssetFileDef[]|null);\n}\n\nexport namespace MetaGraphDef {\n  /** Properties of a MetaInfoDef. */\n  export declare interface IMetaInfoDef {\n    /** MetaInfoDef metaGraphVersion */\n    metaGraphVersion?: (string|null);\n\n    /** MetaInfoDef strippedOpList */\n    strippedOpList?: (IOpList|null);\n\n    /** MetaInfoDef anyInfo */\n    anyInfo?: (IAny|null);\n\n    /** MetaInfoDef tags */\n    tags?: (string[]|null);\n\n    /** MetaInfoDef tensorflowVersion */\n    tensorflowVersion?: (string|null);\n\n    /** MetaInfoDef tensorflowGitVersion */\n    tensorflowGitVersion?: (string|null);\n  }\n}\n\n/** Properties of a SavedModel. */\nexport declare interface ISavedModel {\n  /** SavedModel savedModelSchemaVersion */\n  savedModelSchemaVersion?: (number|string|null);\n\n  /** SavedModel metaGraphs */\n  metaGraphs?: (IMetaGraphDef[]|null);\n}\n\n/** Properties of a FunctionDefLibrary. */\nexport declare interface IFunctionDefLibrary {\n  /** FunctionDefLibrary function */\n  'function'?: (IFunctionDef[]|null);\n\n  /** FunctionDefLibrary gradient */\n  gradient?: (IGradientDef[]|null);\n}\n\n/** Properties of a FunctionDef. */\nexport declare interface IFunctionDef {\n  /** FunctionDef signature */\n  signature?: (IOpDef|null);\n\n  /** FunctionDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n\n  /** FunctionDef nodeDef */\n  nodeDef?: (INodeDef[]|null);\n\n  /** FunctionDef ret */\n  ret?: ({[k: string]: string}|null);\n}\n\n/** Properties of a GradientDef. */\nexport declare interface IGradientDef {\n  /** GradientDef functionName */\n  functionName?: (string|null);\n\n  /** GradientDef gradientFunc */\n  gradientFunc?: (string|null);\n}\n","\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpExecutor, OpMapper} from '../types';\n\nconst CUSTOM_OPS: {[key: string]: OpMapper} = {};\n\n/**\n * Register an Op for graph model executor. This allow you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object is based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\nexport function registerOp(name: string, opFunc: OpExecutor) {\n  const opMapper: OpMapper = {\n    tfOpName: name,\n    category: 'custom',\n    inputs: [],\n    attrs: [],\n    customExecutor: opFunc\n  };\n\n  CUSTOM_OPS[name] = opMapper;\n}\n\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\n\nexport function getRegisteredOp(name: string): OpMapper {\n  return CUSTOM_OPS[name];\n}\n\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\nexport function deregisterOp(name: string) {\n  delete CUSTOM_OPS[name];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  const inputParam = node.inputParams[paramName];\n  if (inputParam && inputParam.inputIndexStart !== undefined) {\n    const start = inputParam.inputIndexStart;\n    const end = inputParam.inputIndexEnd === 0 ?\n        undefined :\n        (inputParam.inputIndexEnd === undefined ? start + 1 :\n                                                  inputParam.inputIndexEnd);\n    if (inputParam.type === 'tensor') {\n      return getTensor(\n          node.inputNames[inputParam.inputIndexStart], tensorMap, context);\n    }\n    if (inputParam.type === 'tensors') {\n      const inputs = node.inputNames.slice(start, end);\n\n      return inputs.map(name => getTensor(name, tensorMap, context));\n    }\n    const data = Array.prototype.slice.call(\n        getTensor(node.inputNames.slice(start)[0], tensorMap, context)\n            .dataSync());\n    return inputParam.type === 'number' ? data[0] : data;\n  }\n  const attrParam = node.attrParams[paramName];\n  return attrParam && attrParam.value;\n}\n\n/**\n * Retrieve the tensor based on input name by extracting the node name and\n * output index information.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor {\n  const [nodeName, index] = parseNodeName(name);\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[] {\n  return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n\n/**\n * Returns the node name and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number] {\n  const [nodeName, index] = parseNodeName(inputName);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(name: string): [string, number] {\n  const index = name.lastIndexOf(':');\n  if (index === -1) {\n    return [name, 0];\n  }\n\n  const nodeName = name.substring(0, index);\n  return [nodeName, Number(name.substring(index + 1))];\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Add',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AddV2',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'category': 'arithmetic',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'DivNoNan',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Abs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan2',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'clip_value_min', 'name': 'clipValueMin', 'type': 'number'},\n      {'tfName': 'clip_value_max', 'name': 'clipValueMax', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Complex',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'real', 'type': 'tensor'},\n      {'start': 1, 'name': 'imag', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ComplexAbs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Imag',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Real',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prelu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'alpha', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'clipValueMin',\n        'name': 'clipValueMin',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'clipValueMax',\n        'name': 'clipValueMax',\n        'type': 'number',\n        'defaultValue': 6\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axes', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LeakyRelu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs':\n        [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'frame_name', 'name': 'frameName', 'type': 'string'},\n      {'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'size', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool'},\n      {'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool'},\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{\n      'tfName': 'dtype',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}, {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'tensorArrayId', 'type': 'number'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'AvgPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AvgPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'stride', 'name': 'stride', 'type': 'number'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'dilation',\n        'name': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'},\n      {'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': '_FusedConv2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'},\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'use_cudnn_on_gpu',\n        'name': 'useCudnnOnGpu',\n        'type': 'bool',\n        'defaultValue': true\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [1, 1, 1, 1]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 2, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 0, 'name': 'outputShape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'FusedDepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [1, 1, 1, 1]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv3D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ],\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Fill',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n      {'start': 1, 'name': 'value', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'num', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'depth', 'type': 'number'},\n      {'start': 2, 'name': 'onValue', 'type': 'number', 'defaultValue': 1},\n      {'start': 3, 'name': 'offValue', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'minval',\n        'name': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'maxval',\n        'name': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'step', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [{'tfName': 'Tidx', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TruncatedNormal',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'means',\n        'name': 'mean',\n        'type': 'number',\n        'defaultValue': 0.0\n      },\n      {\n        'tfName': 'stddev',\n        'name': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number'}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'Multinomial',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'logits', 'type': 'tensor'},\n      {'start': 1, 'name': 'numSamples', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number'},\n      {'tfName': 'seed2', 'name': 'seed2', 'type': 'number'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'output_dtype', 'name': 'output_dtype', 'type': 'dtype'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'},\n      {'start': 4, 'name': 'scoreThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ListDiff',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [{\n  'tfOpName': 'TopKV2',\n  'category': 'evaluation',\n  'inputs': [\n    {'start': 0, 'name': 'x', 'type': 'tensor'},\n    {'start': 1, 'name': 'k', 'type': 'number'},\n  ],\n  'attrs': [{'tfName': 'sorted', 'name': 'sorted', 'type': 'bool'}]\n}];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'default', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'category': 'graph',\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {'tfOpName': 'Const', 'category': 'graph'}, {\n    'tfOpName': 'Identity',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IdentityN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Rank',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Size',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Shape',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Print',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'data', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'message', 'name': 'message', 'type': 'string'}, {\n        'tfName': 'first_n',\n        'name': 'firstN',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfName': 'summarize',\n        'name': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {'tfOpName': 'NoOp', 'category': 'graph', 'inputs': []}, {\n    'tfOpName': 'StopGradient',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'min', 'name': 'min', 'type': 'number'},\n      {'tfName': 'max', 'name': 'max', 'type': 'number'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'image', 'type': 'tensor'},\n      {'start': 1, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 2, 'name': 'boxInd', 'type': 'tensor'},\n      {'start': 3, 'name': 'cropSize', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'method', 'name': 'method', 'type': 'string'}, {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Equal',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n      {'start': 1, 'name': 'a', 'type': 'tensor'},\n      {'start': 2, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': '_FusedMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n      {'start': 2, end: 0, 'name': 'args', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'num_args', 'name': 'numArgs', 'type': 'number'}, {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMulV2',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'perm', 'type': 'number[]'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV3',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'depth_radius',\n        'name': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {'tfName': 'bias', 'name': 'bias', 'type': 'number', 'defaultValue': 1.0},\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfName': 'beta',\n        'name': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'LogSoftmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': true,\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Max',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Mean',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Min',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Sum',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'All',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Any',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ConcatV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors'},\n      {'start': -1, 'name': 'axis', 'type': 'number'}\n    ],\n    'attrs':\n        [{'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2}]\n  },\n  {\n    'tfOpName': 'Concat',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n      {'start': 0, 'name': 'axis', 'type': 'number'}\n    ],\n    'attrs': [{'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2}]\n\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'Gather',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'validate_indices',\n        'name': 'validateIndices',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'dims', 'type': 'bool', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'size', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'end', 'type': 'number[]'},\n      {'start': 3, 'name': 'strides', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'begin_mask',\n        'name': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'end_mask',\n        'name': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'new_axis_mask',\n        'name': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'ellipsis_mask',\n        'name': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'shrink_axis_mask',\n        'name': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'num',\n        'name': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'reps', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0},\n      {'start': 1, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'num_split',\n      'name': 'numOrSizeSplits',\n      'type': 'number',\n      'defaultValue': 1\n    }]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'ScatterNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'values', 'type': 'tensor'},\n      {'start': 2, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': false,\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IFFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'RFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IRFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Cast',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'SrcT',\n        'name': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfName': 'DstT', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Pad',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'},\n    ],\n    'attrs': [{\n      'tfName': 'constant_value',\n      'name': 'constantValue',\n      'type': 'number',\n      'defaultValue': 0\n    }]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'}, {\n        'start': 2,\n        'name': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'axis',\n      'tfDeprecatedName': 'squeeze_dims',\n      'name': 'axis',\n      'type': 'number[]'\n    }]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'paddings', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'crops', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthToSpace',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'block_size', 'name': 'blockSize', 'type': 'number'},\n      {'tfName': 'data_format', 'name': 'dataFormat', 'type': 'string'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, env} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {getRegisteredOp} from './custom_op/register';\n\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as spectral from './op_list/spectral';\nimport * as transformation from './op_list/transformation';\nimport {Graph, InputParamValue, Node, OpMapper, ParamValue} from './types';\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, logical, image, graph, matrices, normalization, reduction,\n      sliceJoin, spectral, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat.apply([], ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  // Converts the model from Tensorflow GraphDef to local representation for\n  // TensorFlow.js API\n  transformGraph(\n      graph: tensorflow.IGraphDef,\n      signature: tensorflow.ISignatureDef = {}): Graph {\n    const tfNodes = graph.node;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (node.op.startsWith('Placeholder')) {\n        placeholders.push(map[node.name]);\n      }\n      if (node.op === 'Const') {\n        weights.push(map[node.name]);\n      }\n      return map;\n    }, {});\n\n    let inputs: Node[] = [];\n    const outputs: Node[] = [];\n    let inputNodeNameToKey: {[key: string]: string} = {};\n    let outputNodeNameToKey: {[key: string]: string} = {};\n    if (signature != null) {\n      inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n      outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n    }\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        node.inputs.push(nodes[nodeName]);\n        nodes[nodeName].children.push(node);\n      });\n    });\n\n    // if signature has not outputs set, add any node that does not have\n    // outputs.\n    if (Object.keys(outputNodeNameToKey).length === 0) {\n      allNodes.forEach(key => {\n        const node = nodes[key];\n        if (node.children.length === 0) {\n          outputs.push(node);\n        }\n      });\n    } else {\n      Object.keys(outputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node != null) {\n          node.signatureKey = outputNodeNameToKey[name];\n          outputs.push(node);\n        }\n      });\n    }\n\n    if (Object.keys(inputNodeNameToKey).length > 0) {\n      Object.keys(inputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node) {\n          node.signatureKey = inputNodeNameToKey[name];\n          inputs.push(node);\n        }\n      });\n    } else {\n      inputs = placeholders;\n    }\n\n    return {nodes, inputs, outputs, weights, placeholders, signature};\n  }\n\n  private mapSignatureEntries(entries: {[k: string]: tensorflow.ITensorInfo}) {\n    return Object.keys(entries || {})\n        .reduce<{[key: string]: string}>((prev, curr) => {\n          prev[entries[curr].name] = curr;\n          return prev;\n        }, {});\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    // Unsupported ops will cause an error at run-time (not parse time), since\n    // they may not be used by the actual execution subgraph.\n    const mapper =\n        getRegisteredOp(node.op) || this.opMappers[node.op] || {} as OpMapper;\n    if (node.attr == null) {\n      node.attr = {};\n    }\n\n    const newNode: Node = {\n      name: node.name,\n      op: node.op,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.substr(1) : input),\n      inputs: [],\n      children: [],\n      inputParams: {},\n      attrParams: {},\n      rawAttrs: node.attr\n    };\n\n    if (mapper.inputs != null) {\n      newNode.inputParams =\n          mapper.inputs.reduce<{[key: string]: InputParamValue}>(\n              (map, param) => {\n                map[param.name] = {\n                  type: param.type,\n                  inputIndexStart: param.start,\n                  inputIndexEnd: param.end\n                };\n                return map;\n              },\n              {});\n    }\n    if (mapper.attrs != null) {\n      newNode.attrParams =\n          mapper.attrs.reduce<{[key: string]: ParamValue}>((map, param) => {\n            const type = param.type;\n            let value = undefined;\n            switch (param.type) {\n              case 'string':\n                value = getStringParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'string[]':\n                value = getStringArrayParam(\n                    node.attr, param.tfName, param.defaultValue as string[]);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string[]);\n                }\n                break;\n              case 'number':\n                value = getNumberParam(\n                    node.attr, param.tfName,\n                    (param.defaultValue || 0) as number);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumberParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number);\n                }\n                break;\n              case 'number[]':\n                value = getNumericArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumericArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'bool':\n                value = getBoolParam(\n                    node.attr, param.tfName, param.defaultValue as boolean);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean);\n                }\n                break;\n              case 'bool[]':\n                value = getBoolArrayParam(\n                    node.attr, param.tfName, param.defaultValue as boolean[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean[]);\n                }\n                break;\n              case 'shape':\n                value = getTensorShapeParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'shape[]':\n                value = getTensorShapeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[][]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[][]);\n                }\n                break;\n              case 'dtype':\n                value = getDtypeParam(\n                    node.attr, param.tfName, param.defaultValue as DataType);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType);\n                }\n                break;\n              case 'dtype[]':\n                value = getDtypeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as DataType[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType[]);\n                }\n                break;\n              case 'tensor':\n              case 'tensors':\n                break;\n              default:\n                throw new Error(\n                    `Unsupported param type: ${param.type} for op: ${node.op}`);\n            }\n            map[param.name] = {value, type};\n            return map;\n          }, {});\n    }\n    return newNode;\n  }\n}\n\nexport function decodeBase64(text: string): string {\n  const global = env().global;\n  if (typeof global.atob !== 'undefined') {\n    return global.atob(text);\n  } else if (typeof Buffer !== 'undefined') {\n    return new Buffer(text, 'base64').toString();\n  } else {\n    throw new Error(\n        'Unable to decode base64 in this environment. ' +\n        'Missing built-in atob() or Buffer()');\n  }\n}\n\nexport function parseStringParam(s: []|string, keepCase: boolean): string {\n  const value =\n      Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n  return keepCase ? value : value.toLowerCase();\n}\n\nexport function getStringParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n    keepCase = false): string {\n  const param = attrs[name];\n  if (param != null) {\n    return parseStringParam(param.s, keepCase);\n  }\n  return def;\n}\n\nexport function getBoolParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean): boolean {\n  const param = attrs[name];\n  return param ? param.b : def;\n}\n\nexport function getNumberParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number): number {\n  const param = attrs[name] || {};\n  const value =\n      param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n  return (typeof value === 'number') ? value : parseInt(value, 10);\n}\n\nexport function parseDtypeParam(value: string|tensorflow.DataType): DataType {\n  if (typeof (value) === 'string') {\n    // tslint:disable-next-line:no-any\n    value = tensorflow.DataType[value as any];\n  }\n  switch (value) {\n    case tensorflow.DataType.DT_FLOAT:\n      return 'float32';\n    case tensorflow.DataType.DT_INT32:\n    case tensorflow.DataType.DT_INT64:\n      return 'int32';\n    case tensorflow.DataType.DT_BOOL:\n      return 'bool';\n    case tensorflow.DataType.DT_DOUBLE:\n      return 'float32';\n    case tensorflow.DataType.DT_STRING:\n      return 'string';\n    default:\n      // Unknown dtype error will happen at runtime (instead of parse time),\n      // since these nodes might not be used by the actual subgraph execution.\n      return null;\n  }\n}\n\nexport function getDtypeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType): DataType {\n  const param = attrs[name];\n  if (param && param.type) {\n    return parseDtypeParam(param.type);\n  }\n  return def;\n}\n\nexport function getDtypeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType[]): DataType[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.type) {\n    return param.list.type.map(v => parseDtypeParam(v));\n  }\n  return def;\n}\n\nexport function parseTensorShapeParam(shape: tensorflow.ITensorShape): number[]|\n    undefined {\n  if (shape.unknownRank) {\n    return undefined;\n  }\n  if (shape.dim != null) {\n    return shape.dim.map(\n        dim =>\n            (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n  }\n  return [];\n}\n\nexport function getTensorShapeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def?: number[]): number[]|undefined {\n  const param = attrs[name];\n  if (param && param.shape) {\n    return parseTensorShapeParam(param.shape);\n  }\n  return def;\n}\n\nexport function getNumericArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[]): number[] {\n  const param = attrs[name];\n  if (param) {\n    return ((param.list.f && param.list.f.length ? param.list.f :\n                                                   param.list.i) ||\n            [])\n        .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n  }\n  return def;\n}\n\nexport function getStringArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string[],\n    keepCase = false): string[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.s) {\n    return param.list.s.map((v) => {\n      return parseStringParam(v, keepCase);\n    });\n  }\n  return def;\n}\n\nexport function getTensorShapeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[][]): number[][] {\n  const param = attrs[name];\n  if (param && param.list && param.list.shape) {\n    return param.list.shape.map((v) => {\n      return parseTensorShapeParam(v);\n    });\n  }\n  return def;\n}\n\nexport function getBoolArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean[]): boolean[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.b) {\n    return param.list.b;\n  }\n  return def;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {getTensor} from '../executors/utils';\nimport {getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam} from '../operation_mapper';\nimport {GraphNode, Node, ValueType} from '../types';\n\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl implements GraphNode {\n  public readonly inputs: Tensor[] = [];\n  public readonly attrs: {[key: string]: ValueType} = {};\n  constructor(\n      private node: Node, private tensorMap: NamedTensorsMap,\n      private context: ExecutionContext) {\n    this.inputs = node.inputNames.map(name => this.getInput(name));\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs)\n                       .reduce((attrs: {[key: string]: ValueType}, key) => {\n                         attrs[key] = this.getAttr(key);\n                         return attrs;\n                       }, {});\n    }\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getInput(name: string): Tensor {\n    return getTensor(name, this.tensorMap, this.context);\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getAttr(name: string, defaultValue?: ValueType): ValueType {\n    const value = this.node.rawAttrs[name];\n    if (value.tensor != null) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n    if (value.i != null || value.f != null) {\n      return getNumberParam(this.node.rawAttrs, name, defaultValue as number);\n    }\n    if (value.s != null) {\n      return getStringParam(this.node.rawAttrs, name, defaultValue as string);\n    }\n    if (value.b != null) {\n      return getBoolParam(this.node.rawAttrs, name, defaultValue as boolean);\n    }\n    if (value.shape != null) {\n      return getTensorShapeParam(\n          this.node.rawAttrs, name, defaultValue as number[]);\n    }\n    if (value.type != null) {\n      return getDtypeParam(this.node.rawAttrs, name, defaultValue as DataType);\n    }\n    if (value.list != null) {\n      if (value.list.i != null || value.list.f != null) {\n        return getNumericArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[]);\n      }\n      if (value.list.s != null) {\n        return getStringArrayParam(\n            this.node.rawAttrs, name, defaultValue as string[]);\n      }\n      if (value.list.shape != null) {\n        return getTensorShapeArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[][]);\n      }\n      if (value.list.b != null) {\n        return getBoolArrayParam(\n            this.node.rawAttrs, name, defaultValue as boolean[]);\n      }\n      if (value.list.type != null) {\n        return getDtypeArrayParam(\n            this.node.rawAttrs, name, defaultValue as DataType[]);\n      }\n    }\n\n    return defaultValue;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'BiasAdd':\n    case 'AddV2':\n    case 'Add': {\n      return [tfc.add(\n          (getParamValue('a', node, tensorMap, context) as tfc.Tensor),\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'AddN': {\n      return [tfc.addN((\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[]))];\n    }\n    case 'FloorMod':\n    case 'Mod':\n      return [tfc.mod(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'Mul':\n      return [tfc.mul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'RealDiv':\n    case 'Div': {\n      return [tfc.div(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'DivNoNan': {\n      return [tfc.divNoNan(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'FloorDiv': {\n      return [tfc.floorDiv(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sub': {\n      return [tfc.sub(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Minimum': {\n      return [tfc.minimum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Maximum': {\n      return [tfc.maximum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Pow': {\n      return [tfc.pow(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'SquaredDifference': {\n      return [tfc.squaredDifference(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Abs':\n    case 'ComplexAbs':\n      return [tfc.abs(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Acos':\n      return [tfc.acos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Acosh':\n      return [tfc.acosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Asin':\n      return [tfc.asin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Asinh':\n      return [tfc.asinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atan':\n      return [tfc.atan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atan2':\n      return [tfc.atan2(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atanh':\n      return [tfc.atanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Ceil':\n      return [tfc.ceil(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Complex':\n      return [tfc.complex(\n          getParamValue('real', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('imag', node, tensorMap, context) as tfc.Tensor)];\n    case 'Cos':\n      return [tfc.cos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Cosh':\n      return [tfc.cosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Elu':\n      return [tfc.elu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Erf':\n      return [tfc.erf(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Exp':\n      return [tfc.exp(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Expm1': {\n      return [tfc.expm1(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Floor':\n      return [tfc.floor(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Log':\n      return [tfc.log(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Log1p': {\n      return [tfc.log1p(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Imag':\n      return [tfc.imag(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n\n    case 'Neg':\n      return [tfc.neg(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Reciprocal': {\n      return [tfc.reciprocal(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Real':\n      return [tfc.real(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Relu':\n      return [tfc.relu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Round': {\n      return [tfc.round(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Selu':\n      return [tfc.selu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sigmoid':\n      return [tfc.sigmoid(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sin':\n      return [tfc.sin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sign': {\n      return [tfc.sign(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sinh': {\n      return [tfc.sinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Softplus': {\n      return [tfc.softplus(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sqrt': {\n      return [tfc.sqrt(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Square': {\n      return [tfc.square(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Tanh': {\n      return [tfc.tanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Tan':\n      return [tfc.tan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Relu6':\n    case 'ClipByValue':\n      return [tfc.clipByValue(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('clipValueMin', node, tensorMap, context) as number,\n          getParamValue('clipValueMax', node, tensorMap, context) as number)];\n    case 'Rsqrt':\n      return [tfc.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n    case 'Prod':\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('axes', node, tensorMap, context) as number[])];\n    case 'LeakyRelu':\n      return [tfc.leakyRelu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('alpha', node, tensorMap, context) as number)];\n    case 'Prelu':\n      return [tfc.prelu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('alpha', node, tensorMap, context) as tfc.Tensor)];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {concat, DataType, slice, stack, Tensor, tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private static nextId = 0;\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly id: number;\n  constructor(\n      public readonly name: string, public readonly dtype: DataType,\n      private maxSize: number, private elementShape: number[],\n      public readonly identicalElementShapes: boolean,\n      public readonly dynamicSize: boolean,\n      public readonly clearAfterRead: boolean) {\n    this.id = TensorArray.nextId++;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Close the current TensorArray.\n   */\n  clearAndClose() {\n    this.tensors.forEach(tensor => tensor.tensor.dispose());\n    this.tensors = [];\n    this.closed_ = true;\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.tensors.length) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.tensors.length}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 &&\n        (this.elementShape == null || this.elementShape.length === 0)) {\n      this.elementShape = tensor.shape;\n    }\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t && t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t && t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = tensor.reshape([1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = slice(tensor, indices, sizes).reshape(this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n\n  /**\n   * This differs from util.assertShapesMatch in that it allows values of\n   * negative one, an undefined size of a dimensinon, in a shape to match\n   * anything.\n   */\n  private assertShapesMatchAllowUndefinedSize(\n      shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n    util.assert(\n        this.shapesEqualAllowUndefinedSize(shapeA, shapeB),\n        () =>\n            errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n\n  private shapesEqualAllowUndefinedSize(n1: number[], n2: number[]) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'Conv1D': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [tfc.conv1d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'Conv2D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfc.conv2d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D':\n        case 'FusedDepthwiseConv2dNative': {\n          const [extraOp, activationFunc] =\n              (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n          const isBiasAdd = extraOp === 'biasadd';\n          const isPrelu = activationFunc === 'prelu';\n          const isBatchNorm = extraOp === 'fusedbatchnorm';\n\n          const numArgs =\n              (getParamValue('numArgs', node, tensorMap, context) as number);\n          if (isBiasAdd) {\n            if (isPrelu && numArgs !== 2) {\n              throw new Error(\n                  'FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n                  'must have two extra arguments: bias and alpha.');\n            }\n            if (!isPrelu && numArgs !== 1) {\n              throw new Error(\n                  'FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n                  'one extra argument: bias.');\n            }\n          }\n          if (isBatchNorm) {\n            throw new Error(\n                'FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.');\n          }\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const [biasArg, preluArg] =\n              getParamValue('args', node, tensorMap, context) as tfc.Tensor[];\n          const kernelMethod = node.op === '_FusedConv2D' ?\n              tfc.fused.conv2d :\n              tfc.fused.depthwiseConv2d;\n          return [kernelMethod({\n            x: getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                tfc.Tensor4D,\n            filter: getParamValue('filter', node, tensorMap, context) as\n                tfc.Tensor4D,\n            strides: [stride[1], stride[2]],\n            pad: pad as 'valid' | 'same',\n            dataFormat: dataFormat as 'NHWC' | 'NCHW',\n            dilations: [dilations[1], dilations[2]],\n            bias: biasArg,\n            activation: activationFunc as tfc.fused.Activation,\n            preluActivationWeights: preluArg\n          })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          return [tfc.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [tfc.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfc.conv3d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor4D |\n                  tfc.Tensor<tfc.Rank.R5>,\n              getParamValue('filter', node, tensorMap, context) as\n                  tfc.Tensor<tfc.Rank.R5>,\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same',\n              dataFormat as 'NDHWC' | 'NCDHW',\n              [dilations[1], dilations[2], dilations[3]])];\n        }\n\n        case 'AvgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.avgPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n\n        case 'MaxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.maxPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n\n        case 'AvgPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.avgPool3d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        case 'MaxPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.maxPool3d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Fill': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const value = getParamValue('value', node, tensorMap, context) as number;\n      return [tfc.fill(shape, value, dtype)];\n    }\n    case 'LinSpace': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const num = getParamValue('num', node, tensorMap, context) as number;\n      return [tfc.linspace(start, stop, num)];\n    }\n    case 'Multinomial': {\n      const logits =\n          getParamValue('logits', node, tensorMap, context) as tfc.Tensor1D;\n      const numSamples =\n          getParamValue('numSamples', node, tensorMap, context) as number;\n      const seed = getParamValue('seed', node, tensorMap, context) as number;\n      return [tfc.multinomial(logits, numSamples, seed)];\n    }\n    case 'OneHot': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      const depth = getParamValue('depth', node, tensorMap, context) as number;\n      const onValue =\n          getParamValue('onValue', node, tensorMap, context) as number;\n      const offValue =\n          getParamValue('offValue', node, tensorMap, context) as number;\n      return [tfc.oneHot(indices, depth, onValue, offValue)];\n    }\n    case 'Ones': {\n      return [tfc.ones(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'OnesLike': {\n      return [tfc.onesLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'RandomUniform': {\n      return [tfc.randomUniform(\n          // tslint:disable-next-line:no-any\n          getParamValue('shape', node, tensorMap, context) as any,\n          getParamValue('minval', node, tensorMap, context) as number,\n          getParamValue('maxval', node, tensorMap, context) as number,\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'Range': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const step = getParamValue('step', node, tensorMap, context) as number;\n      return [tfc.range(\n          start, stop, step,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32')];\n    }\n    case 'TruncatedNormal': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const mean = getParamValue('mean', node, tensorMap, context) as number;\n      const stdDev =\n          getParamValue('stdDev', node, tensorMap, context) as number;\n      const seed = getParamValue('seed', node, tensorMap, context) as number;\n      return [tfc.truncatedNormal(\n          shape, mean, stdDev,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32',\n          seed)];\n    }\n    case 'Zeros': {\n      return [tfc.zeros(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'ZerosLike': {\n      return [tfc.zerosLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'TopKV2': {\n          const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n          const k = getParamValue('k', node, tensorMap, context) as number;\n          const sorted =\n              getParamValue('sorted', node, tensorMap, context) as boolean;\n          const result = tfc.topk(x, k, sorted);\n          return [result.values, result.indices];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Const': {\n      return tensorMap[node.name];\n    }\n    case 'PlaceholderWithDefault':\n      const def =\n          getParamValue('default', node, tensorMap, context) as tfc.Tensor;\n      return [getTensor(node.name, tensorMap, context) || def];\n    case 'Placeholder':\n      return [getTensor(node.name, tensorMap, context)];\n    case 'Identity':\n    case 'StopGradient':\n    case 'FakeQuantWithMinMaxVars':  // This op is currently ignored.\n      return [\n        (getParamValue('x', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'IdentityN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => t.clone());\n    case 'Snapshot':\n      const snapshot =\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor);\n      return [snapshot.clone()];\n    case 'Shape':\n      return [tfc.tensor1d(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).shape,\n          'int32')];\n    case 'ShapeN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => tfc.tensor1d(t.shape));\n    case 'Size':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).size,\n          'int32')];\n    case 'Rank':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).rank,\n          'int32')];\n    case 'NoOp':\n      return [tfc.scalar(1)];\n    case 'Print':\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor[];\n      const message =\n          getParamValue('message', node, tensorMap, context) as string;\n      const summarize =\n          getParamValue('summarize', node, tensorMap, context) as number;\n      console.warn(\n          'The graph has a tf.print() operation,' +\n          'usually used for debugging, which slows down performance.');\n      console.log(message);\n      for (let i = 0; i < data.length; i++) {\n        console.log(\n            Array.prototype.slice.call(data[i].dataSync()).slice(0, summarize));\n      }\n      return [input];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'ResizeBilinear': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeBilinear(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'ResizeNearestNeighbor': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeNearestNeighbor(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'CropAndResize': {\n      const image =\n          getParamValue('image', node, tensorMap, context) as tfc.Tensor;\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const boxInd =\n          getParamValue('boxInd', node, tensorMap, context) as tfc.Tensor;\n      const cropSize =\n          getParamValue('cropSize', node, tensorMap, context) as number[];\n      const method =\n          getParamValue('method', node, tensorMap, context) as string;\n      const extrapolationValue =\n          getParamValue('extrapolationValue', node, tensorMap, context) as\n          number;\n      return [tfc.image.cropAndResize(\n          image as tfc.Tensor4D, boxes as tfc.Tensor2D, boxInd as tfc.Tensor1D,\n          cropSize as [number, number], method as 'bilinear' | 'nearest',\n          extrapolationValue)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Equal': {\n      return [tfc.equal(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'NotEqual': {\n      return [tfc.notEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Greater': {\n      return [tfc.greater(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'GreaterEqual': {\n      return [tfc.greaterEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Less': {\n      return [tfc.less(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LessEqual': {\n      return [tfc.lessEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalAnd': {\n      return [tfc.logicalAnd(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalNot': {\n      return [tfc.logicalNot(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalOr': {\n      return [tfc.logicalOr(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Select': {\n      return [tfc.where(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'BatchMatMul':\n    case 'BatchMatMulV2':\n    case 'MatMul':\n      return [tfc.matMul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('transposeA', node, tensorMap, context) as boolean,\n          getParamValue('transposeB', node, tensorMap, context) as boolean)];\n\n    case 'Transpose':\n      return [tfc.transpose(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('perm', node, tensorMap, context) as number[])];\n\n    case '_FusedMatMul':\n      const [extraOp, activationFunc] =\n          (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n      const isBiasAdd = extraOp === 'biasadd';\n      const isPrelu = activationFunc === 'prelu';\n\n      const numArgs =\n          (getParamValue('numArgs', node, tensorMap, context) as number);\n      if (isBiasAdd) {\n        if (isPrelu && numArgs !== 2) {\n          throw new Error(\n              'Fused MatMul with BiasAdd and Prelu must have two ' +\n              'extra arguments: bias and alpha.');\n        }\n        if (!isPrelu && numArgs !== 1) {\n          throw new Error(\n              'Fused MatMul with BiasAdd must have one extra argument: bias.');\n        }\n      }\n      const [biasArg, preluArg] =\n          getParamValue('args', node, tensorMap, context) as tfc.Tensor[];\n      return [tfc.fused.matMul({\n        a: getParamValue('a', node, tensorMap, context) as tfc.Tensor2D,\n        b: getParamValue('b', node, tensorMap, context) as tfc.Tensor2D,\n        transposeA: getParamValue('transposeA', node, tensorMap, context) as\n            boolean,\n        transposeB: getParamValue('transposeB', node, tensorMap, context) as\n            boolean,\n        bias: biasArg,\n        activation: activationFunc as tfc.fused.Activation,\n        preluActivationWeights: preluArg\n      })];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'FusedBatchNorm':\n    case 'FusedBatchNormV2': {\n      return [tfc.batchNorm(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('offset', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('epsilon', node, tensorMap, context) as number)];\n    }\n    case 'FusedBatchNormV3': {\n      return [tfc.batchNorm(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('offset', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('epsilon', node, tensorMap, context) as number)];\n    }\n    case 'LRN': {\n      return [tfc.localResponseNormalization(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n              tfc.Tensor4D,\n          getParamValue('radius', node, tensorMap, context) as number,\n          getParamValue('bias', node, tensorMap, context) as number,\n          getParamValue('alpha', node, tensorMap, context) as number,\n          getParamValue('beta', node, tensorMap, context) as number)];\n    }\n    case 'Softmax': {\n      return [tfc.softmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogSoftmax': {\n      return [tfc.logSoftmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'SparseToDense': {\n      return [tfc.sparseToDense(\n          getParamValue('sparseIndices', node, tensorMap, context) as\n              tfc.Tensor,\n          getParamValue('outputShape', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('sparseValues', node, tensorMap, context) as number[],\n          getParamValue('defaultValue', node, tensorMap, context) as\n              tfc.Scalar)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Max': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.max(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Mean': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.mean(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Min': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.min(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Sum': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.sum(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'All': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.all(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Any': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.any(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'ArgMax': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'ArgMin': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'Prod': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'ConcatV2':\n    case 'Concat': {\n      const n = getParamValue('n', node, tensorMap, context) as number;\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      let inputs =\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n      inputs = inputs.slice(0, n);\n      return [tfc.concat(inputs, axis)];\n    }\n    case 'GatherV2':\n    case 'Gather': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      return [tfc.gather(input, indices.asType('int32'), axis)];\n    }\n    case 'ReverseV2':\n    case 'Reverse': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.reverse(input, axis)];\n    }\n    case 'Slice': {\n      // tslint:disable-next-line:no-any\n      const begin = getParamValue('begin', node, tensorMap, context) as any;\n      // tslint:disable-next-line:no-any\n      const size = getParamValue('size', node, tensorMap, context) as any;\n      return [tfc.slice(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, begin,\n          size)];\n    }\n    case 'StridedSlice': {\n      const begin =\n          getParamValue('begin', node, tensorMap, context) as number[];\n      const end = getParamValue('end', node, tensorMap, context) as number[];\n      const strides =\n          getParamValue('strides', node, tensorMap, context) as number[];\n      const beginMask =\n          getParamValue('beginMask', node, tensorMap, context) as number;\n      const endMask =\n          getParamValue('endMask', node, tensorMap, context) as number;\n      const ellipsisMask =\n          getParamValue('ellipsisMask', node, tensorMap, context) as number;\n      const newAxisMask =\n          getParamValue('newAxisMask', node, tensorMap, context) as number;\n      const shrinkAxisMask =\n          getParamValue('shrinkAxisMask', node, tensorMap, context) as number;\n      const tensor = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      if (begin.length === 1 && tensor.shape.length > 1) {\n        for (let i = 1; i < tensor.shape.length; i++) {\n          begin.push(0);\n          end.push(tensor.shape[i]);\n          strides.push(strides[0]);\n        }\n      }\n      return [tfc.stridedSlice(\n          tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask)];\n    }\n    case 'Pack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensors =\n            getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n        // Reshape the tensors to the first tensor's shape if they don't match.\n        const shape = tensors[0].shape;\n        const squeezedShape = tensors[0].squeeze().shape;\n        const mapped = tensors.map(tensor => {\n          const sameShape = tfc.util.arraysEqual(tensor.shape, shape);\n          if (!sameShape &&\n              !tfc.util.arraysEqual(tensor.squeeze().shape, squeezedShape)) {\n            throw new Error('the input tensors shape does not match');\n          }\n          return sameShape ? tensor : tensor.reshape(shape);\n        });\n        return [tfc.stack(mapped, axis)];\n      });\n    }\n    case 'Unpack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensor =\n            getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n        return tfc.unstack(tensor, axis);\n      });\n    }\n    case 'Tile': {\n      const reps = getParamValue('reps', node, tensorMap, context) as number[];\n      return [tfc.tile(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, reps)];\n    }\n    case 'Split':\n    case 'SplitV': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const numOrSizeSplits =\n          getParamValue('numOrSizeSplits', node, tensorMap, context) as number |\n          number[];\n      return tfc.split(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          numOrSizeSplits, axis);\n    }\n    case 'ScatterNd': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      const values =\n          getParamValue('values', node, tensorMap, context) as tfc.Tensor;\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      return [tfc.scatterND(indices, values, shape)];\n    }\n    case 'GatherNd': {\n      const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.gatherND(x, indices)];\n    }\n    case 'SparseToDense': {\n      const indices =\n          getParamValue('sparseIndices', node, tensorMap, context) as\n          tfc.Tensor;\n      const shape =\n          getParamValue('outputShape', node, tensorMap, context) as number[];\n      const sparseValues =\n          getParamValue('sparseValues', node, tensorMap, context) as tfc.Tensor;\n      const defaultValue =\n          getParamValue('defaultValue', node, tensorMap, context) as tfc.Scalar;\n      return [tfc.sparseToDense(\n          indices, sparseValues, shape,\n          sparseValues.dtype === defaultValue.dtype ?\n              defaultValue :\n              defaultValue.asType(sparseValues.dtype))];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'FFT': {\n          return [tfc.fft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'IFFT': {\n          return [tfc.ifft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'RFFT': {\n          return [tfc.rfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'IRFFT': {\n          return [tfc.irfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, split} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Cast': {\n      return [tfc.cast(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('dtype', node, tensorMap, context) as 'int32' |\n              'float32' | 'bool')];\n    }\n    case 'ExpandDims': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.expandDims(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'Squeeze': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      return [tfc.squeeze(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n\n    case 'Reshape': {\n      return [tfc.reshape(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('shape', node, tensorMap, context) as number[])];\n    }\n    case 'PadV2':\n    case 'Pad': {\n      return [tfc.pad(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          split(\n              getParamValue('padding', node, tensorMap, context) as number[],\n              2) as Array<[number, number]>,\n          getParamValue('constantValue', node, tensorMap, context) as number)];\n    }\n    case 'SpaceToBatchND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const paddings = split(\n          getParamValue('paddings', node, tensorMap, context) as number[], 2);\n      return [tfc.spaceToBatchND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, paddings)];\n    }\n    case 'BatchToSpaceND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const crops = split(\n          getParamValue('crops', node, tensorMap, context) as number[], 2);\n      return [tfc.batchToSpaceND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, crops)];\n    }\n    case 'DepthToSpace': {\n      const blockSize =\n          getParamValue('blockSize', node, tensorMap, context) as number;\n      const dataFormat =\n          (getParamValue('dataFormat', node, tensorMap, context) as\n           string).toUpperCase() as 'NHWC' |\n          'NCHW';\n      return [tfc.depthToSpace(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor4D,\n          blockSize, dataFormat)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\n\nimport {NodeValueImpl} from './custom_op/node_value_impl';\nimport {getRegisteredOp} from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[]|Promise<tfc.Tensor[]> {\n  const value =\n      ((node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) => {\n        switch (node.category) {\n          case 'arithmetic':\n            return arithmetic.executeOp(node, tensorMap, context);\n          case 'basic_math':\n            return basicMath.executeOp(node, tensorMap, context);\n          case 'control':\n            return control.executeOp(node, tensorMap, context);\n          case 'convolution':\n            return convolution.executeOp(node, tensorMap, context);\n          case 'creation':\n            return creation.executeOp(node, tensorMap, context);\n          case 'dynamic':\n            return dynamic.executeOp(node, tensorMap, context);\n          case 'evaluation':\n            return evaluation.executeOp(node, tensorMap, context);\n          case 'image':\n            return image.executeOp(node, tensorMap, context);\n          case 'graph':\n            return graph.executeOp(node, tensorMap, context);\n          case 'logical':\n            return logical.executeOp(node, tensorMap, context);\n          case 'matrices':\n            return matrices.executeOp(node, tensorMap, context);\n          case 'normalization':\n            return normalization.executeOp(node, tensorMap, context);\n          case 'reduction':\n            return reduction.executeOp(node, tensorMap, context);\n          case 'slice_join':\n            return sliceJoin.executeOp(node, tensorMap, context);\n          case 'spectral':\n            return spectral.executeOp(node, tensorMap, context);\n          case 'transformation':\n            return transformation.executeOp(node, tensorMap, context);\n          case 'custom':\n            const opMapper = getRegisteredOp(node.op);\n            if (opMapper && opMapper.customExecutor) {\n              return opMapper.customExecutor(\n                  new NodeValueImpl(node, tensorMap, context));\n            } else {\n              throw TypeError(`Custom op ${node.op} is not registered.`);\n            }\n          default:\n            throw TypeError(\n                `Unknown op '${node.op}'. File an issue at ` +\n                `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                `, or register a custom execution with tf.registerOp()`);\n        }\n      })(node, tensorMap, context);\n  if (value instanceof Promise) {\n    return value.then((data) => [].concat(data));\n  }\n  return [].concat(value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {scalar} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'LoopCond':\n      return [\n        (getParamValue('pred', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'Switch': {\n      const pred =\n          getParamValue('pred', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor;\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data.clone()] :\n                                      [data.clone(), undefined];\n    }\n    case 'Merge':\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      return inputName ? [getTensor(inputName, tensorMap, context).clone()] :\n                         undefined;\n\n    case 'Enter':\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.enterFrame(frameId);\n      return [data.clone()];\n\n    case 'Exit':\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.exitFrame();\n      return [tensor.clone()];\n\n    case 'NextIteration':\n      const input =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.nextIteration();\n      return [input.clone()];\n\n    case 'TensorArrayV3':\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [scalar(tensorArray.id), scalar(1.0)];\n\n    case 'TensorArrayWriteV3':\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const writeTensorArray = context.getTensorArray(id);\n      writeTensorArray.write(index, writeTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArrayReadV3':\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId);\n      return [readTensorArray.read(readIndex)];\n\n    case 'TensorArrayGatherV3':\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n\n    case 'TensorArrayScatterV3':\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArrayConcatV3':\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const concatTensorArray = context.getTensorArray(concatId);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      return [concatTensorArray.concat(concatDtype)];\n\n    case 'TensorArraySplitV3':\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId);\n      splitTensorArray.split(lengths, splitTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArraySizeV3':\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const sizeTensorArray = context.getTensorArray(sizeId);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n\n    case 'TensorArrayCloseV3':\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const closeTensorArray = context.getTensorArray(closeId);\n      closeTensorArray.clearAndClose();\n      return [scalar(0)];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\nimport {getParamValue} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'NonMaxSuppressionV3':\n    case 'NonMaxSuppressionV2': {\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const scores =\n          getParamValue('scores', node, tensorMap, context) as tfc.Tensor;\n      const maxOutputSize =\n          getParamValue('maxOutputSize', node, tensorMap, context) as number;\n      const iouThreshold =\n          getParamValue('iouThreshold', node, tensorMap, context) as number;\n      const scoreThreshold =\n          getParamValue('scoreThreshold', node, tensorMap, context) as number;\n      return [await tfc.image.nonMaxSuppressionAsync(\n          boxes as tfc.Tensor2D, scores as tfc.Tensor1D, maxOutputSize,\n          iouThreshold, scoreThreshold)];\n    }\n    case 'Where': {\n      return [await tfc.whereAsync(\n          (getParamValue('condition', node, tensorMap, context) as tfc.Tensor)\n              .asType('bool'))];\n    }\n    case 'ListDiff': {\n      return tfc.setdiff1dAsync(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      public readonly weightMap: NamedTensorsMap,\n      public readonly tensorArrayMap: TensorArrayMap) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]);\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorMap} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {parseNodeName} from '../operations/executors/utils';\nimport {Graph, Node} from '../operations/types';\n\nexport interface ExecutionInfo {\n  inputs: NamedTensorMap;\n  outputs: Node[];\n  usedNodes: Set<string>;\n  missingInputs: string[];\n  dynamicNode: Node;\n  syncInputs: string[];\n}\n\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(\n    inputs: NamedTensorMap, outputs: Node[],\n    weightMap: NamedTensorsMap): ExecutionInfo {\n  const usedNodes = new Set<string>();\n  const missingInputs: string[] = [];\n  let dynamicNode: Node = null;\n  let syncInputs: string[] = null;\n\n  // Start with the outputs, going backwards and find all the nodes that are\n  // needed to compute those outputs.\n  const seen = new Set<string>();\n  const inputNodeNames =\n      Object.keys(inputs).map(name => parseNodeName(name)[0]);\n  const frontier = [...outputs];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    if (isControlFlow(node) || isDynamicShape(node)) {\n      if (dynamicNode == null) {\n        dynamicNode = node;\n        syncInputs = dynamicNode.children.map(child => child.name)\n                         .filter(name => usedNodes.has(name));\n      }\n    }\n    usedNodes.add(node.name);\n\n    // Weights are dead end since we already have their values.\n    if (weightMap[node.name] != null) {\n      continue;\n    }\n    // This node is a dead end since it's one of the user-provided inputs.\n\n    if (inputNodeNames.indexOf(node.name) !== -1) {\n      continue;\n    }\n    if (node.inputs.length === 0) {\n      missingInputs.push(node.name);\n      continue;\n    }\n    node.inputs.forEach(input => {\n      // Don't add to the frontier if it is already there.\n      if (seen.has(input.name)) {\n        return;\n      }\n      seen.add(input.name);\n      frontier.push(input);\n    });\n  }\n  return {inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs};\n}\n\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(\n    graph: Graph, weightMap: NamedTensorsMap,\n    executionInfo: ExecutionInfo): Node[] {\n  const {usedNodes, inputs} = executionInfo;\n  const frontier: Node[] = [];\n  const inputNodes = Object.keys(inputs)\n                         .map(name => parseNodeName(name)[0])\n                         .map(name => graph.nodes[name]);\n  inputNodes.forEach(input => {\n    if (usedNodes.has(input.name)) {\n      frontier.push(input);\n    }\n  });\n  graph.weights.forEach(weight => {\n    if (usedNodes.has(weight.name)) {\n      frontier.push(weight);\n    }\n  });\n  const seen = new Set<string>();\n  const orderedNodes: Node[] = [];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    seen.add(node.name);\n    if (!weightMap[node.name]) {\n      orderedNodes.push(node);\n    }\n    node.children.forEach(child => {\n      if (!seen.has(child.name) && usedNodes.has(child.name) &&\n          child.inputs.every(input => seen.has(input.name))) {\n        frontier.push(child);\n      }\n    });\n  }\n  return orderedNodes;\n}\n\nconst CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'NextIteration'];\nconst DYNAMIC_SHAPE_OPS =\n    ['NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'Where'];\n\nexport function isControlFlow(node: Node) {\n  return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\n\nexport function isDynamicShape(node: Node) {\n  return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedTensorMap, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {ISignatureDef} from '../data/compiled_api';\nimport {NamedTensorsMap, TensorArrayMap, TensorInfo} from '../data/types';\nimport {getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt, parseNodeName} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\nimport {getExecutionSubgraph, getNodesInTopologicalOrder, isControlFlow} from './model_analysis';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor {\n  private compiledMap: Map<string, Node[]> = new Map();\n  private _weightMap: NamedTensorsMap = {};\n  private weightIds: number[];\n  private _signature: ISignatureDef;\n  private _inputs: Node[];\n  private _outputs: Node[];\n  private SEPERATOR = ',';\n  get weightMap(): NamedTensorsMap {\n    return this._weightMap;\n  }\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this.weightIds = [].concat.apply([], weightIds);\n    this._weightMap = weightMap;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this._inputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this._inputs.map(node => node.signatureKey || node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this._outputs.map(node => node.signatureKey || node.name);\n  }\n\n  constructor(private graph: Graph) {\n    this._outputs = graph.outputs;\n    this._inputs = graph.inputs;\n    this._signature = graph.signature;\n  }\n\n  private getCompilationKey(inputs: Node[], outputs: Node[]): string {\n    const sortedInputs = inputs.map(node => node.name).sort();\n    const sortedOutputs = outputs.map(node => node.name).sort();\n    return sortedInputs.join(this.SEPERATOR) + '--' +\n        sortedOutputs.join(this.SEPERATOR);\n  }\n\n  /**\n   * Compiles the inference graph and returns the minimal set of nodes that are\n   * required for execution, in the correct execution order.\n   */\n  private compile(inputs: NamedTensorMap, outputs: Node[]): Node[] {\n    const executionInfo = getExecutionSubgraph(inputs, outputs, this.weightMap);\n    const {missingInputs, dynamicNode, syncInputs} = executionInfo;\n    if (dynamicNode != null) {\n      throw new Error(\n          `This execution contains the node '${dynamicNode.name}', which has ` +\n          `the dynamic op '${dynamicNode.op}'. Please use ` +\n          `model.executeAsync() instead. Alternatively, to avoid the ` +\n          `dynamic ops, specify the inputs [${syncInputs}]`);\n    }\n\n    if (missingInputs.length > 0) {\n      const outNames = outputs.map(n => n.name);\n      const inNames = Object.keys(inputs);\n      throw new Error(\n          `Cannot compute the outputs [${outNames}] from the provided inputs ` +\n          `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n    }\n\n    return getNodesInTopologicalOrder(\n        this.graph, this.weightMap, executionInfo);\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  execute(inputs: NamedTensorMap, outputs: string[]): Tensor[] {\n    inputs = this.mapInputs(inputs);\n    const names = Object.keys(inputs).sort();\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    outputs = this.mapOutputs(outputs);\n    this.checkOutputs(outputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodes =\n        outputs.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n    // Do nothing if the compiled graph cache contains the input.\n    let orderedNodes = this.compiledMap.get(compilationKey);\n    if (orderedNodes == null) {\n      orderedNodes = this.compile(inputs, outputNodes);\n      this.compiledMap.set(compilationKey, orderedNodes);\n    }\n    const tensorArrayMap: TensorArrayMap = {};\n    return tidy(() => {\n      const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n      const tensorsMap: NamedTensorsMap = {...this.weightMap};\n      Object.keys(inputs).forEach(name => {\n        const [nodeName, index] = parseNodeName(name);\n        const tensors: Tensor[] = [];\n        tensors[index] = inputs[name];\n        tensorsMap[nodeName] = tensors;\n      });\n      const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n      const intermediateTensorConsumerCount: {[key: number]: number} = {};\n      for (let i = 0; i < orderedNodes.length; i++) {\n        const node = orderedNodes[i];\n        if (!tensorsMap[node.name]) {\n          const tensors = executeOp(node, tensorsMap, context) as Tensor[];\n          if (tensors instanceof Promise) {\n            throw new Error(\n                `The execution of the op '${node.op}' returned a promise. ` +\n                `Please use model.executeAsync() instead.`);\n          }\n          tensorsMap[node.name] = tensors;\n          this.checkTensorForDisposal(\n              node.name, node, tensorsMap, context, tensorsToKeep, outputs,\n              intermediateTensorConsumerCount);\n        }\n      }\n      return outputs.map(name => getTensor(name, tensorsMap, context));\n    });\n  }\n\n  private getFrozenTensorIds(tensorMap: NamedTensorsMap): Set<number> {\n    const ids = [].concat.apply(\n        [],\n        Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n    return new Set(ids);\n  }\n  private checkTensorForDisposal(\n      nodeName: string, node: Node, tensorMap: NamedTensorsMap,\n      context: ExecutionContext, tensorsToKeep: Set<number>,\n      outputNames: string[],\n      intermediateTensorConsumerCount: {[key: string]: number}) {\n    // Skip output nodes and any control flow nodes, since its dependency is\n    // tricky to track correctly.\n    if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n      return;\n    }\n\n    tensorMap[nodeName].forEach(tensor => {\n      if (tensor != null) {\n        intermediateTensorConsumerCount[tensor.id] =\n            (intermediateTensorConsumerCount[tensor.id] || 0) +\n            node.children.length;\n      }\n    });\n    node.inputs.forEach(input => {\n      // Skip any control flow nodes, since its dependency is tricky to track\n      // correctly.\n      if (input.category !== 'control') {\n        const tensors =\n            getTensorsForCurrentContenxt(input.name, tensorMap, context);\n        if (tensors != null) {\n          tensors.forEach(tensor => {\n            if (tensor && !tensorsToKeep.has(tensor.id)) {\n              const count = intermediateTensorConsumerCount[tensor.id];\n              if (count === 1) {\n                tensor.dispose();\n                delete intermediateTensorConsumerCount[tensor.id];\n              } else if (count != null) {\n                // only intermediate nodes has count set, inputs and weights are\n                // not.\n                intermediateTensorConsumerCount[tensor.id]--;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorMap, outputs: string[]):\n      Promise<Tensor[]> {\n    inputs = this.mapInputs(inputs);\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    outputs = this.mapOutputs(outputs);\n    this.checkOutputs(outputs);\n    const tensorArrayMap: TensorArrayMap = {};\n    const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensorMap =\n        await this.executeWithControlFlow(inputs, context, outputs);\n    const results = outputs.map(name => getTensor(name, tensorMap, context));\n\n    // dispose all the intermediate tensors\n    const outputIds = new Set<number>(results.map(t => t.id));\n    const inputIds =\n        new Set<number>(Object.keys(inputs).map(name => inputs[name].id));\n    Object.keys(tensorMap).forEach(key => {\n      const tensorArray = tensorMap[key];\n      tensorArray.forEach(tensor => {\n        if (tensor && !tensor.isDisposed && !outputIds.has(tensor.id) &&\n            !inputIds.has(tensor.id) &&\n            this.weightIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n    });\n    return results;\n  }\n\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorMap, context: ExecutionContext,\n      outputNames: string[]): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodes =\n        outputNames.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const {usedNodes, missingInputs, dynamicNode, syncInputs} =\n        getExecutionSubgraph(inputs, outputNodes, this.weightMap);\n\n    const stack: NodeWithContexts[] =\n        [...inputNodes, ...this.graph.weights].map(node => {\n          return {node, contexts: context.currentContext};\n        });\n    const tensorsMap: NamedTensorsMap = {...this.weightMap};\n    Object.keys(inputs).forEach(name => {\n      const [nodeName, index] = parseNodeName(name);\n      const tensors: Tensor[] = [];\n      tensors[index] = inputs[name];\n      tensorsMap[nodeName] = tensors;\n    });\n    const intermediateTensorConsumerCount: {[key: number]: number} = {};\n    const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises = this.processStack(\n          inputNodes, stack, context, tensorsMap, added, tensorsToKeep,\n          outputNames, intermediateTensorConsumerCount, usedNodes);\n      await Promise.all(promises);\n    }\n    if (dynamicNode == null) {\n      console.warn(\n          `This model execution did not contain any nodes with control flow ` +\n          `or dynamic output shapes. You can use model.execute() instead.`);\n    }\n    const missingOutputs =\n        outputNodes\n            .filter(\n                node => !isControlFlow(node) &&\n                    !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n    if (missingOutputs.length > 0) {\n      let alternativeMsg = '';\n      if (dynamicNode != null) {\n        alternativeMsg =\n            `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n            `and specify the inputs [${syncInputs}]`;\n      }\n      throw new Error(\n          `Cannot compute the outputs [${missingOutputs}] from the provided ` +\n          `inputs [${names}]. Consider providing the following inputs: ` +\n          `[${missingInputs}]. ${alternativeMsg}`);\n    }\n    return tensorsMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      tensorsToKeep: Set<number>, outputNames: string[],\n      intermediateTensorConsumerCount: {[key: number]: number},\n      usedNodes: Set<string>) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'Enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not provided as input nodes.\n      if (inputNodes.indexOf(item.node) === -1) {\n        const tensors = executeOp(item.node, tensorMap, context);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n        const currentContext = context.currentContext;\n        if (tensors instanceof Promise) {\n          promises.push(tensors.then(t => {\n            tensorMap[nodeName] = t;\n            context.currentContext = currentContext;\n            this.checkTensorForDisposal(\n                nodeName, item.node, tensorMap, context, tensorsToKeep,\n                outputNames, intermediateTensorConsumerCount);\n            this.processChildNodes(\n                item.node, stack, context, tensorMap, added, usedNodes);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors;\n          this.checkTensorForDisposal(\n              nodeName, item.node, tensorMap, context, tensorsToKeep,\n              outputNames, intermediateTensorConsumerCount);\n          this.processChildNodes(\n              item.node, stack, context, tensorMap, added, usedNodes);\n        }\n      } else {\n        this.processChildNodes(\n            item.node, stack, context, tensorMap, added, usedNodes);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      usedNodes: Set<string>) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (added[nodeName] || !usedNodes.has(childNode.name)) {\n        return;\n      }\n      // Merge op can be pushed if any of its inputs has value.\n      if (childNode.op === 'Merge') {\n        if (childNode.inputNames.some(name => {\n              return !!getTensor(name, tensorMap, context);\n            })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      } else  // Otherwise all inputs must to have value.\n          if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n        added[nodeName] = true;\n        stack.push({contexts: context.currentContext, node: childNode});\n      }\n    });\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(inputs: NamedTensorMap) {\n    Object.keys(inputs).forEach(name => {\n      const input = inputs[name];\n      const [nodeName, ] = parseNodeName(name);\n      const node = this.graph.nodes[nodeName];\n      if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n        const shape = node.attrParams['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            () => `The shape of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be [${shape}], but was ` +\n                `[${input.shape}]`);\n      }\n      if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n        util.assert(\n            input.dtype === node.attrParams['dtype'].value as string,\n            () => `The dtype of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be ` +\n                `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private mapInputs(inputs: NamedTensorMap) {\n    const result: NamedTensorMap = {};\n    for (const inputName in inputs) {\n      if (this._signature != null && this._signature.inputs != null &&\n          this._signature.inputs[inputName] != null) {\n        const tensor = this._signature.inputs[inputName];\n        result[tensor.name] = inputs[inputName];\n      } else {\n        result[inputName] = inputs[inputName];\n      }\n    }\n    return result;\n  }\n\n  private checkInputs(inputs: NamedTensorMap) {\n    const notInGraph = Object.keys(inputs).filter(name => {\n      const [nodeName] = parseNodeName(name);\n      return this.graph.nodes[nodeName] == null;\n    });\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] that are not part of graph`);\n    }\n  }\n\n  private mapOutputs(outputs: string[]) {\n    return outputs.map(name => {\n      if (this._signature != null && this._signature.outputs != null &&\n          this._signature.outputs[name] != null) {\n        const tensor = this._signature.outputs[name];\n        return tensor.name;\n      }\n      return name;\n    }, {});\n  }\n  private checkOutputs(outputs: string[]): void {\n    outputs.forEach(name => {\n      const [normalizedName] = parseNodeName(name);\n      if (!this.graph.nodes[normalizedName]) {\n        throw new Error(`The output '${name}' is not found in the graph`);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {InferenceModel, io, ModelPredictConfig, NamedTensorMap, Tensor} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\n\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph of built from\n * SavedModel GraphDef and allows inference exeuction.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n */\n/** @doc {heading: 'Models', subheading: 'Classes'} */\nexport class GraphModel implements InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: io.IOHandler;\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  /**\n   * @param modelUrl url for the model, or an `io.IOHandler`.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   * @param onProgress Optional, progress callback function, fired periodically\n   * before the load is completed.\n   */\n  constructor(\n      private modelUrl: string|io.IOHandler,\n      private loadOptions: io.LoadOptions = {}) {\n    if (loadOptions == null) {\n      this.loadOptions = {};\n    }\n  }\n\n  private findIOHandler() {\n    const path = this.modelUrl;\n    if ((path as io.IOHandler).load != null) {\n      // Path is an IO Handler.\n      this.handler = path as io.IOHandler;\n    } else if (this.loadOptions.requestInit != null) {\n      this.handler = io.browserHTTPRequest(path as string, this.loadOptions);\n    } else {\n      const handlers =\n          io.getLoadHandlers(path as string, this.loadOptions.onProgress);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(io.browserHTTPRequest(path as string, this.loadOptions));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0];\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  async load(): Promise<boolean> {\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n    const artifacts = await this.handler.load();\n    const graph = artifacts.modelTopology as tensorflow.IGraphDef;\n    let signature = {};\n    if (artifacts.userDefinedMetadata != null) {\n      signature =  // tslint:disable-next-line:no-any\n          (artifacts.userDefinedMetadata as any).signature as\n          tensorflow.ISignatureDef;\n    }\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap =\n        io.decodeWeights(artifacts.weightData, artifacts.weightSpecs);\n    this.executor = new GraphExecutor(\n        OperationMapper.Instance.transformGraph(graph, signature));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    return true;\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link GraphModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    model.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size and\n   * output node names. Currently the batch size option is ignored for graph\n   * model.\n   *\n   * @returns Inference result tensors. The output would be single `tf.Tensor`\n   * if model has single output node, otherwise Tensor[] or NamedTensorMap[]\n   * will be returned for model with multiple outputs.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  predict(inputs: Tensor|Tensor[]|NamedTensorMap, config?: ModelPredictConfig):\n      Tensor|Tensor[]|NamedTensorMap {\n    return this.execute(inputs, this.outputNodes);\n  }\n\n  private normalizeInputs(inputs: Tensor|Tensor[]|\n                          NamedTensorMap): NamedTensorMap {\n    if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n      // The input is already a NamedTensorMap.\n      return inputs;\n    }\n    inputs = Array.isArray(inputs) ? inputs : [inputs];\n    if (inputs.length !== this.inputNodes.length) {\n      throw new Error(\n          'Input tensor count mismatch,' +\n          `the graph model has ${this.inputNodes.length} placeholders, ` +\n          `while there are ${inputs.length} input tensors.`);\n    }\n    return this.inputNodes.reduce((map, inputName, i) => {\n      map[inputName] = (inputs as Tensor[])[i];\n      return map;\n    }, {} as NamedTensorMap);\n  }\n\n  private normalizeOutputs(outputs: string|string[]): string[] {\n    outputs = outputs || this.outputNodes;\n    return !Array.isArray(outputs) ? [outputs] : outputs;\n  }\n\n  /**\n   * Executes inference for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  execute(inputs: Tensor|Tensor[]|NamedTensorMap, outputs?: string|string[]):\n      Tensor|Tensor[] {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = this.executor.execute(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  async executeAsync(\n      inputs: Tensor|Tensor[]|NamedTensorMap,\n      outputs?: string|string[]): Promise<Tensor|Tensor[]> {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = await this.executor.executeAsync(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n\n  private convertTensorMapToTensorsMap(map: NamedTensorMap): NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  dispose() {\n    this.executor.dispose();\n  }\n}\n\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction with\n * a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send credentials\n *    and custom headers.\n */\n/** @doc {heading: 'Models', subheading: 'Loading'} */\nexport async function loadGraphModel(\n    modelUrl: string|io.IOHandler,\n    options: io.LoadOptions = {}): Promise<GraphModel> {\n  if (modelUrl == null) {\n    throw new Error(\n        'modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n        'or an IOHandler that loads the model');\n  }\n  if (options == null) {\n    options = {};\n  }\n\n  if (options.fromTFHub) {\n    if ((modelUrl as io.IOHandler).load == null) {\n      if (!(modelUrl as string).endsWith('/')) {\n        modelUrl = (modelUrl as string) + '/';\n      }\n      modelUrl = `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n    }\n  }\n  const model = new GraphModel(modelUrl, options);\n  await model.load();\n  return model;\n}\n","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Import webgl flags.\nrequire(\"./flags_webgl\");\nvar device_util = require(\"../../device_util\");\nvar engine_1 = require(\"../../engine\");\nvar environment_1 = require(\"../../environment\");\nvar globals_1 = require(\"../../globals\");\nvar log_1 = require(\"../../log\");\nvar array_ops_1 = require(\"../../ops/array_ops\");\nvar array_ops_util = require(\"../../ops/array_ops_util\");\nvar axis_util = require(\"../../ops/axis_util\");\nvar complex_ops_1 = require(\"../../ops/complex_ops\");\nvar concat_util_1 = require(\"../../ops/concat_util\");\nvar gather_nd_util = require(\"../../ops/gather_nd_util\");\nvar reduce_util = require(\"../../ops/reduce_util\");\nvar scatter_nd_util = require(\"../../ops/scatter_nd_util\");\nvar segment_util = require(\"../../ops/segment_util\");\nvar slice_util = require(\"../../ops/slice_util\");\nvar softmax_1 = require(\"../../ops/softmax\");\nvar tensor_ops_1 = require(\"../../ops/tensor_ops\");\nvar types_1 = require(\"../../types\");\nvar util = require(\"../../util\");\nvar util_1 = require(\"../../util\");\nvar backend_1 = require(\"../backend\");\nvar backend_util = require(\"../backend_util\");\nvar complex_util_1 = require(\"../complex_util\");\nvar non_max_suppression_impl_1 = require(\"../non_max_suppression_impl\");\nvar split_shared_1 = require(\"../split_shared\");\nvar tile_impl_1 = require(\"../tile_impl\");\nvar topk_impl_1 = require(\"../topk_impl\");\nvar where_impl_1 = require(\"../where_impl\");\nvar addn_gpu_1 = require(\"./addn_gpu\");\nvar addn_packed_gpu_1 = require(\"./addn_packed_gpu\");\nvar argminmax_gpu_1 = require(\"./argminmax_gpu\");\nvar argminmax_packed_gpu_1 = require(\"./argminmax_packed_gpu\");\nvar avg_pool_backprop_gpu_1 = require(\"./avg_pool_backprop_gpu\");\nvar batchnorm_gpu_1 = require(\"./batchnorm_gpu\");\nvar batchnorm_packed_gpu_1 = require(\"./batchnorm_packed_gpu\");\nvar binaryop_complex_gpu = require(\"./binaryop_complex_gpu\");\nvar binaryop_complex_gpu_1 = require(\"./binaryop_complex_gpu\");\nvar binaryop_gpu = require(\"./binaryop_gpu\");\nvar binaryop_gpu_1 = require(\"./binaryop_gpu\");\nvar binaryop_packed_gpu = require(\"./binaryop_packed_gpu\");\nvar binaryop_packed_gpu_1 = require(\"./binaryop_packed_gpu\");\nvar canvas_util_1 = require(\"./canvas_util\");\nvar clip_gpu_1 = require(\"./clip_gpu\");\nvar clip_packed_gpu_1 = require(\"./clip_packed_gpu\");\nvar complex_abs_gpu_1 = require(\"./complex_abs_gpu\");\nvar concat_gpu_1 = require(\"./concat_gpu\");\nvar concat_packed_gpu_1 = require(\"./concat_packed_gpu\");\nvar conv_backprop_gpu_1 = require(\"./conv_backprop_gpu\");\nvar conv_backprop_gpu_depthwise_1 = require(\"./conv_backprop_gpu_depthwise\");\nvar conv_gpu_1 = require(\"./conv_gpu\");\nvar conv_gpu_depthwise_1 = require(\"./conv_gpu_depthwise\");\nvar conv_packed_gpu_depthwise_1 = require(\"./conv_packed_gpu_depthwise\");\nvar crop_and_resize_gpu_1 = require(\"./crop_and_resize_gpu\");\nvar cumsum_gpu_1 = require(\"./cumsum_gpu\");\nvar decode_matrix_gpu_1 = require(\"./decode_matrix_gpu\");\nvar decode_matrix_packed_gpu_1 = require(\"./decode_matrix_packed_gpu\");\nvar depth_to_space_gpu_1 = require(\"./depth_to_space_gpu\");\nvar diag_gpu_1 = require(\"./diag_gpu\");\nvar encode_float_gpu_1 = require(\"./encode_float_gpu\");\nvar encode_float_packed_gpu_1 = require(\"./encode_float_packed_gpu\");\nvar encode_matrix_gpu_1 = require(\"./encode_matrix_gpu\");\nvar encode_matrix_packed_gpu_1 = require(\"./encode_matrix_packed_gpu\");\nvar fft_gpu = require(\"./fft_gpu\");\nvar fft_gpu_1 = require(\"./fft_gpu\");\nvar fill_gpu_1 = require(\"./fill_gpu\");\nvar gather_gpu_1 = require(\"./gather_gpu\");\nvar gather_nd_gpu_1 = require(\"./gather_nd_gpu\");\nvar gpgpu_context_1 = require(\"./gpgpu_context\");\nvar gpgpu_math = require(\"./gpgpu_math\");\nvar im2col_packed_gpu_1 = require(\"./im2col_packed_gpu\");\nvar lrn_gpu_1 = require(\"./lrn_gpu\");\nvar lrn_grad_gpu_1 = require(\"./lrn_grad_gpu\");\nvar lrn_packed_gpu_1 = require(\"./lrn_packed_gpu\");\nvar max_pool_backprop_gpu_1 = require(\"./max_pool_backprop_gpu\");\nvar mulmat_packed_gpu_1 = require(\"./mulmat_packed_gpu\");\nvar multinomial_gpu_1 = require(\"./multinomial_gpu\");\nvar onehot_gpu_1 = require(\"./onehot_gpu\");\nvar pack_gpu_1 = require(\"./pack_gpu\");\nvar pad_gpu_1 = require(\"./pad_gpu\");\nvar pad_packed_gpu_1 = require(\"./pad_packed_gpu\");\nvar pool_gpu_1 = require(\"./pool_gpu\");\nvar reduce_gpu_1 = require(\"./reduce_gpu\");\nvar reshape_packed_gpu_1 = require(\"./reshape_packed_gpu\");\nvar resize_bilinear_backprop_gpu_1 = require(\"./resize_bilinear_backprop_gpu\");\nvar resize_bilinear_gpu_1 = require(\"./resize_bilinear_gpu\");\nvar resize_bilinear_packed_gpu_1 = require(\"./resize_bilinear_packed_gpu\");\nvar resize_nearest_neighbor_backprop_gpu_1 = require(\"./resize_nearest_neighbor_backprop_gpu\");\nvar resize_nearest_neighbor_gpu_1 = require(\"./resize_nearest_neighbor_gpu\");\nvar reverse_gpu_1 = require(\"./reverse_gpu\");\nvar reverse_packed_gpu_1 = require(\"./reverse_packed_gpu\");\nvar scatter_gpu_1 = require(\"./scatter_gpu\");\nvar segment_gpu_1 = require(\"./segment_gpu\");\nvar select_gpu_1 = require(\"./select_gpu\");\nvar slice_gpu_1 = require(\"./slice_gpu\");\nvar slice_packed_gpu_1 = require(\"./slice_packed_gpu\");\nvar strided_slice_gpu_1 = require(\"./strided_slice_gpu\");\nvar tex_util = require(\"./tex_util\");\nvar tex_util_1 = require(\"./tex_util\");\nvar texture_manager_1 = require(\"./texture_manager\");\nvar tile_gpu_1 = require(\"./tile_gpu\");\nvar transpose_gpu_1 = require(\"./transpose_gpu\");\nvar transpose_packed_gpu_1 = require(\"./transpose_packed_gpu\");\nvar unary_op = require(\"./unaryop_gpu\");\nvar unaryop_gpu_1 = require(\"./unaryop_gpu\");\nvar unary_packed_op = require(\"./unaryop_packed_gpu\");\nvar unaryop_packed_gpu_1 = require(\"./unaryop_packed_gpu\");\nvar unpack_gpu_1 = require(\"./unpack_gpu\");\nvar webgl_util = require(\"./webgl_util\");\nvar binaryCaches = {};\nfunction getBinaryCache(webGLVersion) {\n    if (webGLVersion in binaryCaches) {\n        return binaryCaches[webGLVersion];\n    }\n    binaryCaches[webGLVersion] = {};\n    return binaryCaches[webGLVersion];\n}\nfunction mapActivationToShaderProgram(activation, packed) {\n    if (packed === void 0) { packed = false; }\n    if (activation === 'linear') {\n        if (packed) {\n            return unary_packed_op.LINEAR;\n        }\n        return unary_op.LINEAR;\n    }\n    else if (activation === 'relu') {\n        if (packed) {\n            return unary_packed_op.RELU;\n        }\n        return unary_op.RELU;\n    }\n    else if (activation === 'elu') {\n        if (packed) {\n            return unary_packed_op.ELU;\n        }\n        return unary_op.ELU;\n    }\n    else if (activation === 'relu6') {\n        if (packed) {\n            return unary_packed_op.RELU6;\n        }\n        return unary_op.RELU6;\n    }\n    else if (activation === 'prelu') {\n        if (packed) {\n            return binaryop_packed_gpu.PRELU;\n        }\n        return binaryop_gpu.PRELU;\n    }\n    throw new Error(\"Activation \" + activation + \" has not been implemented for the WebGL backend.\");\n}\n// Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\nvar CPU_HANDOFF_SIZE_THRESHOLD = 128;\n// Empirically determined constant used to decide the number of MB on GPU\n// before we warn about high memory use. The MB are this constant * screen area\n// * dpi / 1024 / 1024.\nvar BEFORE_PAGING_CONSTANT = 600;\nfunction numMBBeforeWarning() {\n    if (environment_1.env().global.screen == null) {\n        return 1024; // 1 GB.\n    }\n    return (environment_1.env().global.screen.height * environment_1.env().global.screen.width *\n        window.devicePixelRatio) *\n        BEFORE_PAGING_CONSTANT / 1024 / 1024;\n}\n// Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\nexports.MATMUL_SHARED_DIM_THRESHOLD = 1000;\nvar MathBackendWebGL = /** @class */ (function (_super) {\n    __extends(MathBackendWebGL, _super);\n    function MathBackendWebGL(gpgpu) {\n        var _this = _super.call(this) || this;\n        // Maps data ids that have a pending read operation, to list of subscribers.\n        _this.pendingRead = new WeakMap();\n        // List of data ids that are scheduled for disposal, but are waiting on a\n        // pending read operation.\n        _this.pendingDisposal = new WeakSet();\n        // Used to count the number of 'shallow' sliced tensors that point to the\n        // same data id.\n        _this.dataRefCount = new WeakMap();\n        _this.numBytesInGPU = 0;\n        // Accumulated time spent (including blocking) in uploading data to webgl.\n        _this.uploadWaitMs = 0;\n        // Accumulated time spent (including blocking in downloading data from webgl.\n        _this.downloadWaitMs = 0;\n        _this.warnedAboutMemory = false;\n        _this.pendingDeletes = 0;\n        _this.disposed = false;\n        if (!environment_1.env().getBool('HAS_WEBGL')) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            var gl = canvas_util_1.getWebGLContext(environment_1.env().getNumber('WEBGL_VERSION'));\n            _this.binaryCache = getBinaryCache(environment_1.env().getNumber('WEBGL_VERSION'));\n            _this.gpgpu = new gpgpu_context_1.GPGPUContext(gl);\n            _this.canvas = gl.canvas;\n            _this.gpgpuCreatedLocally = true;\n        }\n        else {\n            _this.gpgpu = gpgpu;\n            _this.binaryCache = {};\n            _this.gpgpuCreatedLocally = false;\n            _this.canvas = gpgpu.gl.canvas;\n        }\n        _this.textureManager = new texture_manager_1.TextureManager(_this.gpgpu);\n        _this.numMBBeforeWarning = numMBBeforeWarning();\n        _this.texData = new backend_1.DataStorage(_this, engine_1.ENGINE);\n        return _this;\n    }\n    MathBackendWebGL.prototype.numDataIds = function () {\n        return this.texData.numDataIds() +\n            (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) -\n            this.pendingDeletes;\n    };\n    MathBackendWebGL.prototype.write = function (values, shape, dtype) {\n        if (environment_1.env().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64' && values != null) {\n            throw new Error(\"Cannot write to a complex64 dtype. \" +\n                \"Please use tf.complex(real, imag).\");\n        }\n        var dataId = {};\n        this.texData.set(dataId, { shape: shape, dtype: dtype, values: values, usage: tex_util_1.TextureUsage.UPLOAD });\n        return dataId;\n    };\n    MathBackendWebGL.prototype.move = function (dataId, values, shape, dtype) {\n        if (environment_1.env().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(\"Cannot write to a complex64 dtype. \" +\n                \"Please use tf.complex(real, imag).\");\n        }\n        this.texData.set(dataId, { shape: shape, dtype: dtype, values: values, usage: tex_util_1.TextureUsage.UPLOAD });\n    };\n    MathBackendWebGL.prototype.readSync = function (dataId) {\n        var texData = this.texData.get(dataId);\n        var values = texData.values, dtype = texData.dtype, complexTensors = texData.complexTensors, slice = texData.slice, shape = texData.shape, isPacked = texData.isPacked;\n        if (slice != null) {\n            var program = void 0;\n            if (isPacked) {\n                program = new unaryop_packed_gpu_1.UnaryOpPackedProgram(shape, unary_op.CLONE);\n            }\n            else {\n                program = new unaryop_gpu_1.UnaryOpProgram(shape, unary_op.CLONE);\n            }\n            var res = this.runWebGLProgram(program, [{ dataId: dataId, shape: shape, dtype: dtype }], dtype);\n            var data = this.readSync(res.dataId);\n            this.disposeData(res.dataId);\n            return data;\n        }\n        if (values != null) {\n            return this.convertAndCacheOnCPU(dataId);\n        }\n        if (dtype === 'string') {\n            return values;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = util.now();\n        }\n        var result;\n        if (dtype === 'complex64') {\n            var realValues = complexTensors.real.dataSync();\n            var imagValues = complexTensors.imag.dataSync();\n            result = complex_util_1.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else {\n            result = this.getValuesFromTexture(dataId);\n        }\n        if (shouldTimeProgram) {\n            this.downloadWaitMs += util.now() - start;\n        }\n        return this.convertAndCacheOnCPU(dataId, result);\n    };\n    MathBackendWebGL.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var subscribers_1, texData, values, shape, slice, dtype, complexTensors, isPacked, program, res, data, buffer, tmpDownloadTarget, tmpData, vals, ps, realValues, imagValues, size, dTypeVals, subscribers;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (this.pendingRead.has(dataId)) {\n                            subscribers_1 = this.pendingRead.get(dataId);\n                            return [2 /*return*/, new Promise(function (resolve) { return subscribers_1.push(resolve); })];\n                        }\n                        texData = this.texData.get(dataId);\n                        values = texData.values, shape = texData.shape, slice = texData.slice, dtype = texData.dtype, complexTensors = texData.complexTensors, isPacked = texData.isPacked;\n                        if (slice != null) {\n                            program = void 0;\n                            if (isPacked) {\n                                program = new unaryop_packed_gpu_1.UnaryOpPackedProgram(shape, unary_op.CLONE);\n                            }\n                            else {\n                                program = new unaryop_gpu_1.UnaryOpProgram(shape, unary_op.CLONE);\n                            }\n                            res = this.runWebGLProgram(program, [{ dataId: dataId, shape: shape, dtype: dtype }], dtype);\n                            data = this.read(res.dataId);\n                            this.disposeData(res.dataId);\n                            return [2 /*return*/, data];\n                        }\n                        if (values != null) {\n                            return [2 /*return*/, this.convertAndCacheOnCPU(dataId)];\n                        }\n                        if (!environment_1.env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED') &&\n                            environment_1.env().getNumber('WEBGL_VERSION') === 2) {\n                            throw new Error(\"tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and \" +\n                                \"WEBGL_VERSION=2 not yet supported.\");\n                        }\n                        buffer = null;\n                        if (dtype !== 'complex64' && environment_1.env().get('WEBGL_BUFFER_SUPPORTED')) {\n                            // Possibly copy the texture into a buffer before inserting a fence.\n                            tmpDownloadTarget = this.decode(dataId);\n                            tmpData = this.texData.get(tmpDownloadTarget.dataId);\n                            buffer = (_a = this.gpgpu).createBufferFromTexture.apply(_a, [tmpData.texture].concat(tex_util.getDenseTexShape(shape)));\n                        }\n                        this.pendingRead.set(dataId, []);\n                        if (!(dtype !== 'complex64')) return [3 /*break*/, 2];\n                        // Create a fence and wait for it to resolve.\n                        return [4 /*yield*/, this.gpgpu.createAndWaitForFence()];\n                    case 1:\n                        // Create a fence and wait for it to resolve.\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        if (!(dtype === 'complex64')) return [3 /*break*/, 4];\n                        return [4 /*yield*/, Promise.all([complexTensors.real.data(), complexTensors.imag.data()])];\n                    case 3:\n                        ps = _b.sent();\n                        realValues = ps[0];\n                        imagValues = ps[1];\n                        vals = complex_util_1.mergeRealAndImagArrays(realValues, imagValues);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        if (buffer == null) {\n                            vals = this.getValuesFromTexture(dataId);\n                        }\n                        else {\n                            size = util.sizeFromShape(shape);\n                            vals = this.gpgpu.downloadFloat32MatrixFromBuffer(buffer, size);\n                        }\n                        _b.label = 5;\n                    case 5:\n                        if (tmpDownloadTarget != null) {\n                            this.disposeData(tmpDownloadTarget.dataId);\n                        }\n                        dTypeVals = this.convertAndCacheOnCPU(dataId, vals);\n                        subscribers = this.pendingRead.get(dataId);\n                        this.pendingRead.delete(dataId);\n                        // Notify all pending reads.\n                        subscribers.forEach(function (resolve) { return resolve(dTypeVals); });\n                        if (this.pendingDisposal.has(dataId)) {\n                            this.pendingDisposal.delete(dataId);\n                            this.disposeData(dataId);\n                            this.pendingDeletes--;\n                        }\n                        return [2 /*return*/, dTypeVals];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.checkNumericalProblems = function (values) {\n        if (values == null) {\n            return;\n        }\n        for (var i = 0; i < values.length; i++) {\n            var num = values[i];\n            if (!webgl_util.canBeRepresented(num)) {\n                if (environment_1.env().getBool('WEBGL_RENDER_FLOAT32_CAPABLE')) {\n                    throw Error(\"The value \" + num + \" cannot be represented with your \" +\n                        \"current settings. Consider enabling float32 rendering: \" +\n                        \"'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'\");\n                }\n                throw Error(\"The value \" + num + \" cannot be represented on this device.\");\n            }\n        }\n    };\n    MathBackendWebGL.prototype.getValuesFromTexture = function (dataId) {\n        var _a;\n        var _b = this.texData.get(dataId), shape = _b.shape, dtype = _b.dtype, isPacked = _b.isPacked;\n        var size = util.sizeFromShape(shape);\n        if (environment_1.env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED')) {\n            var tmpTarget = this.decode(dataId);\n            var tmpData_1 = this.texData.get(tmpTarget.dataId);\n            var vals_1 = (_a = this.gpgpu).downloadMatrixFromPackedTexture.apply(_a, [tmpData_1.texture].concat(tex_util.getDenseTexShape(shape))).subarray(0, size);\n            this.disposeData(tmpTarget.dataId);\n            return vals_1;\n        }\n        var shouldUsePackedProgram = environment_1.env().getBool('WEBGL_PACK') && isPacked === true;\n        var outputShape = shouldUsePackedProgram ? webgl_util.getShapeAs3D(shape) : shape;\n        var program = shouldUsePackedProgram ?\n            new encode_float_packed_gpu_1.EncodeFloatPackedProgram(outputShape) :\n            new encode_float_gpu_1.EncodeFloatProgram(outputShape);\n        var output = this.runWebGLProgram(program, [{ shape: outputShape, dtype: dtype, dataId: dataId }], 'float32');\n        var tmpData = this.texData.get(output.dataId);\n        var vals = this.gpgpu\n            .downloadByteEncodedFloatMatrixFromOutputTexture(tmpData.texture, tmpData.texShape[0], tmpData.texShape[1])\n            .subarray(0, size);\n        this.disposeData(output.dataId);\n        return vals;\n    };\n    MathBackendWebGL.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldActiveTimers, newActiveTimers, outerMostTime, flattenedActiveTimerQueries, flattenedActiveTimerNames, kernelMs, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        oldActiveTimers = this.activeTimers;\n                        newActiveTimers = [];\n                        outerMostTime = false;\n                        if (this.programTimersStack == null) {\n                            this.programTimersStack = newActiveTimers;\n                            outerMostTime = true;\n                        }\n                        else {\n                            this.activeTimers.push(newActiveTimers);\n                        }\n                        this.activeTimers = newActiveTimers;\n                        f();\n                        flattenedActiveTimerQueries = util.flatten(this.activeTimers.map(function (d) { return d.query; }))\n                            .filter(function (d) { return d != null; });\n                        flattenedActiveTimerNames = util.flatten(this.activeTimers.map(function (d) { return d.name; }))\n                            .filter(function (d) { return d != null; });\n                        this.activeTimers = oldActiveTimers;\n                        if (outerMostTime) {\n                            this.programTimersStack = null;\n                        }\n                        return [4 /*yield*/, Promise.all(flattenedActiveTimerQueries)];\n                    case 1:\n                        kernelMs = _a.sent();\n                        res = {\n                            uploadWaitMs: this.uploadWaitMs,\n                            downloadWaitMs: this.downloadWaitMs,\n                            kernelMs: util.sum(kernelMs),\n                            getExtraProfileInfo: function () {\n                                return kernelMs.map(function (d, i) { return ({ name: flattenedActiveTimerNames[i], ms: d }); })\n                                    .map(function (d) { return d.name + \": \" + d.ms; })\n                                    .join(', ');\n                            },\n                            wallMs: null // will be filled by the engine\n                        };\n                        this.uploadWaitMs = 0;\n                        this.downloadWaitMs = 0;\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    MathBackendWebGL.prototype.memory = function () {\n        return { unreliable: false, numBytesInGPU: this.numBytesInGPU };\n    };\n    MathBackendWebGL.prototype.startTimer = function () {\n        if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            return this.gpgpu.beginQuery();\n        }\n        return { startMs: util.now(), endMs: null };\n    };\n    MathBackendWebGL.prototype.endTimer = function (query) {\n        if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            this.gpgpu.endQuery();\n            return query;\n        }\n        query.endMs = util.now();\n        return query;\n    };\n    MathBackendWebGL.prototype.getQueryTime = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var timerQuery;\n            return __generator(this, function (_a) {\n                if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n                    return [2 /*return*/, this.gpgpu.waitForQueryAndGetTime(query)];\n                }\n                timerQuery = query;\n                return [2 /*return*/, timerQuery.endMs - timerQuery.startMs];\n            });\n        });\n    };\n    MathBackendWebGL.prototype.disposeData = function (dataId) {\n        if (this.pendingDisposal.has(dataId)) {\n            return;\n        }\n        if (this.pendingRead.has(dataId)) {\n            this.pendingDisposal.add(dataId);\n            this.pendingDeletes++;\n            return;\n        }\n        // No-op if already disposed.\n        if (!this.texData.has(dataId)) {\n            return;\n        }\n        this.releaseGPUData(dataId);\n        var complexTensors = this.texData.get(dataId).complexTensors;\n        if (complexTensors != null) {\n            complexTensors.real.dispose();\n            complexTensors.imag.dispose();\n        }\n        this.texData.delete(dataId);\n    };\n    MathBackendWebGL.prototype.releaseGPUData = function (dataId) {\n        var _a = this.texData.get(dataId), texture = _a.texture, dtype = _a.dtype, texShape = _a.texShape, usage = _a.usage, isPacked = _a.isPacked, slice = _a.slice;\n        var key = slice && slice.origDataId || dataId;\n        var refCount = this.dataRefCount.get(key);\n        if (refCount > 1) {\n            this.dataRefCount.set(key, refCount - 1);\n        }\n        else {\n            this.dataRefCount.delete(key);\n            if (texture != null) {\n                this.numBytesInGPU -= this.computeBytes(texShape, dtype);\n                this.textureManager.releaseTexture(texture, texShape, usage, isPacked);\n            }\n        }\n        var texData = this.texData.get(dataId);\n        texData.texture = null;\n        texData.texShape = null;\n        texData.isPacked = false;\n        texData.slice = null;\n    };\n    MathBackendWebGL.prototype.getTexture = function (dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId).texture;\n    };\n    /**\n     * Returns internal information for the specific data bucket. Used in unit\n     * tests.\n     */\n    MathBackendWebGL.prototype.getDataInfo = function (dataId) {\n        return this.texData.get(dataId);\n    };\n    MathBackendWebGL.prototype.getCPUBackend = function () {\n        if (!environment_1.env().getBool('WEBGL_CPU_FORWARD')) {\n            return null;\n        }\n        if (this.cpuBackend == null) {\n            this.cpuBackend = engine_1.ENGINE.findBackend('cpu');\n        }\n        return this.cpuBackend;\n    };\n    /*\n    Tests whether all the inputs to an op are small and on the CPU. This heuristic\n    determines when it would be faster to execute a kernel on the CPU. WebGL\n    kernels opt into running this check and forwarding when appropriate.\n    TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more\n    sustainable strategy for optimizing backend execution of ops.\n     */\n    MathBackendWebGL.prototype.shouldExecuteOnCPU = function (inputs, sizeThreshold) {\n        var _this = this;\n        if (sizeThreshold === void 0) { sizeThreshold = CPU_HANDOFF_SIZE_THRESHOLD; }\n        return this.getCPUBackend() != null &&\n            inputs.every(function (input) { return _this.texData.get(input.dataId).texture == null &&\n                input.size < sizeThreshold; });\n    };\n    MathBackendWebGL.prototype.getGPGPUContext = function () {\n        return this.gpgpu;\n    };\n    MathBackendWebGL.prototype.complex = function (real, imag) {\n        var result = this.makeOutput(real.shape, 'complex64');\n        var resultData = this.texData.get(result.dataId);\n        // The backend owns the reference to the underlying real and imaginary\n        // clones. These will explicitly get disposed when the complex tensor is\n        // disposed.\n        resultData.complexTensors = {\n            real: engine_1.ENGINE.keep(real.clone()),\n            imag: engine_1.ENGINE.keep(imag.clone())\n        };\n        return result;\n    };\n    MathBackendWebGL.prototype.real = function (input) {\n        var resultData = this.texData.get(input.dataId);\n        return resultData.complexTensors.real.clone();\n    };\n    MathBackendWebGL.prototype.imag = function (input) {\n        var resultData = this.texData.get(input.dataId);\n        return resultData.complexTensors.imag.clone();\n    };\n    MathBackendWebGL.prototype.slice = function (x, begin, size) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.slice(x, begin, size);\n        }\n        // Short-circuit computation if the slice is zero-sized.\n        if (util.sizeFromShape(size) === 0) {\n            return tensor_ops_1.tensor([], size, x.dtype);\n        }\n        var isPacked = this.texData.get(x.dataId).isPacked;\n        var isContinous = slice_util.isSliceContinous(x.shape, begin, size);\n        if (isPacked || !isContinous) {\n            var program = environment_1.env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n                new slice_packed_gpu_1.SlicePackedProgram(size) :\n                new slice_gpu_1.SliceProgram(size);\n            var customSetup = program.getCustomSetupFunc(begin);\n            return this.compileAndRun(program, [x], null, customSetup);\n        }\n        this.uploadToGPU(x.dataId);\n        return this.shallowSlice(x, begin, size);\n    };\n    MathBackendWebGL.prototype.shallowSlice = function (x, begin, size) {\n        var xTexData = this.texData.get(x.dataId);\n        var t = this.makeOutput(size, x.dtype);\n        var newTexData = this.texData.get(t.dataId);\n        // Copy texture data from the original tensor.\n        Object.assign(newTexData, xTexData);\n        newTexData.shape = size;\n        newTexData.dtype = x.dtype;\n        var flatOffset = slice_util.computeFlatOffset(begin, x.strides);\n        if (xTexData.slice) {\n            // We are slicing an already sliced tensor, so we have to accumulate\n            // the offset.\n            flatOffset += xTexData.slice.flatOffset;\n        }\n        newTexData.slice = {\n            flatOffset: flatOffset,\n            // Point to the original dataId, which is used to do ref counting.\n            origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n        };\n        // Increase the ref count for that data bucket.\n        var refCount = this.dataRefCount.get(newTexData.slice.origDataId) || 1;\n        this.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n        return t;\n    };\n    MathBackendWebGL.prototype.stridedSlice = function (x, begin, end, strides) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.stridedSlice(x, begin, end, strides);\n        }\n        var outShape = slice_util.computeOutShape(begin, end, strides);\n        if (outShape.some(function (axis) { return axis === 0; })) {\n            return tensor_ops_1.tensor([], outShape);\n        }\n        var program = new strided_slice_gpu_1.StridedSliceProgram(begin, strides, outShape);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reverse = function (x, axis) {\n        var program = environment_1.env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new reverse_packed_gpu_1.ReversePackedProgram(x.shape, axis) :\n            new reverse_gpu_1.ReverseProgram(x.shape, axis);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.concat = function (tensors, axis) {\n        if (tensors[0].dtype === 'complex64') {\n            var reals = tensors.map(function (t) { return complex_ops_1.real(t); });\n            var imags = tensors.map(function (t) { return complex_ops_1.imag(t); });\n            return complex_ops_1.complex(this.concat(reals, axis), this.concat(imags, axis));\n        }\n        if (this.shouldExecuteOnCPU(tensors)) {\n            return this.cpuBackend.concat(tensors, axis);\n        }\n        if (tensors.length === 1) {\n            return tensors[0];\n        }\n        if (tensors.length > environment_1.env().getNumber('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n            var midIndex = Math.floor(tensors.length / 2);\n            var leftSide = this.concat(tensors.slice(0, midIndex), axis);\n            var rightSide = this.concat(tensors.slice(midIndex), axis);\n            return this.concat([leftSide, rightSide], axis);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') && tensors[0].rank > 1) {\n            var program_1 = new concat_packed_gpu_1.ConcatPackedProgram(tensors.map(function (t) { return t.shape; }), axis);\n            return this.compileAndRun(program_1, tensors);\n        }\n        // Any concat of n-dimensional tensors across any axis can be reduced to\n        // a concatenation of two-dimensional tensors across the axis 1 by first\n        // partitioning the axes of the original tensors into those less than the\n        // axis to be concatenated and the rest. Then reshape the tensors\n        // into a two-dimensional tensor by collapsing these two sets of axes and\n        // concatenate the resulting matrices across the axis 1, finally reshaping\n        // the result to have the proper shape.\n        var outShape = concat_util_1.computeOutShape(tensors.map(function (t) { return t.shape; }), axis);\n        var tensors2D = tensors.map(function (t) { return t.as2D(-1, util_1.sizeFromShape(t.shape.slice(axis))); });\n        var program = new concat_gpu_1.ConcatProgram(tensors2D.map(function (t) { return t.shape; }));\n        var res = this.compileAndRun(program, tensors2D);\n        return res.reshape(outShape);\n    };\n    MathBackendWebGL.prototype.neg = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.neg(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.NEG, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.NEG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.batchMatMul = function (a, b, transposeA, transposeB) {\n        var outerShapeA = transposeA ? a.shape[2] : a.shape[1];\n        var outerShapeB = transposeB ? b.shape[1] : b.shape[2];\n        var sharedDim = transposeA ? a.shape[1] : a.shape[2];\n        var _a = a.shape, batch = _a[0];\n        // Since the matrices are vectors, it is faster to call mul().sum()\n        // because sum() is O(sqrt(N)) due to divide-and-conquer.\n        if ((outerShapeA === 1 || outerShapeB === 1) &&\n            sharedDim > exports.MATMUL_SHARED_DIM_THRESHOLD) {\n            if (transposeA) {\n                a = a.transpose([0, 2, 1]);\n            }\n            if (transposeB) {\n                b = b.transpose([0, 2, 1]);\n            }\n            var a3D = outerShapeB === 1 ? a : a.as3D(batch, sharedDim, 1);\n            var axis = outerShapeB === 1 ? 2 : 1;\n            var b3D = outerShapeB === 1 ? b.as3D(batch, 1, sharedDim) : b;\n            return this.multiply(a3D, b3D).sum(axis, true /* keepDims */);\n        }\n        var dtype = types_1.upcastType(a.dtype, b.dtype);\n        var program = new mulmat_packed_gpu_1.MatMulPackedProgram(a.shape, [batch, outerShapeA, outerShapeB], transposeA, transposeB);\n        return this.compileAndRun(program, [a, b], dtype);\n    };\n    MathBackendWebGL.prototype.fusedBatchMatMul = function (_a) {\n        var a = _a.a, b = _a.b, transposeA = _a.transposeA, transposeB = _a.transposeB, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        var outerShapeA = transposeA ? a.shape[2] : a.shape[1];\n        var outerShapeB = transposeB ? b.shape[1] : b.shape[2];\n        var _b = a.shape, batch = _b[0];\n        var dtype = types_1.upcastType(a.dtype, b.dtype);\n        var hasBias = bias != null;\n        var hasPreluActivationWeights = preluActivationWeights != null;\n        var fusedActivation = activation ? mapActivationToShaderProgram(activation, true) : null;\n        var program = new mulmat_packed_gpu_1.MatMulPackedProgram(a.shape, [batch, outerShapeA, outerShapeB], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights);\n        var inputs = [a, b];\n        if (bias) {\n            inputs.push(bias);\n        }\n        if (preluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        return this.compileAndRun(program, inputs, dtype);\n    };\n    MathBackendWebGL.prototype.multiply = function (a, b) {\n        if (a.dtype === 'complex64') {\n            var aData = this.texData.get(a.dataId);\n            var bData = this.texData.get(b.dataId);\n            var realProgram = new binaryop_complex_gpu_1.BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.REAL, a.shape, b.shape);\n            var imagProgram = new binaryop_complex_gpu_1.BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.IMAG, a.shape, b.shape);\n            var inputs = [\n                this.makeComplexComponentTensorInfo(a, aData.complexTensors.real),\n                this.makeComplexComponentTensorInfo(a, aData.complexTensors.imag),\n                this.makeComplexComponentTensorInfo(b, bData.complexTensors.real),\n                this.makeComplexComponentTensorInfo(b, bData.complexTensors.imag)\n            ];\n            var real_1 = this.compileAndRun(realProgram, inputs);\n            var imag_1 = this.compileAndRun(imagProgram, inputs);\n            var complex_1 = this.complex(real_1, imag_1);\n            real_1.dispose();\n            imag_1.dispose();\n            return complex_1;\n        }\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.multiply(a, b);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_gpu.MUL, a.dtype);\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], a.dtype);\n    };\n    MathBackendWebGL.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        var inputs = [x, mean, variance];\n        var offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            inputs.push(offset);\n        }\n        var scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            inputs.push(scale);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_NORMALIZATION')) {\n            var batchNormPackedProgram = new batchnorm_packed_gpu_1.BatchNormPackedProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n            return this.compileAndRun(batchNormPackedProgram, inputs);\n        }\n        var batchNormProgram = new batchnorm_gpu_1.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n        return this.compileAndRun(batchNormProgram, inputs);\n    };\n    MathBackendWebGL.prototype.localResponseNormalization4D = function (x, radius, bias, alpha, beta) {\n        var program = environment_1.env().getBool('WEBGL_PACK_NORMALIZATION') ?\n            new lrn_packed_gpu_1.LRNPackedProgram(x.shape, radius, bias, alpha, beta) :\n            new lrn_gpu_1.LRNProgram(x.shape, radius, bias, alpha, beta);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.LRNGrad = function (dy, inputImage, outputImage, depthRadius, bias, alpha, beta) {\n        var program = new lrn_grad_gpu_1.LRNGradProgram(inputImage.shape, depthRadius, bias, alpha, beta);\n        return this.compileAndRun(program, [inputImage, outputImage, dy]);\n    };\n    MathBackendWebGL.prototype.tile = function (x, reps) {\n        if (x.dtype === 'string') {\n            var data = this.readSync(x.dataId);\n            var decodedData = data.map(function (d) { return util.decodeString(d); });\n            var buf = array_ops_1.buffer(x.shape, x.dtype, decodedData);\n            return tile_impl_1.tile(buf, reps);\n        }\n        var program = new tile_gpu_1.TileProgram(x.shape, reps);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.pad = function (x, paddings, constantValue) {\n        var program = environment_1.env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new pad_packed_gpu_1.PadPackedProgram(x.shape, paddings, constantValue) :\n            new pad_gpu_1.PadProgram(x.shape, paddings, constantValue);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.transpose = function (x, perm) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.transpose(x, perm);\n        }\n        var program = environment_1.env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new transpose_packed_gpu_1.TransposePackedProgram(x.shape, perm) :\n            new transpose_gpu_1.TransposeProgram(x.shape, perm);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.gather = function (x, indices, axis) {\n        if (this.shouldExecuteOnCPU([x, indices])) {\n            return this.cpuBackend.gather(x, indices, axis);\n        }\n        var program = new gather_gpu_1.GatherProgram(x.shape, indices.size, axis);\n        return this.compileAndRun(program, [x, indices]);\n    };\n    MathBackendWebGL.prototype.batchToSpaceND = function (x, blockShape, crops) {\n        util.assert(x.rank <= 4, function () { return 'batchToSpaceND for rank > 4 with a WebGL backend not ' +\n            'implemented yet'; });\n        var prod = blockShape.reduce(function (a, b) { return a * b; });\n        var reshaped = array_ops_util.getReshaped(x.shape, blockShape, prod);\n        var permuted = array_ops_util.getPermuted(reshaped.length, blockShape.length);\n        var reshapedPermuted = array_ops_util.getReshapedPermuted(x.shape, blockShape, prod);\n        var sliceBeginCoords = array_ops_util.getSliceBeginCoords(crops, blockShape.length);\n        var sliceSize = array_ops_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n        return x.reshape(reshaped)\n            .transpose(permuted)\n            .reshape(reshapedPermuted)\n            .slice(sliceBeginCoords, sliceSize);\n    };\n    MathBackendWebGL.prototype.spaceToBatchND = function (x, blockShape, paddings) {\n        util.assert(x.rank <= 4, function () { return 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n            'implemented yet'; });\n        var prod = blockShape.reduce(function (a, b) { return a * b; });\n        var completePaddings = [[0, 0]];\n        completePaddings.push.apply(completePaddings, paddings);\n        for (var i = 1 + blockShape.length; i < x.shape.length; ++i) {\n            completePaddings.push([0, 0]);\n        }\n        var paddedX = x.pad(completePaddings);\n        var reshapedPaddedShape = array_ops_util.getReshaped(paddedX.shape, blockShape, prod, false);\n        var permutedReshapedPaddedPermutation = array_ops_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n        var flattenShape = array_ops_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n        return paddedX.reshape(reshapedPaddedShape)\n            .transpose(permutedReshapedPaddedPermutation)\n            .reshape(flattenShape);\n    };\n    MathBackendWebGL.prototype.reduce = function (x, reduceType, dtype) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new reduce_gpu_1.ReduceProgram(reduceInfo, reduceType);\n        var output = this.compileAndRun(program, [x], dtype);\n        // No need to run another GPGPU program.\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.reduce(output, reduceType, dtype);\n    };\n    MathBackendWebGL.prototype.argReduce = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        if (bestIndicesA != null) {\n            batchSize = bestIndicesA.shape[0];\n            inSize = bestIndicesA.shape[1];\n        }\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var reduceInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize };\n        var program = new argminmax_gpu_1.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n        var inputs = [x];\n        if (bestIndicesA != null) {\n            inputs.push(bestIndicesA);\n        }\n        var output = this.compileAndRun(program, inputs, 'int32');\n        // No need to run another GPGPU program.\n        if (output.shape[1] === 1) {\n            return output;\n        }\n        return this.argReduce(x, reduceType, output);\n    };\n    MathBackendWebGL.prototype.argReducePacked = function (x, reduceType, bestIndicesA) {\n        if (bestIndicesA === void 0) { bestIndicesA = null; }\n        var inShape = bestIndicesA != null ? bestIndicesA.shape : x.shape;\n        var inSize = inShape[inShape.length - 1];\n        var windowSize = reduce_util.computeOptimalWindowSize(inSize);\n        var program = new argminmax_packed_gpu_1.ArgMinMaxPackedProgram(inShape, windowSize, reduceType, bestIndicesA == null);\n        var inputs = bestIndicesA == null ? [x] : [x, bestIndicesA];\n        var output = this.compileAndRun(program, inputs, 'int32');\n        if (output.rank === x.rank) {\n            return this.argReducePacked(x, reduceType, output);\n        }\n        return output;\n    };\n    MathBackendWebGL.prototype.sum = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types_1.sumOutType(x.dtype);\n        return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.prod = function (x, axes) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.prod(x, axes);\n        }\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        var outputDType = types_1.sumOutType(x.dtype);\n        return this.reduce(a2D, 'prod', outputDType).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.unsortedSegmentSum = function (x, segmentIds, numSegments) {\n        var axis = 0;\n        var permutation = axis_util.getAxesPermutation([axis], x.rank);\n        var permutedX = x;\n        if (permutation != null) {\n            permutedX = x.transpose(permutation);\n            axis = axis_util.getInnerMostAxes(1, x.rank)[0];\n        }\n        var outShape = segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n        var inSize = util.sizeFromShape([permutedX.shape[axis]]);\n        var a2D = permutedX.as2D(-1, inSize);\n        var outputDType = types_1.sumOutType(x.dtype);\n        var result = this.segOpCompute(a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments)\n            .reshape(outShape);\n        if (permutation != null) {\n            result = result.transpose(axis_util.getUndoAxesPermutation(permutation));\n        }\n        return result;\n    };\n    MathBackendWebGL.prototype.segOpCompute = function (x, segOpType, segmentIds, dtype, numSegments) {\n        var batchSize = x.shape[0];\n        var inSize = x.shape[1];\n        var windowSize = segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n        var segOpInfo = { windowSize: windowSize, inSize: inSize, batchSize: batchSize, numSegments: numSegments };\n        var program = new segment_gpu_1.SegmentOpProgram(segOpInfo, segOpType);\n        var output = this.compileAndRun(program, [x, segmentIds], dtype);\n        // No need to run another GPGPU program.\n        if (output.shape[1] === numSegments) {\n            return output;\n        }\n        segmentIds = tensor_ops_1.range(0, numSegments).tile([inSize / windowSize]);\n        return this.segOpCompute(output, segOpType, segmentIds, dtype, numSegments);\n    };\n    MathBackendWebGL.prototype.argMinMaxReduce = function (x, axis, reduceType) {\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('arg' + reduceType.charAt(0).toUpperCase() + reduceType.slice(1), axes, x.rank);\n        if (!environment_1.env().getBool('WEBGL_PACK_REDUCE') || x.rank <= 2) {\n            var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n            var inSize = util.sizeFromShape(reduceShape);\n            var a2D = x.as2D(-1, inSize);\n            return this.argReduce(a2D, reduceType).reshape(outShape);\n        }\n        return this.argReducePacked(x, reduceType);\n    };\n    MathBackendWebGL.prototype.argMin = function (x, axis) {\n        return this.argMinMaxReduce(x, axis, 'min');\n    };\n    MathBackendWebGL.prototype.argMax = function (x, axis) {\n        return this.argMinMaxReduce(x, axis, 'max');\n    };\n    MathBackendWebGL.prototype.cumsum = function (x, axis, exclusive, reverse) {\n        if (axis !== x.rank - 1) {\n            throw new Error(\"WebGL cumsum shader expects an inner-most axis=\" + (x.rank - 1) + \" \" +\n                (\"but got axis=\" + axis));\n        }\n        var program = new cumsum_gpu_1.CumSumProgram(x.shape, exclusive, reverse);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.equal = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.EQUAL, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.notEqual = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.NOT_EQUAL, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.NOT_EQUAL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.less = function (a, b) {\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.less(a, b);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.LESS, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.lessEqual = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.LESS_EQUAL, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LESS_EQUAL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.greater = function (a, b) {\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.greater(a, b);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.GREATER, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.greaterEqual = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.GREATER_EQUAL, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.GREATER_EQUAL, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.logicalNot = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOGICAL_NOT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.logicalAnd = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.LOGICAL_AND, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_AND, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.logicalOr = function (a, b) {\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.LOGICAL_OR, 'bool');\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.LOGICAL_OR, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], 'bool');\n    };\n    MathBackendWebGL.prototype.select = function (condition, a, b) {\n        var program = new select_gpu_1.SelectProgram(condition.rank, a.shape, a.rank);\n        return this.compileAndRun(program, [condition, a, b], types_1.upcastType(a.dtype, b.dtype));\n    };\n    MathBackendWebGL.prototype.where = function (condition) {\n        log_1.warn('tf.where() in webgl locks the UI thread. ' +\n            'Call tf.whereAsync() instead');\n        var condVals = condition.dataSync();\n        return where_impl_1.whereImpl(condition.shape, condVals);\n    };\n    MathBackendWebGL.prototype.topk = function (x, k, sorted) {\n        var xVals = x.dataSync();\n        return topk_impl_1.topkImpl(xVals, x.shape, x.dtype, k, sorted);\n    };\n    MathBackendWebGL.prototype.min = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.minimum = function (a, b) {\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.minimum(a, b);\n        }\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.MIN, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MIN, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.mod = function (a, b) {\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.MOD, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MOD, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.max = function (x, axes) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.max(x, axes);\n        }\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.maximum = function (a, b) {\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.maximum(a, b);\n        }\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.MAX, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.MAX, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.all = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('all', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'all', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.any = function (x, axes) {\n        axis_util.assertAxesAreInnerMostDims('any', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var inSize = util.sizeFromShape(reduceShape);\n        var a2D = x.as2D(-1, inSize);\n        return this.reduce(a2D, 'any', a2D.dtype).reshape(outShape);\n    };\n    MathBackendWebGL.prototype.squaredDifference = function (a, b) {\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.realDivide = function (a, b) {\n        var op = binaryop_gpu.DIV;\n        var outputDtype = 'float32';\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            var checkOutOfBounds = true;\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.DIV, outputDtype, checkOutOfBounds);\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(op, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], outputDtype);\n    };\n    MathBackendWebGL.prototype.floorDiv = function (a, b) {\n        var op = binaryop_gpu.INT_DIV;\n        var outputDtype = 'int32';\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_packed_gpu.INT_DIV, outputDtype);\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(op, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], outputDtype);\n    };\n    MathBackendWebGL.prototype.add = function (a, b) {\n        if (a.dtype === 'complex64' && b.dtype === 'complex64') {\n            return this.complexSeparableBinaryOp(a, b, binaryop_gpu.ADD);\n        }\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.add(a, b);\n        }\n        var dtype = types_1.upcastType(a.dtype, b.dtype);\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_gpu.ADD, dtype);\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], dtype);\n    };\n    MathBackendWebGL.prototype.packedUnaryOp = function (x, op, dtype) {\n        var program = new unaryop_packed_gpu_1.UnaryOpPackedProgram(x.shape, op);\n        return this.compileAndRun(program, [x], dtype);\n    };\n    MathBackendWebGL.prototype.packedBinaryOp = function (a, b, op, dtype, checkOutOfBounds) {\n        if (checkOutOfBounds === void 0) { checkOutOfBounds = false; }\n        var program = new binaryop_packed_gpu_1.BinaryOpPackedProgram(op, a.shape, b.shape, checkOutOfBounds);\n        return this.compileAndRun(program, [a, b], dtype);\n    };\n    /**\n     * Computes a complex binary operation that can be decomposed into a simple\n     * binary operation on both the real and imagary parts.\n     */\n    MathBackendWebGL.prototype.complexSeparableBinaryOp = function (a, b, op) {\n        var _this = this;\n        var aData = this.texData.get(a.dataId);\n        var bData = this.texData.get(b.dataId);\n        var _a = [\n            [aData.complexTensors.real, bData.complexTensors.real],\n            [aData.complexTensors.imag, bData.complexTensors.imag]\n        ].map(function (complexParts) {\n            var aPart = complexParts[0], bPart = complexParts[1];\n            var aHandle = _this.makeComplexComponentTensorInfo(a, aPart);\n            var bHandle = _this.makeComplexComponentTensorInfo(b, bPart);\n            var program = new binaryop_gpu_1.BinaryOpProgram(op, a.shape, b.shape);\n            return _this.compileAndRun(program, [aHandle, bHandle], types_1.upcastType(aPart.dtype, bPart.dtype));\n        }), real = _a[0], imag = _a[1];\n        var complex = this.complex(real, imag);\n        real.dispose();\n        imag.dispose();\n        return complex;\n    };\n    // Returns a TensorInfo with the complex shape and the dataId of the\n    // underlying part. We need to do this because a reshaped complex tensor is\n    // not reflected in its parts.\n    MathBackendWebGL.prototype.makeComplexComponentTensorInfo = function (complexTensor, complexPart) {\n        return {\n            dataId: complexPart.dataId,\n            dtype: complexPart.dtype,\n            shape: complexTensor.shape\n        };\n    };\n    MathBackendWebGL.prototype.addN = function (tensors) {\n        if (tensors.length === 1) {\n            return tensors[0];\n        }\n        // Limit the number of uploaded textures for optimization.\n        if (tensors.length > environment_1.env().get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n            var midIndex = Math.floor(tensors.length / 2);\n            var leftSide = this.addN(tensors.slice(0, midIndex));\n            var rightSide = this.addN(tensors.slice(midIndex));\n            return this.addN([leftSide, rightSide]);\n        }\n        var dtype = tensors.map(function (t) { return t.dtype; }).reduce(function (d1, d2) { return types_1.upcastType(d1, d2); });\n        var shapes = tensors.map(function (t) { return t.shape; });\n        // We can make sure shapes are identical in op level.\n        var usePackedOp = environment_1.env().getBool('WEBGL_PACK');\n        var program = usePackedOp ?\n            new addn_packed_gpu_1.AddNPackedProgram(tensors[0].shape, shapes) :\n            new addn_gpu_1.AddNProgram(tensors[0].shape, shapes);\n        return this.compileAndRun(program, tensors, dtype);\n    };\n    MathBackendWebGL.prototype.subtract = function (a, b) {\n        if (a.dtype === 'complex64' && b.dtype === 'complex64') {\n            return this.complexSeparableBinaryOp(a, b, binaryop_gpu.SUB);\n        }\n        if (this.shouldExecuteOnCPU([a, b])) {\n            return this.cpuBackend.subtract(a, b);\n        }\n        var dtype = types_1.upcastType(a.dtype, b.dtype);\n        if (environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n            return this.packedBinaryOp(a, b, binaryop_gpu.SUB, a.dtype);\n        }\n        var program = new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b], dtype);\n    };\n    MathBackendWebGL.prototype.pow = function (a, b) {\n        var usePackedOp = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS');\n        var program = usePackedOp ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.POW, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n        var dtype = types_1.upcastType(a.dtype, b.dtype);\n        return this.compileAndRun(program, [a, b], dtype);\n    };\n    MathBackendWebGL.prototype.ceil = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.ceil(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.CEIL, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.CEIL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.floor = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.floor(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.FLOOR, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.FLOOR);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sign = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.isNaN = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.IS_NAN);\n        return this.compileAndRun(program, [x], 'bool');\n    };\n    MathBackendWebGL.prototype.isInf = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.IS_INF);\n        return this.compileAndRun(program, [x], 'bool');\n    };\n    MathBackendWebGL.prototype.isFinite = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.IS_FINITE);\n        return this.compileAndRun(program, [x], 'bool');\n    };\n    MathBackendWebGL.prototype.round = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ROUND);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.exp = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.exp(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.EXP, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXP);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.expm1 = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.expm1(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.EXPM1, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.EXPM1);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.log(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_packed_op.LOG, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.log1p = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.LOG1P);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sqrt = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.rsqrt = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.rsqrt(x);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RSQRT);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.reciprocal = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RECIPROCAL);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu = function (x) {\n        var program;\n        if (environment_1.env().getBool('WEBGL_PACK')) {\n            program = new unaryop_packed_gpu_1.UnaryOpPackedProgram(x.shape, unary_packed_op.RELU);\n        }\n        else {\n            program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU);\n        }\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.relu6 = function (x) {\n        var program;\n        if (environment_1.env().getBool('WEBGL_PACK')) {\n            program = new unaryop_packed_gpu_1.UnaryOpPackedProgram(x.shape, unary_packed_op.RELU6);\n        }\n        else {\n            program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.RELU6);\n        }\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.prelu = function (x, alpha) {\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.PRELU, x.shape, alpha.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.PRELU, x.shape, alpha.shape);\n        return this.compileAndRun(program, [x, alpha]);\n    };\n    MathBackendWebGL.prototype.elu = function (x) {\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_packed_op.ELU, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.eluDer = function (dy, y) {\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.ELU_DER, dy.shape, y.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ELU_DER, dy.shape, y.shape);\n        return this.compileAndRun(program, [dy, y]);\n    };\n    MathBackendWebGL.prototype.selu = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SELU);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.int = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TO_INT);\n        return this.compileAndRun(program, [x], 'int32');\n    };\n    MathBackendWebGL.prototype.clip = function (x, min, max) {\n        var program;\n        if (environment_1.env().getBool('WEBGL_PACK_CLIP')) {\n            program = new clip_packed_gpu_1.ClipPackedProgram(x.shape);\n        }\n        else {\n            program = new clip_gpu_1.ClipProgram(x.shape);\n        }\n        var customSetup = program.getCustomSetupFunc(min, max);\n        return this.compileAndRun(program, [x], null, customSetup);\n    };\n    MathBackendWebGL.prototype.abs = function (x) {\n        if (this.shouldExecuteOnCPU([x])) {\n            return this.cpuBackend.abs(x);\n        }\n        if (environment_1.env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.ABS, x.dtype);\n        }\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.complexAbs = function (x) {\n        var xData = this.texData.get(x.dataId);\n        var program = new complex_abs_gpu_1.ComplexAbsProgram(x.shape);\n        var inputs = [\n            this.makeComplexComponentTensorInfo(x, xData.complexTensors.real),\n            this.makeComplexComponentTensorInfo(x, xData.complexTensors.imag),\n        ];\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.sigmoid = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIGMOID);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.softplus = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SOFTPLUS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.sin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asin = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASIN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acos = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOS);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATAN);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atan2 = function (a, b) {\n        var program = environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n            new binaryop_packed_gpu_1.BinaryOpPackedProgram(binaryop_packed_gpu.ATAN2, a.shape, b.shape) :\n            new binaryop_gpu_1.BinaryOpProgram(binaryop_gpu.ATAN2, a.shape, b.shape);\n        return this.compileAndRun(program, [a, b]);\n    };\n    MathBackendWebGL.prototype.sinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.SINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.cosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.COSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.tanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.TANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.asinh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ASINH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.acosh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ACOSH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.atanh = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ATANH);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.erf = function (x) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.ERF);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.step = function (x, alpha) {\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.conv2dByMatMul = function (x, filter, convInfo, bias, activation, preluActivationWeights) {\n        // Reshapes conv2D input to 2D tensors, uses matMul and then reshape the\n        // result from 2D to 4D.\n        var xShape = x.shape;\n        var xTexData = this.texData.get(x.dataId);\n        var sharedMatMulDim = convInfo.inChannels;\n        var outerShapeX = xShape[0] * xShape[1] * xShape[2];\n        var outerShapeFilter = convInfo.outChannels;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        var transposeA = false;\n        var transposeB = false;\n        // TODO: Once reduction ops are packed, batchMatMul will always be packed\n        // and we can remove this condition.\n        var batchMatMulWillBeUnpacked = (outerShapeX === 1 || outerShapeFilter === 1) &&\n            sharedMatMulDim > exports.MATMUL_SHARED_DIM_THRESHOLD;\n        var reshapeWillBeExpensive = xShape[2] % 2 !== 0 && !!xTexData.isPacked;\n        if (batchMatMulWillBeUnpacked || !environment_1.env().getBool('WEBGL_LAZILY_UNPACK') ||\n            !environment_1.env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ||\n            !reshapeWillBeExpensive) {\n            var targetShape_1 = isChannelsLast ? xShape[0] * xShape[1] * xShape[2] :\n                xShape[0] * xShape[2] * xShape[3];\n            var xReshaped_1 = this.reshape(x, [1, targetShape_1, convInfo.inChannels]);\n            var filterReshaped_1 = this.reshape(filter, [1, convInfo.inChannels, convInfo.outChannels]);\n            return this.reshape(this.fusedBatchMatMul({\n                a: xReshaped_1,\n                b: filterReshaped_1,\n                transposeA: transposeA,\n                transposeB: transposeB,\n                bias: bias,\n                activation: activation,\n                preluActivationWeights: preluActivationWeights\n            }), convInfo.outShape);\n        }\n        // Following optimization is specific to packed |x| with odd row count\n        // (For example, in channelLast mode, 'row count' refers to x.shape[2]):\n        // we avoid expensive packed 2x2 reshape by padding row count to next,\n        // even number. When x.shape[2] is odd, the result of packed batchMatMul is\n        // the same (has the same texture layout and and values in the texture) as\n        // it is for even x.shape[2] + 1. We make the odd-rows tensor to look like\n        // even-rows tensor before the operation and, after the batchMatMul,\n        // fix the even-rows result to have odd number of rows.\n        var targetShape = isChannelsLast ?\n            xShape[0] * xShape[1] * (xShape[2] + 1) :\n            xShape[0] * xShape[2] * (xShape[3] + 1);\n        var xReshaped = {\n            dataId: x.dataId,\n            shape: [1, targetShape, convInfo.inChannels],\n            dtype: x.dtype\n        };\n        // xTexData.shape gets referenced from GPGPUBinary.inShapeInfos.\n        // Decrementing row count, after batchMatMul->...->compileProgram leads to\n        // invalid row count within the reference in GPGPUBinary.inShapeInfos.\n        // Alternative fix would be to provide a copy to GPGPUBinary.inShapeInfos\n        // in compileProgram method, but that would affect compilation of all\n        // programs - instead, provide a copy here, with even row count, before\n        // calling batchMatMul->...->compileProgram and after that, the original\n        // xTexData.shape is restored.\n        var originalXTexDataShape = xTexData.shape;\n        xTexData.shape = xTexData.shape.slice();\n        xTexData.shape[xTexData.shape.length - 2]++;\n        util.assert(webgl_util.isReshapeFree(xTexData.shape, xReshaped.shape), function () { return \"packed reshape \" + xTexData.shape + \" to \" + xReshaped.shape + \" isn't free\"; });\n        var filterReshaped = this.reshape(filter, [1, convInfo.inChannels, convInfo.outChannels]);\n        var pointwiseConv = this.fusedBatchMatMul({\n            a: xReshaped,\n            b: filterReshaped,\n            transposeA: transposeA,\n            transposeB: transposeB,\n            bias: bias,\n            activation: activation,\n            preluActivationWeights: preluActivationWeights\n        });\n        var pointwiseConvTexData = this.texData.get(pointwiseConv.dataId);\n        util.assert(pointwiseConvTexData.isPacked, function () { return 'batchMatMul result is expected to be packed'; });\n        // Restore the input shape to original.\n        xTexData.shape = originalXTexDataShape;\n        // Set the output shape - there is no need for expensive reshape as data\n        // layout is already correct.\n        pointwiseConvTexData.shape = convInfo.outShape;\n        return engine_1.ENGINE.makeTensorFromDataId(pointwiseConv.dataId, convInfo.outShape, pointwiseConv.dtype);\n    };\n    MathBackendWebGL.prototype.conv2dWithIm2Row = function (x, filter, convInfo, bias, activation, preluActivationWeights) {\n        // Rearranges conv2d input so each block to be convolved over forms the\n        // column of a new matrix with shape [filterWidth * filterHeight *\n        // inChannels, outHeight * outWidth]. The filter is also rearranged so each\n        // output channel forms a row of a new matrix with shape [outChannels,\n        // filterWidth * filterHeight * inChannels]. The convolution is then\n        // computed by multiplying these matrices and reshaping the result.\n        var filterWidth = convInfo.filterWidth, filterHeight = convInfo.filterHeight, inChannels = convInfo.inChannels, outWidth = convInfo.outWidth, outHeight = convInfo.outHeight, dataFormat = convInfo.dataFormat;\n        var isChannelsLast = dataFormat === 'channelsLast';\n        var sharedDim = filterWidth * filterHeight * inChannels;\n        var numCols = outHeight * outWidth;\n        var x2ColShape = [sharedDim, numCols];\n        var transposeA = true;\n        var transposeB = false;\n        var xSqueezed = x.squeeze([0]);\n        var w2Row = filter.reshape([1, sharedDim, -1]);\n        var im2ColProgram = new im2col_packed_gpu_1.Im2ColPackedProgram(x2ColShape, xSqueezed.shape, convInfo);\n        var im2Col = this.compileAndRun(im2ColProgram, [xSqueezed]).reshape([\n            1, x2ColShape[0], x2ColShape[1]\n        ]);\n        var hasBias = bias != null;\n        var hasPreluActivationWeights = preluActivationWeights != null;\n        var fusedActivation = activation ? mapActivationToShaderProgram(activation, true) : null;\n        var matmulProgram = new mulmat_packed_gpu_1.MatMulPackedProgram(im2Col.shape, [1, numCols, convInfo.outChannels], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights);\n        var inputs = [im2Col, w2Row];\n        if (bias) {\n            inputs.push(bias);\n        }\n        if (hasPreluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        var product = this.compileAndRun(matmulProgram, inputs);\n        if (isChannelsLast) {\n            return product.reshape([1, outHeight, outWidth, convInfo.outChannels]);\n        }\n        else {\n            return product.reshape([1, convInfo.outChannels, outHeight, outWidth]);\n        }\n    };\n    MathBackendWebGL.prototype.fusedConv2d = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n            convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n            convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n            (convInfo.padInfo.type === 'SAME' ||\n                convInfo.padInfo.type === 'VALID')) {\n            return this.conv2dByMatMul(input, filter, convInfo, bias, activation, preluActivationWeights);\n        }\n        if (environment_1.env().getBool('WEBGL_CONV_IM2COL') && input.shape[0] === 1) {\n            return this.conv2dWithIm2Row(input, filter, convInfo, bias, activation, preluActivationWeights);\n        }\n        var hasBias = bias != null;\n        var hasPreluActivationWeights = preluActivationWeights != null;\n        var fusedActivation = activation ? mapActivationToShaderProgram(activation, false) : null;\n        var program = new conv_gpu_1.Conv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights);\n        var inputs = [input, filter];\n        if (bias) {\n            inputs.push(bias);\n        }\n        if (preluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.conv2d = function (x, filter, convInfo) {\n        if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n            convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n            convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n            (convInfo.padInfo.type === 'SAME' ||\n                convInfo.padInfo.type === 'VALID')) {\n            return this.conv2dByMatMul(x, filter, convInfo);\n        }\n        if (environment_1.env().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n            return this.conv2dWithIm2Row(x, filter, convInfo);\n        }\n        var program = new conv_gpu_1.Conv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.fusedDepthwiseConv2D = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        var shouldPackDepthwiseConv = environment_1.env().getBool('WEBGL_PACK_DEPTHWISECONV') &&\n            convInfo.strideWidth <= 2 &&\n            convInfo.outChannels / convInfo.inChannels === 1;\n        var fusedActivation = activation ?\n            mapActivationToShaderProgram(activation, shouldPackDepthwiseConv) :\n            null;\n        var inputs = [input, filter];\n        var hasBias = bias != null;\n        var hasPreluActivationWeights = preluActivationWeights != null;\n        if (hasBias) {\n            inputs.push(bias);\n        }\n        if (hasPreluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        var program;\n        if (shouldPackDepthwiseConv) {\n            program = new conv_packed_gpu_depthwise_1.DepthwiseConvPacked2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights);\n            return this.compileAndRun(program, inputs);\n        }\n        program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights);\n        return this.compileAndRun(program, inputs);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        var program;\n        if (environment_1.env().getBool('WEBGL_PACK_DEPTHWISECONV') &&\n            convInfo.strideWidth <= 2 &&\n            convInfo.outChannels / convInfo.inChannels === 1) {\n            program = new conv_packed_gpu_depthwise_1.DepthwiseConvPacked2DProgram(convInfo);\n            return this.compileAndRun(program, [x, filter]);\n        }\n        program = new conv_gpu_depthwise_1.DepthwiseConv2DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2DDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_depthwise_1.DepthwiseConv2DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.depthwiseConv2DDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_depthwise_1.DepthwiseConv2DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.conv3d = function (x, filter, convInfo) {\n        var program = new conv_gpu_1.Conv3DProgram(convInfo);\n        return this.compileAndRun(program, [x, filter]);\n    };\n    MathBackendWebGL.prototype.conv3dDerInput = function (dy, filter, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv3DDerInputProgram(convInfo);\n        return this.compileAndRun(program, [dy, filter]);\n    };\n    MathBackendWebGL.prototype.conv3dDerFilter = function (x, dy, convInfo) {\n        var program = new conv_backprop_gpu_1.Conv3DDerFilterProgram(convInfo);\n        return this.compileAndRun(program, [x, dy]);\n    };\n    MathBackendWebGL.prototype.maxPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'max', false);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.avgPool = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool2DProgram(convInfo, 'avg', false);\n        return this.compileAndRun(program, [x], 'float32');\n    };\n    MathBackendWebGL.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        var getPositions = true;\n        var maxPoolPositionsProgram = new pool_gpu_1.Pool2DProgram(convInfo, 'max', getPositions);\n        var maxPoolPositions = this.compileAndRun(maxPoolPositionsProgram, [x]);\n        var maxPoolBackPropProgram = new max_pool_backprop_gpu_1.MaxPool2DBackpropProgram(convInfo);\n        var result = this.compileAndRun(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n        maxPoolPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        var avgPoolBackpropProgram = new avg_pool_backprop_gpu_1.AvgPool2DBackpropProgram(convInfo);\n        return this.compileAndRun(avgPoolBackpropProgram, [dy], x.dtype);\n    };\n    MathBackendWebGL.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendWebGL.prototype.unstack = function (x, axis) {\n        var num = x.shape[axis];\n        var outShape = new Array(x.rank - 1);\n        var outIndex = 0;\n        for (var i = 0; i < x.rank; i++) {\n            if (i !== axis) {\n                outShape[outIndex++] = x.shape[i];\n            }\n        }\n        var begin = new Array(x.rank).fill(0);\n        var size = x.shape.slice();\n        size[axis] = 1;\n        var res = new Array(num);\n        for (var i = 0; i < res.length; i++) {\n            begin[axis] = i;\n            res[i] = this.slice(x, begin, size).reshape(outShape);\n        }\n        return res;\n    };\n    MathBackendWebGL.prototype.avgPool3d = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool3DProgram(convInfo, 'avg', false);\n        return this.compileAndRun(program, [x], 'float32');\n    };\n    MathBackendWebGL.prototype.avgPool3dBackprop = function (dy, x, convInfo) {\n        var avgPool3dBackpropProgram = new avg_pool_backprop_gpu_1.AvgPool3DBackpropProgram(convInfo);\n        return this.compileAndRun(avgPool3dBackpropProgram, [dy], x.dtype);\n    };\n    MathBackendWebGL.prototype.maxPool3d = function (x, convInfo) {\n        var program = new pool_gpu_1.Pool3DProgram(convInfo, 'max', false);\n        return this.compileAndRun(program, [x], 'float32');\n    };\n    MathBackendWebGL.prototype.maxPool3dBackprop = function (dy, x, y, convInfo) {\n        var getPositions = true;\n        var maxPool3dPositionsProgram = new pool_gpu_1.Pool3DProgram(convInfo, 'max', getPositions);\n        var maxPool3dPositions = this.compileAndRun(maxPool3dPositionsProgram, [x]);\n        var maxPool3dBackPropProgram = new max_pool_backprop_gpu_1.MaxPool3DBackpropProgram(convInfo);\n        var result = this.compileAndRun(maxPool3dBackPropProgram, [dy, maxPool3dPositions], x.dtype);\n        maxPool3dPositions.dispose();\n        return result;\n    };\n    MathBackendWebGL.prototype.reshape = function (x, shape) {\n        var texData = this.texData.get(x.dataId);\n        if (texData.isPacked && !webgl_util.isReshapeFree(x.shape, shape) &&\n            !(texData.texture !== null &&\n                webgl_util.isReshapeFree(texData.shape, shape))) {\n            var info = this.packedReshape(x, shape);\n            return engine_1.ENGINE.makeTensorFromDataId(info.dataId, info.shape, info.dtype);\n        }\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendWebGL.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        var program = environment_1.env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n            new resize_bilinear_packed_gpu_1.ResizeBilinearPackedProgram(x.shape, newHeight, newWidth, alignCorners) :\n            new resize_bilinear_gpu_1.ResizeBilinearProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x], 'float32');\n    };\n    MathBackendWebGL.prototype.resizeBilinearBackprop = function (dy, x, alignCorners) {\n        var program = new resize_bilinear_backprop_gpu_1.ResizeBilinearBackpropProgram(dy, x, alignCorners);\n        return this.compileAndRun(program, [dy]);\n    };\n    MathBackendWebGL.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        var program = new resize_nearest_neighbor_gpu_1.ResizeNearestNeighborProgram(x.shape, newHeight, newWidth, alignCorners);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.resizeNearestNeighborBackprop = function (dy, x, alignCorners) {\n        var program = new resize_nearest_neighbor_backprop_gpu_1.ResizeNearestNeigborBackpropProgram(dy, x, alignCorners);\n        return this.compileAndRun(program, [dy]);\n    };\n    MathBackendWebGL.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        var probs = normalized ? logits : softmax_1.softmax(logits);\n        var batchSize = probs.shape[0];\n        var numOutcomes = probs.shape[1];\n        var program = new multinomial_gpu_1.MultinomialProgram(batchSize, numOutcomes, numSamples);\n        var customSetup = program.getCustomSetupFunc(seed);\n        return this.compileAndRun(program, [probs], 'int32', customSetup);\n    };\n    MathBackendWebGL.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        var program = new onehot_gpu_1.OneHotProgram(indices.size, depth, onValue, offValue);\n        return this.compileAndRun(program, [indices]);\n    };\n    MathBackendWebGL.prototype.diag = function (x) {\n        var program = new diag_gpu_1.DiagProgram(x.size);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.nonMaxSuppression = function (boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n        log_1.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n            'Call tf.nonMaxSuppressionAsync() instead');\n        var boxesVals = boxes.dataSync();\n        var scoresVals = scores.dataSync();\n        return non_max_suppression_impl_1.nonMaxSuppressionImpl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    };\n    MathBackendWebGL.prototype.cropAndResize = function (image, boxes, boxIndex, cropSize, method, extrapolationValue) {\n        var program = new crop_and_resize_gpu_1.CropAndResizeProgram(image.shape, boxes.shape, cropSize, method, extrapolationValue);\n        return this.compileAndRun(program, [image, boxes, boxIndex], 'float32');\n    };\n    MathBackendWebGL.prototype.depthToSpace = function (x, blockSize, dataFormat) {\n        util.assert(blockSize > 1, function () {\n            return \"blockSize should be > 1 for depthToSpace, but was: \" + blockSize;\n        });\n        var batchSize = x.shape[0];\n        var inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n        var inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n        var inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n        var outputHeight = inputHeight * blockSize;\n        var outputWidth = inputWidth * blockSize;\n        var outputDepth = inputDepth / (blockSize * blockSize);\n        var outputShape = (dataFormat === 'NHWC') ?\n            [batchSize, outputHeight, outputWidth, outputDepth] :\n            [batchSize, outputDepth, outputHeight, outputWidth];\n        var program = new depth_to_space_gpu_1.DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n        return this.compileAndRun(program, [x]);\n    };\n    MathBackendWebGL.prototype.split = function (x, sizeSplits, axis) {\n        return split_shared_1.split(x, sizeSplits, axis);\n    };\n    MathBackendWebGL.prototype.scatterND = function (indices, updates, shape) {\n        var _a = scatter_nd_util.calculateShapes(updates, indices, shape), sliceRank = _a.sliceRank, numUpdates = _a.numUpdates, sliceSize = _a.sliceSize, strides = _a.strides, outputSize = _a.outputSize;\n        var flattenShape = [outputSize / sliceSize, sliceSize];\n        var flattenIndices = indices.reshape([numUpdates, sliceRank]);\n        var flattenX = updates.reshape([numUpdates, sliceSize]);\n        if (outputSize === 0) {\n            return backend_util.reshapeTensor(tensor_ops_1.tensor([]), shape);\n        }\n        var defaultValue = tensor_ops_1.scalar(0);\n        var program = new scatter_gpu_1.ScatterProgram(numUpdates, sliceRank, flattenIndices.rank, flattenX.rank, strides, flattenShape);\n        var res = this.compileAndRun(program, [flattenX, flattenIndices, defaultValue]);\n        return res.reshape(shape);\n    };\n    MathBackendWebGL.prototype.sparseToDense = function (sparseIndices, sparseValues, outputShape, defaultValue) {\n        var _a = scatter_nd_util.calculateShapes(sparseValues, sparseIndices, outputShape), sliceRank = _a.sliceRank, numUpdates = _a.numUpdates, strides = _a.strides, outputSize = _a.outputSize;\n        var sumDupeIndices = false;\n        var program = new scatter_gpu_1.ScatterProgram(numUpdates, sliceRank, sparseIndices.rank, sparseValues.rank, strides, [outputSize, 1], sumDupeIndices);\n        var res = this.compileAndRun(program, [sparseValues, sparseIndices, defaultValue]);\n        return res.reshape(outputShape);\n    };\n    MathBackendWebGL.prototype.fft = function (x) {\n        var inverse = false;\n        return this.fftImpl(x, inverse);\n    };\n    MathBackendWebGL.prototype.ifft = function (x) {\n        var inverse = true;\n        return this.fftImpl(x, inverse);\n    };\n    MathBackendWebGL.prototype.fftImpl = function (x, inverse) {\n        var xData = this.texData.get(x.dataId);\n        var realProgram = new fft_gpu_1.FFTProgram(fft_gpu.COMPLEX_FFT.REAL, x.shape, inverse);\n        var imagProgram = new fft_gpu_1.FFTProgram(fft_gpu.COMPLEX_FFT.IMAG, x.shape, inverse);\n        var inputs = [\n            this.makeComplexComponentTensorInfo(x, xData.complexTensors.real),\n            this.makeComplexComponentTensorInfo(x, xData.complexTensors.imag),\n        ];\n        var real = this.compileAndRun(realProgram, inputs);\n        var imag = this.compileAndRun(imagProgram, inputs);\n        var complex = this.complex(real, imag).as2D(x.shape[0], x.shape[1]);\n        real.dispose();\n        imag.dispose();\n        return complex;\n    };\n    MathBackendWebGL.prototype.gatherND = function (x, indices) {\n        var indicesShape = indices.shape;\n        var sliceRank = indicesShape[indicesShape.length - 1];\n        var _a = gather_nd_util.prepareAndValidate(x, indices), resultShape = _a[0], numSlices = _a[1], sliceSize = _a[2], strides = _a[3];\n        var flattenIndices = indices.reshape([numSlices, sliceRank]);\n        var flattenX = x.reshape([x.size / sliceSize, sliceSize]);\n        var program = new gather_nd_gpu_1.GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n        var res = this.compileAndRun(program, [flattenX, flattenIndices]);\n        return res.reshape(resultShape);\n    };\n    MathBackendWebGL.prototype.fill = function (shape, value, dtype) {\n        dtype = dtype || util_1.inferDtype(value);\n        if (dtype === 'string') {\n            // String type should be handled in CPU memory.\n            var values = util_1.getArrayFromDType(dtype, util_1.sizeFromShape(shape));\n            values.fill(value);\n            return engine_1.ENGINE.makeTensor(values, shape, dtype, this);\n        }\n        else {\n            var program = new fill_gpu_1.FillProgram(shape, value);\n            var customSetup = program.getCustomSetupFunc(value);\n            return this.compileAndRun(program, [], dtype, customSetup);\n        }\n    };\n    MathBackendWebGL.prototype.onesLike = function (x) {\n        if (x.dtype === 'string') {\n            throw new Error('onesLike is not supported under string dtype');\n        }\n        else {\n            // TODO(cais, smilkov): Add WebGL shader for onesLike:\n            //   https://github.com/tensorflow/tfjs/issues/1293\n            return this.fill(x.shape, 1, x.dtype);\n        }\n    };\n    MathBackendWebGL.prototype.zerosLike = function (x) {\n        return this.fill(x.shape, x.dtype === 'string' ? '' : 0, x.dtype);\n    };\n    MathBackendWebGL.prototype.linspace = function (start, stop, num) {\n        // TODO: Use CPU implementation due to the precision problem in Safari.\n        return backend_util.linspaceImpl(start, stop, num);\n    };\n    MathBackendWebGL.prototype.makeTensorInfo = function (shape, dtype) {\n        var dataId = this.write(null /* values */, shape, dtype);\n        this.texData.get(dataId).usage = null;\n        return { dataId: dataId, shape: shape, dtype: dtype };\n    };\n    MathBackendWebGL.prototype.makeOutput = function (shape, dtype) {\n        var dataId = this.makeTensorInfo(shape, dtype).dataId;\n        return engine_1.ENGINE.makeTensorFromDataId(dataId, shape, dtype, this);\n    };\n    MathBackendWebGL.prototype.unpackTensor = function (input) {\n        var program = new unpack_gpu_1.UnpackProgram(input.shape);\n        return this.runWebGLProgram(program, [input], input.dtype);\n    };\n    MathBackendWebGL.prototype.packTensor = function (input) {\n        var program = new pack_gpu_1.PackProgram(input.shape);\n        var preventEagerUnpackingOutput = true;\n        return this.runWebGLProgram(program, [input], input.dtype, null /* customSetup */, preventEagerUnpackingOutput);\n    };\n    MathBackendWebGL.prototype.packedReshape = function (input, afterShape) {\n        var input3DShape = [\n            webgl_util.getBatchDim(input.shape)\n        ].concat(webgl_util.getRowsCols(input.shape));\n        var input3D = {\n            dtype: input.dtype,\n            shape: input3DShape,\n            dataId: input.dataId\n        };\n        var afterShapeAs3D = [\n            webgl_util.getBatchDim(afterShape)\n        ].concat(webgl_util.getRowsCols(afterShape));\n        var program = new reshape_packed_gpu_1.ReshapePackedProgram(afterShapeAs3D, input3DShape);\n        var preventEagerUnpackingOfOutput = true;\n        var output = this.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n    };\n    MathBackendWebGL.prototype.decode = function (dataId) {\n        var texData = this.texData.get(dataId);\n        var isPacked = texData.isPacked, shape = texData.shape, dtype = texData.dtype;\n        var shapeAs3D = webgl_util.getShapeAs3D(shape);\n        var program;\n        if (isPacked) {\n            program = new decode_matrix_packed_gpu_1.DecodeMatrixPackedProgram(shapeAs3D);\n        }\n        else {\n            program = new decode_matrix_gpu_1.DecodeMatrixProgram(shapeAs3D);\n        }\n        var preventEagerUnpackingOfOutput = true;\n        var out = this.runWebGLProgram(program, [{ shape: shapeAs3D, dtype: dtype, dataId: dataId }], dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dtype: dtype, shape: shape, dataId: out.dataId };\n    };\n    MathBackendWebGL.prototype.runWebGLProgram = function (program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput) {\n        var _this = this;\n        if (preventEagerUnpackingOfOutput === void 0) { preventEagerUnpackingOfOutput = false; }\n        var output = this.makeTensorInfo(program.outputShape, outputDtype);\n        var outData = this.texData.get(output.dataId);\n        if (program.packedOutput) {\n            outData.isPacked = true;\n        }\n        if (program.outPackingScheme === tex_util.PackingScheme.DENSE) {\n            var texelShape = tex_util.getDenseTexShape(program.outputShape);\n            // For a densely packed output, we explicitly set texShape\n            // so it doesn't get assigned later according to our typical packing\n            // scheme wherein a single texel can only contain values from adjacent\n            // rows/cols.\n            outData.texShape = texelShape.map(function (d) { return d * 2; });\n        }\n        if (program.outTexUsage != null) {\n            outData.usage = program.outTexUsage;\n        }\n        if (util_1.sizeFromShape(output.shape) === 0) {\n            // Short-circuit the computation since the result is empty (has 0 in its\n            // shape).\n            outData.values = util_1.getTypedArrayFromDType(output.dtype, 0);\n            return output;\n        }\n        var dataToDispose = [];\n        var inputsData = inputs.map(function (input) {\n            if (input.dtype === 'complex64') {\n                throw new Error(\"GPGPUProgram does not support complex64 input. For complex64 \" +\n                    \"dtypes, please separate the program into real and imaginary \" +\n                    \"parts.\");\n            }\n            var texData = _this.texData.get(input.dataId);\n            if (texData.texture == null) {\n                if (!program.packedInputs &&\n                    util.sizeFromShape(input.shape) <=\n                        environment_1.env().getNumber('WEBGL_SIZE_UPLOAD_UNIFORM')) {\n                    // Upload small tensors that live on the CPU as uniforms, not as\n                    // textures. Do this only when the environment supports 32bit floats\n                    // due to problems when comparing 16bit floats with 32bit floats.\n                    // TODO(https://github.com/tensorflow/tfjs/issues/821): Make it\n                    // possible for packed shaders to sample from uniforms.\n                    return {\n                        shape: input.shape,\n                        texData: null,\n                        isUniform: true,\n                        uniformValues: texData.values\n                    };\n                }\n                // This ensures that if a packed program's inputs have not yet been\n                // uploaded to the GPU, they get uploaded as packed right off the bat.\n                if (program.packedInputs) {\n                    texData.isPacked = true;\n                    texData.shape = input.shape;\n                }\n            }\n            else if (!!texData.isPacked !== !!program.packedInputs) {\n                input = texData.isPacked ? _this.unpackTensor(input) :\n                    _this.packTensor(input);\n                dataToDispose.push(input);\n                texData = _this.texData.get(input.dataId);\n            }\n            else if (texData.isPacked &&\n                !webgl_util.isReshapeFree(texData.shape, input.shape)) {\n                // This is a special case where a texture exists for a tensor\n                // but the shapes are incompatible (due to packing constraints) because\n                // the tensor did not have a chance to go through the packed reshape\n                // shader. This only happens when we reshape the *same* tensor to form\n                // *distinct* inputs to an op, e.g. dotting a vector with itself. This\n                // case will disappear once packed uploading is the default.\n                var savedInput = input;\n                var targetShape = input.shape;\n                input.shape = texData.shape;\n                input = _this.packedReshape(input, targetShape);\n                dataToDispose.push(input);\n                texData = _this.texData.get(input.dataId);\n                savedInput.shape = targetShape;\n            }\n            _this.uploadToGPU(input.dataId);\n            return { shape: input.shape, texData: texData, isUniform: false };\n        });\n        this.uploadToGPU(output.dataId);\n        var outputData = { shape: output.shape, texData: outData, isUniform: false };\n        var key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        var binary = this.getAndSaveBinary(key, function () {\n            return gpgpu_math.compileProgram(_this.gpgpu, program, inputsData, outputData);\n        });\n        var shouldTimeProgram = this.activeTimers != null;\n        var query;\n        if (shouldTimeProgram) {\n            query = this.startTimer();\n        }\n        gpgpu_math.runProgram(this.gpgpu, binary, inputsData, outputData, customSetup);\n        dataToDispose.forEach(function (info) { return _this.disposeData(info.dataId); });\n        if (shouldTimeProgram) {\n            query = this.endTimer(query);\n            this.activeTimers.push({ name: program.constructor.name, query: this.getQueryTime(query) });\n        }\n        if (!environment_1.env().getBool('WEBGL_LAZILY_UNPACK') && outData.isPacked &&\n            preventEagerUnpackingOfOutput === false) {\n            var unpacked = this.unpackTensor(output);\n            this.disposeData(output.dataId);\n            return unpacked;\n        }\n        return output;\n    };\n    MathBackendWebGL.prototype.compileAndRun = function (program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput) {\n        if (preventEagerUnpackingOfOutput === void 0) { preventEagerUnpackingOfOutput = false; }\n        outputDtype = outputDtype || inputs[0].dtype;\n        var outInfo = this.runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput);\n        return engine_1.ENGINE.makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    };\n    MathBackendWebGL.prototype.getAndSaveBinary = function (key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    };\n    MathBackendWebGL.prototype.getTextureManager = function () {\n        return this.textureManager;\n    };\n    MathBackendWebGL.prototype.dispose = function () {\n        if (this.disposed) {\n            return;\n        }\n        this.textureManager.dispose();\n        if (this.canvas != null &&\n            (typeof (HTMLCanvasElement) !== 'undefined' &&\n                this.canvas instanceof HTMLCanvasElement)) {\n            this.canvas.remove();\n        }\n        else {\n            this.canvas = null;\n        }\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.program = null;\n            this.gpgpu.dispose();\n        }\n        this.disposed = true;\n    };\n    MathBackendWebGL.prototype.floatPrecision = function () {\n        var _this = this;\n        if (this.floatPrecisionValue == null) {\n            this.floatPrecisionValue = globals_1.tidy(function () {\n                if (!environment_1.env().get('WEBGL_RENDER_FLOAT32_ENABLED')) {\n                    // Momentarily switching DEBUG flag to false so we don't throw an\n                    // error trying to upload a small value.\n                    var debugFlag = environment_1.env().getBool('DEBUG');\n                    environment_1.env().set('DEBUG', false);\n                    var underflowCheckValue = _this.abs(tensor_ops_1.scalar(1e-8)).dataSync()[0];\n                    environment_1.env().set('DEBUG', debugFlag);\n                    if (underflowCheckValue > 0) {\n                        return 32;\n                    }\n                }\n                return 16;\n            });\n        }\n        return this.floatPrecisionValue;\n    };\n    /** Returns the smallest representable number.  */\n    MathBackendWebGL.prototype.epsilon = function () {\n        return this.floatPrecision() === 32 ? backend_1.EPSILON_FLOAT32 : backend_1.EPSILON_FLOAT16;\n    };\n    MathBackendWebGL.prototype.uploadToGPU = function (dataId) {\n        var _a;\n        var texData = this.texData.get(dataId);\n        var shape = texData.shape, dtype = texData.dtype, values = texData.values, texture = texData.texture, usage = texData.usage, isPacked = texData.isPacked;\n        if (texture != null) {\n            // Array is already on GPU. No-op.\n            return;\n        }\n        var shouldTimeProgram = this.activeTimers != null;\n        var start;\n        if (shouldTimeProgram) {\n            start = util.now();\n        }\n        var texShape = texData.texShape;\n        if (texShape == null) {\n            texShape = webgl_util.getTextureShapeFromLogicalShape(shape, isPacked);\n            texData.texShape = texShape;\n        }\n        if (values != null) {\n            var shapeAs3D = webgl_util.getShapeAs3D(shape);\n            var program = void 0;\n            var width = texShape[1], height = texShape[0];\n            var isByteArray = values instanceof Uint8Array;\n            if (isPacked) {\n                _a = tex_util.getPackedMatrixTextureShapeWidthHeight(texShape[0], texShape[1]), width = _a[0], height = _a[1];\n                program = new encode_matrix_packed_gpu_1.EncodeMatrixPackedProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            else {\n                program =\n                    new encode_matrix_gpu_1.EncodeMatrixProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            var tempDenseInputHandle = this.makeTensorInfo([height, width], dtype);\n            if (isByteArray) {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    tex_util_1.TextureUsage.PIXELS;\n            }\n            else {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    tex_util_1.TextureUsage.UPLOAD;\n            }\n            this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(tempDenseInputHandle.dataId), width, height, values);\n            // We want the output to remain packed regardless of the value of\n            // WEBGL_PACK.\n            var preventEagerUnpacking = true;\n            var encodedOutputTarget = this.runWebGLProgram(program, [tempDenseInputHandle], dtype, null, preventEagerUnpacking);\n            // Have the original texture assume the identity of the encoded output.\n            var outputTexData = this.texData.get(encodedOutputTarget.dataId);\n            texData.texture = outputTexData.texture;\n            texData.texShape = outputTexData.texShape;\n            texData.isPacked = outputTexData.isPacked;\n            texData.usage = outputTexData.usage;\n            this.disposeData(tempDenseInputHandle.dataId);\n            this.texData.delete(encodedOutputTarget.dataId);\n            // Once uploaded, don't store the values on cpu.\n            texData.values = null;\n            if (shouldTimeProgram) {\n                this.uploadWaitMs += util.now() - start;\n            }\n        }\n        else {\n            var newTexture = this.acquireTexture(texShape, usage, dtype, isPacked);\n            texData.texture = newTexture;\n        }\n    };\n    MathBackendWebGL.prototype.convertAndCacheOnCPU = function (dataId, float32Values) {\n        var texData = this.texData.get(dataId);\n        var dtype = texData.dtype;\n        this.releaseGPUData(dataId);\n        if (float32Values != null) {\n            texData.values = float32ToTypedArray(float32Values, dtype);\n        }\n        return texData.values;\n    };\n    MathBackendWebGL.prototype.acquireTexture = function (texShape, texType, dtype, isPacked) {\n        this.numBytesInGPU += this.computeBytes(texShape, dtype);\n        if (!this.warnedAboutMemory &&\n            this.numBytesInGPU > this.numMBBeforeWarning * 1024 * 1024) {\n            var mb = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n            this.warnedAboutMemory = true;\n            console.warn(\"High memory usage in GPU: \" + mb + \" MB, \" +\n                \"most likely due to a memory leak\");\n        }\n        return this.textureManager.acquireTexture(texShape, texType, isPacked);\n    };\n    MathBackendWebGL.prototype.computeBytes = function (shape, dtype) {\n        return shape[0] * shape[1] * util.bytesPerElement(dtype);\n    };\n    return MathBackendWebGL;\n}(backend_1.KernelBackend));\nexports.MathBackendWebGL = MathBackendWebGL;\nif (device_util.isBrowser()) {\n    engine_1.ENGINE.registerBackend('webgl', function () { return new MathBackendWebGL(); }, 2 /* priority */);\n}\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32' || dtype === 'complex64') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        var result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (var i = 0; i < result.length; ++i) {\n            result[i] = Math.round(a[i]);\n        }\n        return result;\n    }\n    else {\n        throw new Error(\"Unknown dtype \" + dtype);\n    }\n}\n//# sourceMappingURL=backend_webgl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"./environment\");\nfunction warn() {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        msg[_i] = arguments[_i];\n    }\n    if (!environment_1.env().getBool('IS_TEST')) {\n        console.warn.apply(console, msg);\n    }\n}\nexports.warn = warn;\nfunction log() {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        msg[_i] = arguments[_i];\n    }\n    if (!environment_1.env().getBool('IS_TEST')) {\n        console.log.apply(console, msg);\n    }\n}\nexports.log = log;\n//# sourceMappingURL=log.js.map","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshaped(inputShape, blockShape, prod, batchToSpace) {\n    if (batchToSpace === void 0) { batchToSpace = true; }\n    var reshaped = [];\n    if (batchToSpace) {\n        reshaped = reshaped.concat(blockShape.slice(0));\n        reshaped.push(inputShape[0] / prod);\n        reshaped = reshaped.concat(inputShape.slice(1));\n    }\n    else {\n        reshaped = reshaped.concat(inputShape[0]);\n        var spatialLength = blockShape.length;\n        for (var i = 0; i < spatialLength; ++i) {\n            reshaped =\n                reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n        }\n        reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n    }\n    return reshaped;\n}\nexports.getReshaped = getReshaped;\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getPermuted(reshapedRank, blockShapeRank, batchToSpace) {\n    if (batchToSpace === void 0) { batchToSpace = true; }\n    var permuted = [];\n    if (batchToSpace) {\n        permuted.push(blockShapeRank);\n        for (var i = blockShapeRank + 1; i < reshapedRank; ++i) {\n            if (i <= 2 * blockShapeRank) {\n                permuted.push(i);\n                permuted.push(i - (blockShapeRank + 1));\n            }\n            else {\n                permuted.push(i);\n            }\n        }\n    }\n    else {\n        var permutedBeforeBatch = [];\n        var permutedAfterBatch = [];\n        for (var i = 1; i < reshapedRank; ++i) {\n            if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n                permutedAfterBatch.push(i);\n            }\n            else {\n                permutedBeforeBatch.push(i);\n            }\n        }\n        permuted.push.apply(permuted, permutedBeforeBatch);\n        permuted.push(0);\n        permuted.push.apply(permuted, permutedAfterBatch);\n    }\n    return permuted;\n}\nexports.getPermuted = getPermuted;\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshapedPermuted(inputShape, blockShape, prod, batchToSpace) {\n    if (batchToSpace === void 0) { batchToSpace = true; }\n    var reshapedPermuted = [];\n    if (batchToSpace) {\n        reshapedPermuted.push(inputShape[0] / prod);\n    }\n    else {\n        reshapedPermuted.push(inputShape[0] * prod);\n    }\n    for (var i = 1; i < inputShape.length; ++i) {\n        if (i <= blockShape.length) {\n            if (batchToSpace) {\n                reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n            }\n            else {\n                reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n            }\n        }\n        else {\n            reshapedPermuted.push(inputShape[i]);\n        }\n    }\n    return reshapedPermuted;\n}\nexports.getReshapedPermuted = getReshapedPermuted;\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nfunction getSliceBeginCoords(crops, blockShape) {\n    var sliceBeginCoords = [0];\n    for (var i = 0; i < blockShape; ++i) {\n        sliceBeginCoords.push(crops[i][0]);\n    }\n    return sliceBeginCoords;\n}\nexports.getSliceBeginCoords = getSliceBeginCoords;\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getSliceSize(uncroppedShape, crops, blockShape) {\n    var sliceSize = uncroppedShape.slice(0, 1);\n    for (var i = 0; i < blockShape; ++i) {\n        sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n    }\n    return sliceSize;\n}\nexports.getSliceSize = getSliceSize;\n//# sourceMappingURL=array_ops_util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nfunction prepareAndValidate(tensor, indices) {\n    if (tensor.rank < 1) {\n        throw new Error('tf.gatherND() expects the input to be rank 1 or higher,' +\n            (\" but the rank was \" + tensor.rank + \".\"));\n    }\n    if (indices.rank < 1) {\n        throw new Error('tf.gatherND() expects the indices to be rank 1 or higher,' +\n            (\" but the rank was \" + indices.rank + \".\"));\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error('tf.gatherND() expects the indices to be int32 type,' +\n            (\" but the dtype was \" + indices.dtype + \".\"));\n    }\n    if (indices.shape[indices.rank - 1] > tensor.rank) {\n        throw new Error('index innermost dimension length must be <= tensor rank; saw: ' +\n            (indices.shape[indices.rank - 1] + \" vs. \" + tensor.rank));\n    }\n    if (tensor.size === 0) {\n        throw new Error('Requested more than 0 entries, but input is empty.' +\n            (\" Input shape: \" + tensor.shape + \".\"));\n    }\n    var indicesShape = indices.shape;\n    var sliceRank = indicesShape[indicesShape.length - 1];\n    // The result shape is\n    //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n    var nResult = 1;\n    for (var i = 0; i < indicesShape.length - 1; ++i) {\n        nResult *= indicesShape[i];\n    }\n    var inputShape = tensor.shape;\n    var resultShape = indicesShape.slice();\n    resultShape.pop();\n    var sliceSize = 1;\n    for (var i = sliceRank; i < tensor.rank; ++i) {\n        sliceSize *= inputShape[i];\n        resultShape.push(inputShape[i]);\n    }\n    var strides = util_1.computeStrides(tensor.shape).map(function (stride) { return stride / sliceSize; }).concat([1]).slice(0, sliceRank);\n    return [resultShape, nResult, sliceSize, strides];\n}\nexports.prepareAndValidate = prepareAndValidate;\n//# sourceMappingURL=gather_nd_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nvar util_1 = require(\"../util\");\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return util_1.nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\n//# sourceMappingURL=reduce_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\nvar reduce_util_1 = require(\"./reduce_util\");\nfunction segOpComputeOptimalWindowSize(inSize, numSegments) {\n    var done = false;\n    var res;\n    if (inSize <= reduce_util_1.PARALLELIZE_THRESHOLD) {\n        res = inSize;\n        done = true;\n    }\n    else {\n        res = util_1.nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n    }\n    while (!done) {\n        if (res > numSegments || res === inSize) {\n            done = true;\n        }\n        else {\n            res = util_1.nearestDivisor(inSize, res + 1);\n        }\n    }\n    return res;\n}\nexports.segOpComputeOptimalWindowSize = segOpComputeOptimalWindowSize;\nfunction computeOutShape(aShape, axis, numSegments) {\n    var outShape = [];\n    var rank = aShape.length;\n    for (var dim = 0; dim < rank; dim++) {\n        if (dim !== axis) {\n            outShape.push(aShape[dim]);\n        }\n        else {\n            outShape.push(numSegments);\n        }\n    }\n    return outShape;\n}\nexports.computeOutShape = computeOutShape;\nfunction collectGatherOpShapeInfo(x, indices, axis) {\n    var dimSize = x.shape[axis];\n    var outputShape = [];\n    var batchSize = 1;\n    var sliceSize = 1;\n    for (var i = 0; i < axis; i++) {\n        outputShape.push(x.shape[i]);\n        batchSize *= x.shape[i];\n    }\n    for (var i = 0; i < indices.rank; i++) {\n        outputShape.push(indices.shape[i]);\n    }\n    for (var i = axis + 1; i < x.rank; i++) {\n        outputShape.push(x.shape[i]);\n        sliceSize *= x.shape[i];\n    }\n    return { batchSize: batchSize, sliceSize: sliceSize, dimSize: dimSize, outputShape: outputShape };\n}\nexports.collectGatherOpShapeInfo = collectGatherOpShapeInfo;\n//# sourceMappingURL=segment_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gradients_1 = require(\"../gradients\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction softmax_(logits, dim) {\n    if (dim === void 0) { dim = -1; }\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'softmax');\n    if (dim === -1) {\n        dim = $logits.rank - 1;\n    }\n    if (dim !== $logits.rank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            (\"Logits was rank \" + $logits.rank + \" and dim was \" + dim));\n    }\n    var customOp = gradients_1.customGrad(function (logits, save) {\n        // Do it in log space for numerical stability.\n        // exp(X - logSumExp(X))\n        var keepDims = true;\n        var lse = logits.logSumExp([dim], keepDims);\n        var logResult = logits.toFloat().sub(lse);\n        var y = logResult.exp();\n        save([y]);\n        var gradFunc = function (dy, saved) {\n            var y = saved[0];\n            var dyTimesY = dy.mul(y);\n            var keepDims = true;\n            return dyTimesY.sub(dyTimesY.sum([dim], keepDims).mul(y));\n        };\n        return { value: y, gradFunc: gradFunc };\n    });\n    return customOp($logits);\n}\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction logSoftmax_(logits, axis) {\n    if (axis === void 0) { axis = -1; }\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'logSoftmax');\n    if (axis === -1) {\n        axis = $logits.rank - 1;\n    }\n    if (axis !== $logits.rank - 1) {\n        throw Error('Log Softmax along a non-last dimension is not yet supported. ' +\n            (\"Logits was rank \" + $logits.rank + \" and axis was \" + axis));\n    }\n    var customOp = gradients_1.customGrad(function (logits, save) {\n        var keepDims = true;\n        var xMax = logits.max(axis, true);\n        var shifted = logits.sub(xMax);\n        var value = shifted.toFloat().sub(shifted.exp().sum(axis, keepDims).log());\n        save([value]);\n        var gradFunc = function (dy, saved) {\n            var value = saved[0];\n            var softmax = value.exp();\n            return dy.sub(dy.sum(axis, keepDims).mul(softmax));\n        };\n        return { value: value, gradFunc: gradFunc };\n    });\n    return customOp($logits);\n}\nexports.softmax = operation_1.op({ softmax_: softmax_ });\nexports.logSoftmax = operation_1.op({ logSoftmax_: logSoftmax_ });\n//# sourceMappingURL=softmax.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nfunction mergeRealAndImagArrays(real, imag) {\n    if (real.length !== imag.length) {\n        throw new Error(\"Cannot merge real and imag arrays of different lengths. real:\" +\n            (real.length + \", imag: \" + imag.length + \".\"));\n    }\n    var result = new Float32Array(real.length * 2);\n    for (var i = 0; i < result.length; i += 2) {\n        result[i] = real[i / 2];\n        result[i + 1] = imag[i / 2];\n    }\n    return result;\n}\nexports.mergeRealAndImagArrays = mergeRealAndImagArrays;\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nfunction splitRealAndImagArrays(complex) {\n    var real = new Float32Array(complex.length / 2);\n    var imag = new Float32Array(complex.length / 2);\n    for (var i = 0; i < complex.length; i += 2) {\n        real[i / 2] = complex[i];\n        imag[i / 2] = complex[i + 1];\n    }\n    return { real: real, imag: imag };\n}\nexports.splitRealAndImagArrays = splitRealAndImagArrays;\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithEvenIndex(complex) {\n    var len = Math.ceil(complex.length / 4);\n    var real = new Float32Array(len);\n    var imag = new Float32Array(len);\n    for (var i = 0; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real: real, imag: imag };\n}\nexports.complexWithEvenIndex = complexWithEvenIndex;\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithOddIndex(complex) {\n    var len = Math.floor(complex.length / 4);\n    var real = new Float32Array(len);\n    var imag = new Float32Array(len);\n    for (var i = 2; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real: real, imag: imag };\n}\nexports.complexWithOddIndex = complexWithOddIndex;\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nfunction getComplexWithIndex(complex, index) {\n    var real = complex[index * 2];\n    var imag = complex[index * 2 + 1];\n    return { real: real, imag: imag };\n}\nexports.getComplexWithIndex = getComplexWithIndex;\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nfunction assignToTypedArray(data, real, imag, index) {\n    data[index * 2] = real;\n    data[index * 2 + 1] = imag;\n}\nexports.assignToTypedArray = assignToTypedArray;\n/**\n * Make the list of exponent terms used by FFT.\n */\nfunction exponents(n, inverse) {\n    var real = new Float32Array(n / 2);\n    var imag = new Float32Array(n / 2);\n    for (var i = 0; i < Math.ceil(n / 2); i++) {\n        var x = (inverse ? 2 : -2) * Math.PI * (i / n);\n        real[i] = Math.cos(x);\n        imag[i] = Math.sin(x);\n    }\n    return { real: real, imag: imag };\n}\nexports.exponents = exponents;\n/**\n * Make the exponent term used by FFT.\n */\nfunction exponent(k, n, inverse) {\n    var x = (inverse ? 2 : -2) * Math.PI * (k / n);\n    var real = Math.cos(x);\n    var imag = Math.sin(x);\n    return { real: real, imag: imag };\n}\nexports.exponent = exponent;\n//# sourceMappingURL=complex_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Shared implementation of the split kernel across WebGL and CPU. */\nfunction split(x, sizeSplits, axis) {\n    var begin = new Array(x.rank).fill(0);\n    var size = x.shape.slice();\n    return sizeSplits.map(function (s) {\n        size[axis] = s;\n        var slice = x.slice(begin, size);\n        begin[axis] += s;\n        return slice;\n    });\n}\nexports.split = split;\n//# sourceMappingURL=split_shared.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\nvar array_ops_1 = require(\"../ops/array_ops\");\nfunction tile(xBuf, reps) {\n    var newShape = new Array(xBuf.rank);\n    for (var i = 0; i < newShape.length; i++) {\n        newShape[i] = xBuf.shape[i] * reps[i];\n    }\n    var result = array_ops_1.buffer(newShape, xBuf.dtype);\n    for (var i = 0; i < result.values.length; ++i) {\n        var newLoc = result.indexToLoc(i);\n        var originalLoc = new Array(xBuf.rank);\n        for (var i_1 = 0; i_1 < originalLoc.length; i_1++) {\n            originalLoc[i_1] = newLoc[i_1] % xBuf.shape[i_1];\n        }\n        var originalIndex = xBuf.locToIndex(originalLoc);\n        result.values[i] = xBuf.values[originalIndex];\n    }\n    return result.toTensor();\n}\nexports.tile = tile;\n//# sourceMappingURL=tile_impl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** An implementation of the TopK kernel shared between webgl and cpu. */\nvar tensor_ops_1 = require(\"../ops/tensor_ops\");\nvar util_1 = require(\"../util\");\nfunction topkImpl(x, xShape, xDtype, k, sorted) {\n    // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n    var lastDim = xShape[xShape.length - 1];\n    var _a = [x.length / lastDim, lastDim], batch = _a[0], size = _a[1];\n    var allTopKVals = util_1.getTypedArrayFromDType(xDtype, batch * k);\n    var allTopKIndices = util_1.getTypedArrayFromDType('int32', batch * k);\n    for (var b = 0; b < batch; b++) {\n        var offset = b * size;\n        var vals = x.subarray(offset, offset + size);\n        var valAndInd = [];\n        for (var i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort(function (a, b) { return b.value - a.value; });\n        var outOffset = b * k;\n        var topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n        var topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n        for (var i = 0; i < k; i++) {\n            topKVals[i] = valAndInd[i].value;\n            topKIndices[i] = valAndInd[i].index;\n        }\n    }\n    // Reshape back to the original input shape, except that the last\n    // dimension is k.\n    var outputShape = xShape.slice();\n    outputShape[outputShape.length - 1] = k;\n    return [\n        tensor_ops_1.tensor(allTopKVals, outputShape, xDtype),\n        tensor_ops_1.tensor(allTopKIndices, outputShape, 'int32')\n    ];\n}\nexports.topkImpl = topkImpl;\n//# sourceMappingURL=topk_impl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nexports.COMPLEX_MULTIPLY = {\n    REAL: 'return areal * breal - aimag * bimag;',\n    IMAG: 'return areal * bimag + aimag * breal;'\n};\nvar BinaryOpComplexProgram = /** @class */ (function () {\n    function BinaryOpComplexProgram(op, aShape, bShape) {\n        this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    \";\n    }\n    return BinaryOpComplexProgram;\n}());\nexports.BinaryOpComplexProgram = BinaryOpComplexProgram;\n//# sourceMappingURL=binaryop_complex_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar CHECK_NAN_SNIPPET = \"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\";\nexports.ADD = 'return a + b;';\nexports.SUB = 'return a - b;';\nexports.MUL = 'return a * b;';\n// Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\nexports.DIV = \"\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;\";\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nexports.INT_DIV = \"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n\";\nexports.POW = \"\\nif(a < 0.0 && floor(b) < b){\\n  return NAN;\\n}\\nif (b == 0.0) {\\n  return 1.0;\\n}\\nreturn (round(mod(b, 2.0)) != 1) ?\\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\";\nexports.SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexports.EQUAL = \"return float(a == b);\";\nexports.NOT_EQUAL = \"return float(a != b);\";\nexports.LESS = \"return float(a < b);\";\nexports.LESS_EQUAL = \"return float(a <= b);\";\nexports.GREATER = \"return float(a > b);\";\nexports.GREATER_EQUAL = \"return float(a >= b);\";\nexports.LOGICAL_AND = \"return float(a >= 1.0 && b >= 1.0);\";\nexports.LOGICAL_OR = \"return float(a >= 1.0 || b >= 1.0);\";\nexports.MAX = CHECK_NAN_SNIPPET + \"\\n  return max(a, b);\\n\";\nexports.MIN = CHECK_NAN_SNIPPET + \"\\n  return min(a, b);\\n\";\nexports.MOD = \"if (b == 0.0) return NAN;\\n  return mod(a, b);\";\nexports.ATAN2 = CHECK_NAN_SNIPPET + \"\\n  return atan(a, b);\\n\";\nexports.ELU_DER = \"return (b >= 1.0) ? a : a * (b + 1.0);\";\nexports.PRELU = \"return (a < 0.) ? b * a : a;\";\nvar BinaryOpProgram = /** @class */ (function () {\n    function BinaryOpProgram(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = \"\\n      float binaryOperation(float a, float b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \";\n    }\n    return BinaryOpProgram;\n}());\nexports.BinaryOpProgram = BinaryOpProgram;\n//# sourceMappingURL=binaryop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar util_1 = require(\"../../util\");\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar CHECK_NAN_SNIPPET = \"\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\";\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\nexports.DIV = \"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n\";\nexports.INT_DIV = \"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n\";\nexports.POW = \"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  \" +\n    CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexports.PRELU = \"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\";\nexports.ELU_DER = \"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\";\nexports.ATAN2 = \"\\n  vec4 result = atan(a, b);\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" +\n    CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexports.EQUAL = \"\\n  return vec4(equal(a, b));\\n\";\nexports.NOT_EQUAL = \"\\n  return vec4(notEqual(a, b));\\n\";\nexports.LESS = \"\\n  return vec4(lessThan(a, b));\\n\";\nexports.LESS_EQUAL = \"\\n  return vec4(lessThanEqual(a, b));\\n\";\nexports.GREATER = \"\\n  return vec4(greaterThan(a, b));\\n\";\nexports.GREATER_EQUAL = \"\\n  return vec4(greaterThanEqual(a, b));\\n\";\nexports.LOGICAL_AND = \"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n\";\nexports.LOGICAL_OR = \"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n\";\nexports.MAX = \"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" +\n    CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexports.MIN = \"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \" +\n    CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nexports.MOD = \"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  \" +\n    CHECK_NAN_SNIPPET + \"\\n  return result;\\n\";\nvar BinaryOpPackedProgram = /** @class */ (function () {\n    function BinaryOpPackedProgram(op, aShape, bShape, checkOutOfBounds) {\n        if (checkOutOfBounds === void 0) { checkOutOfBounds = false; }\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape =\n            broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n        var rank = this.outputShape.length;\n        var checkOutOfBoundsString = '';\n        if (checkOutOfBounds) {\n            if (rank === 0 || util_1.sizeFromShape(this.outputShape) === 1) {\n                checkOutOfBoundsString = \"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";\n            }\n            else {\n                var dtype = shader_compiler_1.getCoordsDataType(rank);\n                checkOutOfBoundsString = \"\\n          \" + dtype + \" coords = getOutputCoords();\\n        \";\n                if (rank === 1) {\n                    checkOutOfBoundsString += \"\\n            result.y = (coords + 1) >= \" + this.outputShape[0] + \" ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \";\n                }\n                else {\n                    var channels = packing_util_1.getChannels('coords', rank);\n                    checkOutOfBoundsString += \"\\n            bool nextRowOutOfBounds =\\n              (\" + channels[rank - 2] + \" + 1) >= \" + this.outputShape[rank - 2] + \";\\n            bool nextColOutOfBounds =\\n              (\" + channels[rank - 1] + \" + 1) >= \" + this.outputShape[rank - 1] + \";\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \";\n                }\n            }\n        }\n        this.userCode = \"\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        \" + op + \"\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        \" + checkOutOfBoundsString + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return BinaryOpPackedProgram;\n}());\nexports.BinaryOpPackedProgram = BinaryOpPackedProgram;\n//# sourceMappingURL=binaryop_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.COMPLEX_FFT = {\n    REAL: 'return real * expR - imag * expI;',\n    IMAG: 'return real * expI + imag * expR;'\n};\nvar FFTProgram = /** @class */ (function () {\n    function FFTProgram(op, inputShape, inverse) {\n        this.variableNames = ['real', 'imag'];\n        var innerDim = inputShape[1];\n        this.outputShape = inputShape;\n        var exponentMultiplierSnippet = inverse ? \"2.0 * \" + Math.PI : \"-2.0 * \" + Math.PI;\n        var resultDenominator = inverse ? innerDim + \".0\" : '1.0';\n        this.userCode = \"\\n      const float exponentMultiplier = \" + exponentMultiplierSnippet + \";\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        \" + op + \"\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(\" + innerDim + \");\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < \" + innerDim + \"; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / \" + resultDenominator + \";\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    \";\n    }\n    return FFTProgram;\n}());\nexports.FFTProgram = FFTProgram;\n//# sourceMappingURL=fft_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar canvas_util_1 = require(\"./canvas_util\");\nvar gpgpu_util = require(\"./gpgpu_util\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nvar GPGPUContext = /** @class */ (function () {\n    function GPGPUContext(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.vertexAttrsAreBound = false;\n        this.itemsToPoll = [];\n        var glVersion = environment_1.env().getNumber('WEBGL_VERSION');\n        if (gl != null) {\n            this.gl = gl;\n            canvas_util_1.setWebGLContext(glVersion, gl);\n        }\n        else {\n            this.gl = canvas_util_1.getWebGLContext(glVersion);\n        }\n        // WebGL 2.0 enables texture floats without an extension.\n        var COLOR_BUFFER_FLOAT = 'WEBGL_color_buffer_float';\n        var COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if (environment_1.env().getNumber('WEBGL_VERSION') === 1) {\n            var TEXTURE_FLOAT = 'OES_texture_float';\n            var TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, this.debug, TEXTURE_FLOAT);\n            if (webgl_util.hasExtension(this.gl, TEXTURE_HALF_FLOAT)) {\n                this.textureHalfFloatExtension = webgl_util.getExtensionOrThrow(this.gl, this.debug, TEXTURE_HALF_FLOAT);\n            }\n            else if (environment_1.env().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support half float textures, yet the ' +\n                    'environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n            this.colorBufferFloatExtension = this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension = webgl_util.getExtensionOrThrow(this.gl, this.debug, COLOR_BUFFER_HALF_FLOAT);\n            }\n            else if (environment_1.env().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support color renderable half floats, yet ' +\n                    'the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n        }\n        else {\n            COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n            if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_FLOAT)) {\n                this.colorBufferFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            }\n            else if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            }\n            else {\n                throw new Error('GL context does not support color renderable floats');\n            }\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl, this.debug);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl, this.debug);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl, this.debug);\n        this.textureConfig =\n            tex_util.getTextureConfig(this.gl, this.textureHalfFloatExtension);\n    }\n    Object.defineProperty(GPGPUContext.prototype, \"debug\", {\n        get: function () {\n            return environment_1.env().getBool('DEBUG');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GPGPUContext.prototype.dispose = function () {\n        var _this = this;\n        if (this.disposed) {\n            return;\n        }\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        var gl = this.gl;\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.finish(); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.deleteFramebuffer(_this.framebuffer); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.deleteBuffer(_this.indexBuffer); });\n        this.disposed = true;\n    };\n    GPGPUContext.prototype.createFloat32MatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat32MatrixTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n    };\n    GPGPUContext.prototype.createFloat16MatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat16MatrixTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n    };\n    GPGPUContext.prototype.createUnsignedBytesMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createUnsignedBytesMatrixTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n    };\n    GPGPUContext.prototype.uploadPixelDataToTexture = function (texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, this.debug, texture, pixels);\n    };\n    GPGPUContext.prototype.uploadDenseMatrixToTexture = function (texture, width, height, data) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadDenseMatrixToTexture(this.gl, this.debug, texture, width, height, data, this.textureConfig);\n    };\n    GPGPUContext.prototype.createFloat16PackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat16PackedMatrixTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n    };\n    GPGPUContext.prototype.createPackedMatrixTexture = function (rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n    };\n    GPGPUContext.prototype.deleteMatrixTexture = function (texture) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.debug, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.deleteTexture(texture); });\n    };\n    GPGPUContext.prototype.downloadByteEncodedFloatMatrixFromOutputTexture = function (texture, rows, columns) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadByteEncodedFloatMatrixFromOutputTexture(_this.gl, _this.debug, rows, columns, _this.textureConfig); });\n    };\n    GPGPUContext.prototype.downloadPackedMatrixFromBuffer = function (buffer, batch, rows, columns, physicalRows, physicalCols) {\n        return gpgpu_util.downloadPackedMatrixFromBuffer(this.gl, buffer, batch, rows, columns, physicalRows, physicalCols, this.textureConfig);\n    };\n    GPGPUContext.prototype.downloadFloat32MatrixFromBuffer = function (buffer, size) {\n        return gpgpu_util.downloadFloat32MatrixFromBuffer(this.gl, buffer, size);\n    };\n    GPGPUContext.prototype.createBufferFromTexture = function (texture, rows, columns) {\n        this.bindTextureToFrameBuffer(texture);\n        var result = gpgpu_util.createBufferFromOutputTexture(this.gl, this.debug, rows, columns, this.textureConfig);\n        this.unbindTextureToFrameBuffer();\n        return result;\n    };\n    GPGPUContext.prototype.createAndWaitForFence = function () {\n        var fenceContext = this.createFence(this.gl);\n        return this.pollFence(fenceContext);\n    };\n    GPGPUContext.prototype.createFence = function (gl) {\n        var _this = this;\n        var query;\n        var isFencePassed;\n        if (environment_1.env().getBool('WEBGL_FENCE_API_ENABLED')) {\n            var gl2_1 = gl;\n            var sync_1 = gl2_1.fenceSync(gl2_1.SYNC_GPU_COMMANDS_COMPLETE, 0);\n            gl.flush();\n            isFencePassed = function () {\n                var status = gl2_1.clientWaitSync(sync_1, 0, 0);\n                return status === gl2_1.ALREADY_SIGNALED ||\n                    status === gl2_1.CONDITION_SATISFIED;\n            };\n            query = sync_1;\n        }\n        else if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            query = this.beginQuery();\n            this.endQuery();\n            isFencePassed = function () { return _this.isQueryAvailable(query, environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION')); };\n        }\n        else {\n            // If we have no way to fence, return true immediately. This will fire in\n            // WebGL 1.0 when there is no disjoint query timer. In this case, because\n            // the fence passes immediately, we'll immediately ask for a download of\n            // the texture, which will cause the UI thread to hang.\n            isFencePassed = function () { return true; };\n        }\n        return { query: query, isFencePassed: isFencePassed };\n    };\n    GPGPUContext.prototype.downloadMatrixFromPackedTexture = function (texture, physicalRows, physicalCols) {\n        var _this = this;\n        return this.downloadMatrixDriver(texture, function () { return gpgpu_util.downloadMatrixFromPackedOutputTexture(_this.gl, _this.debug, physicalRows, physicalCols); });\n    };\n    GPGPUContext.prototype.createProgram = function (fragmentShaderSource) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        var fragmentShader = webgl_util.createFragmentShader(gl, this.debug, fragmentShaderSource);\n        var vertexShader = gpgpu_util.createVertexShader(gl, this.debug);\n        var program = webgl_util.createProgram(gl, this.debug);\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.attachShader(program, vertexShader); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.attachShader(program, fragmentShader); });\n        webgl_util.linkProgram(gl, this.debug, program);\n        if (this.debug) {\n            webgl_util.validateProgram(gl, this.debug, program);\n        }\n        if (!this.vertexAttrsAreBound) {\n            this.setProgram(program);\n            this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(gl, this.debug, this.program, this.vertexBuffer);\n        }\n        return program;\n    };\n    GPGPUContext.prototype.deleteProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.deleteProgram(program); });\n        }\n    };\n    GPGPUContext.prototype.setProgram = function (program) {\n        var _this = this;\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.debug) {\n            webgl_util.validateProgram(this.gl, this.debug, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.useProgram(program); });\n    };\n    GPGPUContext.prototype.getUniformLocation = function (program, uniformName, shouldThrow) {\n        if (shouldThrow === void 0) { shouldThrow = true; }\n        this.throwIfDisposed();\n        if (shouldThrow) {\n            return webgl_util.getProgramUniformLocationOrThrow(this.gl, this.debug, program, uniformName);\n        }\n        else {\n            return webgl_util.getProgramUniformLocation(this.gl, program, uniformName);\n        }\n    };\n    GPGPUContext.prototype.getAttributeLocation = function (program, attribute) {\n        var _this = this;\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.getAttribLocation(program, attribute); });\n    };\n    GPGPUContext.prototype.getUniformLocationNoThrow = function (program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    };\n    GPGPUContext.prototype.setInputMatrixTexture = function (inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, this.debug, this.program, inputMatrixTexture, uniformLocation, textureUnit);\n    };\n    GPGPUContext.prototype.setOutputMatrixTexture = function (outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixTexture = function (outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    };\n    GPGPUContext.prototype.setOutputPackedMatrixWriteRegion = function (startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    };\n    GPGPUContext.prototype.debugValidate = function () {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.debug, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    };\n    GPGPUContext.prototype.executeProgram = function () {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        var gl = this.gl;\n        if (this.debug) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0); });\n    };\n    GPGPUContext.prototype.blockUntilAllProgramsCompleted = function () {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.finish(); });\n    };\n    GPGPUContext.prototype.getQueryTimerExtension = function () {\n        if (this.disjointQueryTimerExtension == null) {\n            this.disjointQueryTimerExtension =\n                webgl_util.getExtensionOrThrow(this.gl, this.debug, environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ?\n                    'EXT_disjoint_timer_query_webgl2' :\n                    'EXT_disjoint_timer_query');\n        }\n        return this.disjointQueryTimerExtension;\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL2 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.getQueryTimerExtensionWebGL1 = function () {\n        return this.getQueryTimerExtension();\n    };\n    GPGPUContext.prototype.beginQuery = function () {\n        if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_1 = this.getQueryTimerExtensionWebGL2();\n            var query_1 = gl2.createQuery();\n            gl2.beginQuery(ext_1.TIME_ELAPSED_EXT, query_1);\n            return query_1;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        var query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        return query;\n    };\n    GPGPUContext.prototype.endQuery = function () {\n        if (environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            var gl2 = this.gl;\n            var ext_2 = this.getQueryTimerExtensionWebGL2();\n            gl2.endQuery(ext_2.TIME_ELAPSED_EXT);\n            return;\n        }\n        var ext = this.getQueryTimerExtensionWebGL1();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    };\n    GPGPUContext.prototype.waitForQueryAndGetTime = function (query) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, util.repeatedTry(function () { return _this.disposed || // while testing contexts are created / disposed\n                            // in rapid succession, so without this check we\n                            // may poll for the query timer indefinitely\n                            _this.isQueryAvailable(query, environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION')); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.getQueryTime(query, environment_1.env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'))];\n                }\n            });\n        });\n    };\n    GPGPUContext.prototype.getQueryTime = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return null;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n    };\n    GPGPUContext.prototype.isQueryAvailable = function (query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return true;\n        }\n        if (queryTimerVersion === 2) {\n            var gl2 = this.gl;\n            var ext = this.getQueryTimerExtensionWebGL2();\n            var available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n        else {\n            var ext = this.getQueryTimerExtensionWebGL1();\n            var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n    };\n    GPGPUContext.prototype.pollFence = function (fenceContext) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.addItemToPoll(function () { return fenceContext.isFencePassed(); }, function () { return resolve(); });\n        });\n    };\n    GPGPUContext.prototype.pollItems = function () {\n        // Find the last query that has finished.\n        var index = linearSearchLastTrue(this.itemsToPoll.map(function (x) { return x.isDoneFn; }));\n        for (var i = 0; i <= index; ++i) {\n            var resolveFn = this.itemsToPoll[i].resolveFn;\n            resolveFn();\n        }\n        this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n    };\n    GPGPUContext.prototype.addItemToPoll = function (isDoneFn, resolveFn) {\n        var _this = this;\n        this.itemsToPoll.push({ isDoneFn: isDoneFn, resolveFn: resolveFn });\n        if (this.itemsToPoll.length > 1) {\n            // We already have a running loop that polls.\n            return;\n        }\n        // Start a new loop that polls.\n        util.repeatedTry(function () {\n            _this.pollItems();\n            // End the loop if no more items to poll.\n            return _this.itemsToPoll.length === 0;\n        });\n    };\n    GPGPUContext.prototype.bindTextureToFrameBuffer = function (texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, this.debug, texture, this.framebuffer);\n        if (this.debug) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    };\n    GPGPUContext.prototype.unbindTextureToFrameBuffer = function () {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.debug, this.outputTexture, this.framebuffer);\n            if (this.debug) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.debug, this.framebuffer);\n        }\n    };\n    GPGPUContext.prototype.downloadMatrixDriver = function (texture, downloadAndDecode) {\n        this.bindTextureToFrameBuffer(texture);\n        var result = downloadAndDecode();\n        this.unbindTextureToFrameBuffer();\n        return result;\n    };\n    GPGPUContext.prototype.setOutputMatrixTextureDriver = function (outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        var gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, this.debug, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.debug) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.viewport(0, 0, width, height); });\n        webgl_util.callAndCheck(gl, this.debug, function () { return gl.scissor(0, 0, width, height); });\n    };\n    GPGPUContext.prototype.setOutputMatrixWriteRegionDriver = function (x, y, width, height) {\n        var _this = this;\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, this.debug, function () { return _this.gl.scissor(x, y, width, height); });\n    };\n    GPGPUContext.prototype.throwIfDisposed = function () {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    };\n    GPGPUContext.prototype.throwIfNoProgram = function () {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    };\n    return GPGPUContext;\n}());\nexports.GPGPUContext = GPGPUContext;\n/**\n * Finds the index of the last true element using linear search.\n * Note: We can't do binary search because Chrome expects us to explicitly\n * test all fences before download:\n * https://github.com/tensorflow/tfjs/issues/1145\n */\nfunction linearSearchLastTrue(arr) {\n    var i = 0;\n    for (; i < arr.length; ++i) {\n        var isDone = arr[i]();\n        if (!isDone) {\n            break;\n        }\n    }\n    return i - 1;\n}\nexports.linearSearchLastTrue = linearSearchLastTrue;\n//# sourceMappingURL=gpgpu_context.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar tex_util = require(\"./tex_util\");\nvar webgl_util = require(\"./webgl_util\");\nfunction createVertexShader(gl, debug) {\n    var glsl = glsl_version_1.getGlslDifferences();\n    var vertexShaderSource = glsl.version + \"\\n    precision highp float;\\n    \" + glsl.attribute + \" vec3 clipSpacePos;\\n    \" + glsl.attribute + \" vec2 uv;\\n    \" + glsl.varyingVs + \" vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\";\n    return webgl_util.createVertexShader(gl, debug, vertexShaderSource);\n}\nexports.createVertexShader = createVertexShader;\nfunction createVertexBuffer(gl, debug) {\n    // [x y z u v] * [upper-left, lower-left, upper-right, lower-right]\n    var vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, debug, vertexArray);\n}\nexports.createVertexBuffer = createVertexBuffer;\nfunction createIndexBuffer(gl, debug) {\n    // OpenGL (and WebGL) have \"CCW == front\" winding\n    var triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, debug, triangleVertexIndices);\n}\nexports.createIndexBuffer = createIndexBuffer;\nfunction createAndConfigureTexture(gl, debug, width, height, internalFormat, textureFormat, textureType) {\n    webgl_util.validateTextureSize(width, height);\n    var texture = webgl_util.createTexture(gl, debug);\n    var tex2d = gl.TEXTURE_2D;\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(tex2d, texture); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, textureFormat, textureType, null); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n    return texture;\n}\nfunction createFloat32MatrixTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    return createAndConfigureTexture(gl, debug, width, height, textureConfig.internalFormatFloat, textureConfig.textureFormatFloat, gl.FLOAT);\n}\nexports.createFloat32MatrixTexture = createFloat32MatrixTexture;\nfunction createFloat16MatrixTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    return createAndConfigureTexture(gl, debug, width, height, textureConfig.internalFormatHalfFloat, textureConfig.textureFormatFloat, textureConfig.textureTypeHalfFloat);\n}\nexports.createFloat16MatrixTexture = createFloat16MatrixTexture;\nfunction createUnsignedBytesMatrixTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    return createAndConfigureTexture(gl, debug, width, height, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\n}\nexports.createUnsignedBytesMatrixTexture = createUnsignedBytesMatrixTexture;\nfunction createPackedMatrixTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    return createAndConfigureTexture(gl, debug, width, height, textureConfig.internalFormatPackedFloat, gl.RGBA, gl.FLOAT);\n}\nexports.createPackedMatrixTexture = createPackedMatrixTexture;\nfunction createFloat16PackedMatrixTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns), width = _a[0], height = _a[1];\n    return createAndConfigureTexture(gl, debug, width, height, textureConfig.internalFormatPackedHalfFloat, gl.RGBA, textureConfig.textureTypeHalfFloat);\n}\nexports.createFloat16PackedMatrixTexture = createFloat16PackedMatrixTexture;\nfunction bindVertexProgramAttributeStreams(gl, debug, program, vertexBuffer) {\n    var posOffset = 0; // x is the first buffer element\n    var uvOffset = 3 * 4; // uv comes after [x y z]\n    var stride = (3 * 4) + (2 * 4); // xyz + uv, each entry is 4-byte float.\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer); });\n    var success = webgl_util.bindVertexBufferToProgramAttribute(gl, debug, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n    return success &&\n        webgl_util.bindVertexBufferToProgramAttribute(gl, debug, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nexports.bindVertexProgramAttributeStreams = bindVertexProgramAttributeStreams;\nfunction uploadDenseMatrixToTexture(gl, debug, texture, width, height, data, textureConfig) {\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    var dataForUpload, texelDataType, internalFormat;\n    if (data instanceof Uint8Array) {\n        dataForUpload = new Uint8Array(width * height * 4);\n        texelDataType = gl.UNSIGNED_BYTE;\n        internalFormat = gl.RGBA;\n    }\n    else {\n        dataForUpload = new Float32Array(width * height * 4);\n        texelDataType = gl.FLOAT;\n        internalFormat = textureConfig.internalFormatPackedFloat;\n    }\n    dataForUpload.set(data);\n    webgl_util.callAndCheck(gl, debug, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, gl.RGBA, texelDataType, dataForUpload); });\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadDenseMatrixToTexture = uploadDenseMatrixToTexture;\nfunction uploadPixelDataToTexture(gl, debug, texture, pixels) {\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n    if (pixels.data instanceof Uint8Array) {\n        webgl_util.callAndCheck(gl, debug, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pixels.width, pixels.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels.data); });\n    }\n    else {\n        webgl_util.callAndCheck(gl, debug, function () { return gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels); });\n    }\n    webgl_util.callAndCheck(gl, debug, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.uploadPixelDataToTexture = uploadPixelDataToTexture;\nfunction createBufferFromOutputTexture(gl2, debug, rows, columns, textureConfig) {\n    // Create and bind the buffer.\n    var buffer = gl2.createBuffer();\n    webgl_util.callAndCheck(gl2, debug, function () { return gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer); });\n    // Initialize the buffer to the size of the texture in bytes.\n    var bytesPerFloat = 4;\n    var valuesPerTexel = 4;\n    var bufferSizeBytes = bytesPerFloat * valuesPerTexel * rows * columns;\n    webgl_util.callAndCheck(gl2, debug, function () { return gl2.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl2.STREAM_READ); });\n    // Enqueue a command on the GPU command queue to copy of texture into the\n    // buffer.\n    webgl_util.callAndCheck(gl2, debug, function () { return gl2.readPixels(0, 0, columns, rows, gl2.RGBA, gl2.FLOAT, 0); });\n    webgl_util.callAndCheck(gl2, debug, function () { return gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null); });\n    return buffer;\n}\nexports.createBufferFromOutputTexture = createBufferFromOutputTexture;\nfunction downloadFloat32MatrixFromBuffer(gl, buffer, size) {\n    var gl2 = gl;\n    var downloadTarget = new Float32Array(size);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nexports.downloadFloat32MatrixFromBuffer = downloadFloat32MatrixFromBuffer;\nfunction downloadByteEncodedFloatMatrixFromOutputTexture(gl, debug, rows, columns, textureConfig) {\n    var _a = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns), w = _a[0], h = _a[1];\n    var numChannels = 4;\n    var downloadTarget = new Uint8Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, numChannels));\n    webgl_util.callAndCheck(gl, debug, function () { return gl.readPixels(0, 0, w, h, textureConfig.downloadTextureFormat, gl.UNSIGNED_BYTE, downloadTarget); });\n    // By wrapping the buffer in a Float32Array, we use native browser IEEE 754\n    // decoding of the 4 bytes that back each 32 bit float.\n    return new Float32Array(downloadTarget.buffer);\n}\nexports.downloadByteEncodedFloatMatrixFromOutputTexture = downloadByteEncodedFloatMatrixFromOutputTexture;\nfunction downloadPackedMatrixFromBuffer(gl, buffer, batch, rows, cols, physicalRows, physicalCols, textureConfig) {\n    var gl2 = gl;\n    var downloadTarget = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(physicalRows, physicalCols));\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nexports.downloadPackedMatrixFromBuffer = downloadPackedMatrixFromBuffer;\nfunction downloadMatrixFromPackedOutputTexture(gl, debug, physicalRows, physicalCols) {\n    var packedRGBA = new Float32Array(physicalRows * physicalCols * 4);\n    webgl_util.callAndCheck(gl, debug, function () { return gl.readPixels(0, 0, physicalCols, physicalRows, gl.RGBA, gl.FLOAT, packedRGBA); });\n    return packedRGBA;\n}\nexports.downloadMatrixFromPackedOutputTexture = downloadMatrixFromPackedOutputTexture;\n//# sourceMappingURL=gpgpu_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERF_P = 0.3275911;\nexports.ERF_A1 = 0.254829592;\nexports.ERF_A2 = -0.284496736;\nexports.ERF_A3 = 1.421413741;\nexports.ERF_A4 = -1.453152027;\nexports.ERF_A5 = 1.061405429;\n//# sourceMappingURL=erf_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LINEAR = \"return x;\";\nexports.LOG = \"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n\";\nexports.RELU = \"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexports.RELU6 = \"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\";\nexports.ELU = \"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n\";\nvar UnaryOpPackedProgram = /** @class */ (function () {\n    function UnaryOpPackedProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = \"\\n      vec4 unaryOperation(vec4 x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    return UnaryOpPackedProgram;\n}());\nexports.UnaryOpPackedProgram = UnaryOpPackedProgram;\n//# sourceMappingURL=unaryop_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar axis_util_1 = require(\"./axis_util\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar compare_1 = require(\"./compare\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar operation_1 = require(\"./operation\");\nvar segment_util_1 = require(\"./segment_util\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n */\n/** @doc {heading: 'Operations', subheading: 'Segment'} */\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'unsortedSegmentSum');\n    var $segmentIds = tensor_util_env_1.convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n    util_1.assert(util_1.isInt(numSegments), function () { return 'numSegments must be of dtype int'; });\n    var gradFunc = function (dy, saved) {\n        var $segmentIds = saved[0];\n        var derX = function () {\n            return gatherDropNegatives(dy, $segmentIds);\n        };\n        return { $x: derX };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.unsortedSegmentSum($x, $segmentIds, numSegments);\n        save([$segmentIds]);\n        return res;\n    }, { $x: $x }, gradFunc);\n}\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction gather_(x, indices, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'gather');\n    var $indices = tensor_util_env_1.convertToTensor(indices, 'indices', 'gather', 'int32');\n    axis = util_1.parseAxisParam(axis, $x.shape)[0];\n    var shapeInfo = segment_util_1.collectGatherOpShapeInfo($x, $indices, axis);\n    var grad = function (dy, saved) {\n        var $indices = saved[0];\n        var derX = function () {\n            var paramsShape = $x.shape;\n            var indicesSize = $indices.size;\n            var outerShape = paramsShape.slice(0, axis);\n            var outerDims = outerShape.length;\n            var innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n            var innerDims = innerShape.length;\n            var outerAxesIndices = arrayRange(0, outerDims);\n            var innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n            var valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n            var values = dy.reshape(valuesShape);\n            var reshapedIndices = $indices.reshape([indicesSize]);\n            var transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n            var valuesTranspose = values.transpose(transposeDims);\n            var paramsGrad = exports.unsortedSegmentSum(valuesTranspose, reshapedIndices, $x.shape[axis]);\n            var invertTransposeDims = axis_util_1.getUndoAxesPermutation(transposeDims);\n            paramsGrad = paramsGrad.transpose(invertTransposeDims);\n            return paramsGrad;\n        };\n        return { $x: derX };\n    };\n    return (engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.gather($x, $indices.flatten(), axis);\n        save([$indices]);\n        return res;\n    }, { $x: $x }, grad)).reshape(shapeInfo.outputShape);\n}\nfunction arrayRange(start, stop) {\n    var result = [];\n    for (var i = start; i < stop; ++i) {\n        result.push(i);\n    }\n    return result;\n}\nfunction arrayConcat(arrays) {\n    var result = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = 0; j < arrays[i].length; ++j) {\n            result.push(arrays[i][j]);\n        }\n    }\n    return result;\n}\nfunction gatherDropNegatives(x, indices) {\n    // Helper function for unsorted segment ops. Gathers params for\n    // positive segment ids and gathers 0 for inputs with negative segment id.\n    // Mirrors _GatherDropNegatives from tensorflow/python/ops/math_grad.py\n    var zeroClippedIndices = binary_ops_1.maximum(indices, tensor_ops_1.zerosLike(indices));\n    var gathered = exports.gather(x, zeroClippedIndices);\n    var isPositive = compare_1.greaterEqual(indices, tensor_ops_1.scalar(0, 'int32'));\n    var numIters = gathered.rank - isPositive.rank;\n    for (var i = 0; i < numIters; ++i) {\n        isPositive = array_ops_1.expandDims(isPositive, i + 1);\n    }\n    isPositive = logical_ops_1.logicalAnd(isPositive, tensor_ops_1.ones(gathered.shape, 'bool'));\n    var zeroSlice = tensor_ops_1.zerosLike(gathered);\n    return logical_ops_1.where(isPositive, gathered, zeroSlice);\n}\nexports.gather = operation_1.op({ gather_: gather_ });\nexports.unsortedSegmentSum = operation_1.op({ unsortedSegmentSum_: unsortedSegmentSum_ });\n//# sourceMappingURL=segment_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_1 = require(\"../tensor_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar broadcast_util_1 = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.notEqualStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction notEqual_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'notEqual');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'notEqual');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.notEqual($a, $b); }, { $a: $a, $b: $b });\n}\n/**\n * Strict version of `tf.notEqual` that forces `a` and `b` to be of the same\n * shape.\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same shape and dtype as\n *     `a`.\n */\nfunction notEqualStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'notEqualStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'notEqualStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in notEqualStrict: ');\n    return $a.notEqual($b);\n}\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.lessStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction less_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'less');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'less');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.less($a, $b); }, { $a: $a, $b: $b });\n}\n/**\n * Strict version of `tf.less` that forces `a` and `b` to be of the same\n * shape.\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same shape and dtype as\n *     `a`.\n */\nfunction lessStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'lessStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'lessStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in lessStrict: ');\n    return $a.less($b);\n}\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.equalStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction equal_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'equal');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'equal');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.equal($a, $b); }, { $a: $a, $b: $b });\n}\nfunction equalStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'equalStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'equalStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in equalStrict: ');\n    return $a.equal($b);\n}\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.lessEqualStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction lessEqual_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'lessEqual');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'lessEqual');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.lessEqual($a, $b); }, { $a: $a, $b: $b });\n}\nfunction lessEqualStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'lessEqualStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'lessEqualStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in lessEqualStrict: ');\n    return $a.lessEqual($b);\n}\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.greaterStrict` which has the same signature as this\n * op and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction greater_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'greater');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'greater');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.greater($a, $b); }, { a: $a, b: $b }, null /* grad */, 'Greater');\n}\nfunction greaterStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'greaterStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'greaterStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in greaterStrict: ');\n    return $a.greater($b);\n}\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.greaterEqualStrict` which has the same signature as this\n * op and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction greaterEqual_(a, b) {\n    var _a;\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'greaterEqual');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'greaterEqual');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    broadcast_util_1.assertAndGetBroadcastShape($a.shape, $b.shape);\n    var grad = function (dy, saved) {\n        var $a = saved[0], $b = saved[1];\n        return { $a: function () { return tensor_ops_1.zerosLike($a); }, $b: function () { return tensor_ops_1.zerosLike($b); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.greaterEqual($a, $b);\n        save([$a, $b]);\n        return res;\n    }, { $a: $a, $b: $b }, grad);\n}\nfunction greaterEqualStrict_(a, b) {\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'greaterEqualStrict');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'greaterEqualStrict');\n    util_1.assertShapesMatch($a.shape, $b.shape, 'Error in greaterEqualStrict: ');\n    return $a.greaterEqual($b);\n}\nexports.equal = operation_1.op({ equal_: equal_ });\nexports.equalStrict = operation_1.op({ equalStrict_: equalStrict_ });\nexports.greater = operation_1.op({ greater_: greater_ });\nexports.greaterEqual = operation_1.op({ greaterEqual_: greaterEqual_ });\nexports.greaterEqualStrict = operation_1.op({ greaterEqualStrict_: greaterEqualStrict_ });\nexports.greaterStrict = operation_1.op({ greaterStrict_: greaterStrict_ });\nexports.less = operation_1.op({ less_: less_ });\nexports.lessEqual = operation_1.op({ lessEqual_: lessEqual_ });\nexports.lessEqualStrict = operation_1.op({ lessEqualStrict_: lessEqualStrict_ });\nexports.lessStrict = operation_1.op({ lessStrict_: lessStrict_ });\nexports.notEqual = operation_1.op({ notEqual_: notEqual_ });\nexports.notEqualStrict = operation_1.op({ notEqualStrict_: notEqualStrict_ });\n//# sourceMappingURL=compare.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_1 = require(\"../tensor_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction matMul_(a, b, transposeA, transposeB) {\n    var _a;\n    if (transposeA === void 0) { transposeA = false; }\n    if (transposeB === void 0) { transposeB = false; }\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'matMul');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'matMul');\n    _a = tensor_util_1.makeTypesMatch($a, $b), $a = _a[0], $b = _a[1];\n    var innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    var innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n    var outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    var outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n    var outerDimsA = $a.shape.slice(0, -2);\n    var outerDimsB = $b.shape.slice(0, -2);\n    var batchDimA = util.sizeFromShape(outerDimsA);\n    var batchDimB = util.sizeFromShape(outerDimsB);\n    util.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, function () { return \"Error in matMul: inputs must have the same rank of at least 2, \" +\n        (\"got ranks \" + $a.rank + \" and \" + $b.rank + \".\"); });\n    util.assert(util.arraysEqual(outerDimsA, outerDimsB), function () { return \"Error in matMul: outer dimensions (\" + outerDimsA + \") and (\" +\n        (outerDimsB + \") of Tensors with shapes \" + $a.shape + \" and \") +\n        ($b.shape + \" must match.\"); });\n    util.assert(innerShapeA === innerShapeB, function () { return \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n        (innerShapeB + \") of Tensors with shapes \" + $a.shape + \" and \") +\n        ($b.shape + \" and transposeA=\" + transposeA) +\n        (\" and transposeB=\" + transposeB + \" must match.\"); });\n    var outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n    var a3D = transposeA ? $a.as3D(batchDimA, innerShapeA, outerShapeA) :\n        $a.as3D(batchDimA, outerShapeA, innerShapeA);\n    var b3D = transposeB ? $b.as3D(batchDimB, outerShapeB, innerShapeB) :\n        $b.as3D(batchDimB, innerShapeB, outerShapeB);\n    var grad = function (dy, saved) {\n        var _a = saved, a3D = _a[0], b3D = _a[1];\n        if (!transposeA && !transposeB) {\n            return {\n                a: function () { return dy.matMul(b3D, false, true); },\n                b: function () { return a3D.matMul(dy, true, false); }\n            };\n        }\n        else if (!transposeA && transposeB) {\n            return {\n                a: function () { return dy.matMul(b3D, false, false); },\n                b: function () { return dy.matMul(a3D, true, false); }\n            };\n        }\n        else if (transposeA && !transposeB) {\n            return {\n                a: function () { return b3D.matMul(dy, false, true); },\n                b: function () { return a3D.matMul(dy, false, false); }\n            };\n        }\n        else {\n            return {\n                a: function () { return b3D.matMul(dy, true, true); },\n                b: function () { return dy.matMul(a3D, true, true); }\n            };\n        }\n    };\n    var attrs = { transposeA: transposeA, transposeB: transposeB };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.batchMatMul(a3D, b3D, transposeA, transposeB);\n        save([a3D, b3D]);\n        return res;\n    }, { a: a3D, b: b3D }, grad, 'BatchMatMul', attrs);\n    return res.reshape(outShape);\n}\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction outerProduct_(v1, v2) {\n    var $v1 = tensor_util_env_1.convertToTensor(v1, 'v1', 'outerProduct');\n    var $v2 = tensor_util_env_1.convertToTensor(v2, 'v2', 'outerProduct');\n    util.assert($v1.rank === 1 && $v2.rank === 1, function () { return \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n        ($v1.rank + \" and \" + $v2.rank + \".\"); });\n    return $v1.as2D(-1, 1).matMul($v2.as2D(1, -1));\n}\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction dot_(t1, t2) {\n    var $t1 = tensor_util_env_1.convertToTensor(t1, 't1', 'dot');\n    var $t2 = tensor_util_env_1.convertToTensor(t2, 't2', 'dot');\n    util.assert(($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2), function () { return \"Error in dot: inputs must all be rank 1 or 2, but got ranks \" +\n        ($t1.rank + \" and \" + $t2.rank + \".\"); });\n    var t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n    var t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n    util.assert(t1Inner === t2Inner, function () { return \"Error in dot: inner dimensions of inputs must match, but got \" +\n        (t1Inner + \" and \" + t2Inner + \".\"); });\n    if ($t1.rank === 1 && $t2.rank === 1) {\n        return $t1.as2D(1, -1).matMul($t2.as2D(-1, 1)).asScalar();\n    }\n    else if ($t1.rank === 1 && $t2.rank === 2) {\n        return $t1.as2D(1, -1).matMul($t2.as2D($t2.shape[0], $t2.shape[1])).as1D();\n    }\n    else if ($t1.rank === 2 && $t2.rank === 1) {\n        return $t1.matMul($t2.as2D(-1, 1)).as1D();\n    }\n    else {\n        return $t1.matMul($t2.as2D($t2.shape[0], $t2.shape[1]));\n    }\n}\nexports.matMul = operation_1.op({ matMul_: matMul_ });\nexports.dot = operation_1.op({ dot_: dot_ });\nexports.outerProduct = operation_1.op({ outerProduct_: outerProduct_ });\n//# sourceMappingURL=matmul.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar gradients_1 = require(\"../gradients\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction logSumExp_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'logSumExp');\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var xMax = $x.max(axes, true /* keepDims */);\n    var a = $x.sub(xMax);\n    var b = a.exp();\n    var c = b.sum(axes);\n    var d = c.log();\n    var res = xMax.reshape(d.shape).add(d);\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n        return res.reshape(newShape);\n    }\n    return res;\n}\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction sum_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'sum');\n    if ($x.dtype === 'bool') {\n        $x = $x.toInt();\n    }\n    var axes = util.parseAxisParam(axis, $x.shape);\n    // Use a custom gradient to bypass 2 gradient backprops since sum is used\n    // extremely often.\n    var customOp = gradients_1.customGrad(function (x) {\n        var permutation = axis_util.getAxesPermutation(axes, x.rank);\n        var reductionAxes = axes;\n        var permutedX = x;\n        if (permutation != null) {\n            permutedX = x.transpose(permutation);\n            reductionAxes = axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\n        }\n        var value = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.sum(permutedX, reductionAxes); }, { permutedX: permutedX });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n            value = value.reshape(newShape);\n        }\n        var gradFunc = function (dy) {\n            var expandedDyShape = x.shape.slice();\n            axes.forEach(function (axis) {\n                expandedDyShape[axis] = 1;\n            });\n            var expandedDy = dy.reshape(expandedDyShape);\n            var derX = expandedDy.mul(tensor_ops_1.ones(x.shape, 'float32'));\n            return derX;\n        };\n        return { value: value, gradFunc: gradFunc };\n    });\n    return customOp($x);\n}\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction prod_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'prod');\n    if ($x.dtype === 'bool') {\n        $x = $x.toInt();\n    }\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var permutation = axis_util.getAxesPermutation(axes, $x.rank);\n    var reductionAxes = axes;\n    var permutedX = $x;\n    if (permutation != null) {\n        permutedX = $x.transpose(permutation);\n        reductionAxes = axis_util.getInnerMostAxes(reductionAxes.length, $x.rank);\n    }\n    var value = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.prod(permutedX, reductionAxes); }, { permutedX: permutedX });\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n        value = value.reshape(newShape);\n    }\n    return value;\n}\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction mean_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'mean');\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var shapes = axis_util.computeOutAndReduceShapes($x.shape, axes);\n    var reduceShape = shapes[1];\n    var reduceSize = util.sizeFromShape(reduceShape);\n    // Use a custom gradient to bypass 2 gradient backprops since mean is used\n    // extremely often.\n    var customOp = gradients_1.customGrad(function (x) {\n        var reduceSizeScalar = tensor_ops_1.scalar(reduceSize);\n        // Cast if needed.\n        var xReduce = reduceSizeScalar.dtype === x.dtype ? x : x.cast(reduceSizeScalar.dtype);\n        var res = xReduce.div(reduceSizeScalar);\n        var value = res.sum(axis, keepDims);\n        var gradFunc = function (dy) {\n            var expandedDyShape = x.shape.slice();\n            axes.forEach(function (axis) {\n                expandedDyShape[axis] = 1;\n            });\n            var expandedDy = dy.reshape(expandedDyShape);\n            var derX = expandedDy.mul(tensor_ops_1.ones(x.shape, 'float32')).div(reduceSize);\n            return derX;\n        };\n        return { value: value, gradFunc: gradFunc };\n    });\n    return customOp($x);\n}\n/**\n * Gradient helper function for the min and max operations.\n */\nfunction gradForMinAndMax(dy, y, xOrig, origAxes, permutedAxes) {\n    if (y.rank < xOrig.rank) {\n        y = y.reshape(axis_util.expandShapeToKeepDim(y.shape, origAxes));\n    }\n    if (dy.rank < xOrig.rank) {\n        dy = dy.reshape(axis_util.expandShapeToKeepDim(dy.shape, origAxes));\n    }\n    return {\n        x: function () {\n            var dx = dy.mul(xOrig.equal(y).cast(dy.dtype));\n            return permutedAxes == null ? dx : dx.transpose(permutedAxes);\n        }\n    };\n}\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction min_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'min');\n    var xOrig = $x;\n    var origAxes = util.parseAxisParam(axis, $x.shape);\n    var axes = origAxes;\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var grad = function (dy, saved) {\n        return gradForMinAndMax(dy, saved[1], saved[0], origAxes, permutedAxes);\n    };\n    var inputsToSave = [$x];\n    var outputsToSave = [true];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.min($x, axes);\n        save([xOrig, y]);\n        return y;\n    }, { x: $x }, grad, 'Min', { axes: axes }, inputsToSave, outputsToSave);\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n        res = res.reshape(newShape);\n    }\n    return res;\n}\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction max_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'max');\n    var xOrig = $x;\n    var origAxes = util.parseAxisParam(axis, $x.shape);\n    var axes = origAxes;\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var grad = function (dy, saved) {\n        return gradForMinAndMax(dy, saved[1], saved[0], origAxes, permutedAxes);\n    };\n    var inputsToSave = [$x];\n    var outputsToSave = [true];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.max($x, axes);\n        save([xOrig, y]);\n        return y;\n    }, { x: $x }, grad, 'Max', { axes: axes }, inputsToSave, outputsToSave);\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n        res = res.reshape(newShape);\n    }\n    return res;\n}\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction argMin_(x, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'argMin');\n    if (axis == null) {\n        axis = 0;\n    }\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { $x: function () { return tensor_ops_1.zerosLike($x); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.argMin($x, axes[0]);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction argMax_(x, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'argMax');\n    if (axis == null) {\n        axis = 0;\n    }\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { x: function () { return tensor_ops_1.zerosLike($x); } };\n    };\n    var attrs = { axis: axes[0] };\n    var inputsToSave = [$x];\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.argMax($x, axes[0]);\n        save([$x]);\n        return res;\n    }, { x: $x }, grad, 'ArgMax', attrs, inputsToSave);\n}\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction all_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'all', 'bool');\n    var origAxes = util.parseAxisParam(axis, $x.shape);\n    var axes = origAxes;\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.all($x, axes); }, { $x: $x });\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n        return res.reshape(newShape);\n    }\n    return res;\n}\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction any_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'any', 'bool');\n    var origAxes = util.parseAxisParam(axis, $x.shape);\n    var axes = origAxes;\n    var permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n    if (permutedAxes != null) {\n        $x = $x.transpose(permutedAxes);\n        axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n    }\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.any($x, axes); }, { $x: $x });\n    if (keepDims) {\n        var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n        return res.reshape(newShape);\n    }\n    return res;\n}\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction moments_(x, axis, keepDims) {\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    x = tensor_util_env_1.convertToTensor(x, 'x', 'moments');\n    var axes = util.parseAxisParam(axis, x.shape);\n    var mean = x.mean(axes, keepDims);\n    var keepDimsShape = mean.shape;\n    if (!keepDims) {\n        keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n    }\n    var devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\n    var variance = devSquared.mean(axes, keepDims);\n    return { mean: mean, variance: variance };\n}\nexports.all = operation_1.op({ all_: all_ });\n// tslint:disable-next-line:variable-name\nexports.any = operation_1.op({ any_: any_ });\nexports.argMax = operation_1.op({ argMax_: argMax_ });\nexports.argMin = operation_1.op({ argMin_: argMin_ });\nexports.logSumExp = operation_1.op({ logSumExp_: logSumExp_ });\nexports.max = operation_1.op({ max_: max_ });\nexports.mean = operation_1.op({ mean_: mean_ });\nexports.min = operation_1.op({ min_: min_ });\nexports.moments = operation_1.op({ moments_: moments_ });\nexports.sum = operation_1.op({ sum_: sum_ });\nexports.prod = operation_1.op({ prod_: prod_ });\n//# sourceMappingURL=reduction_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar broadcast_util_1 = require(\"./broadcast_util\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar operation_1 = require(\"./operation\");\nvar selu_util_1 = require(\"./selu_util\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction relu_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'relu');\n    if ($x.dtype === 'bool') {\n        return $x.toInt();\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return { x: function () { return dy.mulStrict($x.step().toFloat()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.relu($x);\n        save([$x]);\n        return res;\n    }, { x: $x }, grad, 'Relu');\n}\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction relu6_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'relu6');\n    if ($x.dtype === 'bool') {\n        return $x.toInt();\n    }\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        var mask = $x.lessEqual(6).mul($x.step());\n        return { x: function () { return dy.mulStrict(mask.toFloat()); } };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.relu6($x);\n        save([$x]);\n        return res;\n    }, { x: $x }, grad, 'Relu6');\n}\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction elu_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'elu');\n    var grad = function (dy, saved) {\n        var y = saved[0];\n        return {\n            $x: function () {\n                return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.eluDer(dy, y); }, { dy: dy, y: y });\n            }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.elu($x);\n        save([y]);\n        return y;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction selu_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'selu');\n    var grad = function (dy, saved) {\n        var $x = saved[0];\n        return {\n            $x: function () {\n                var mask = $x.greater(tensor_ops_1.scalar(0));\n                var scaleAlpha = tensor_ops_1.scalar(selu_util_1.SELU_SCALEALPHA);\n                var scale = tensor_ops_1.scalar(selu_util_1.SELU_SCALE);\n                var greaterThanZeroDer = dy.mul(scale);\n                var lessEqualZeroDer = dy.mul(scaleAlpha).mul($x.toFloat().exp());\n                return logical_ops_1.where(mask, greaterThanZeroDer, lessEqualZeroDer);\n            }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.selu($x);\n        save([$x]);\n        return res;\n    }, { $x: $x }, grad);\n}\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction leakyRelu_(x, alpha) {\n    if (alpha === void 0) { alpha = 0.2; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'leakyRelu');\n    return binary_ops_1.maximum(tensor_ops_1.scalar(alpha).mul($x), $x);\n}\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction prelu_(x, alpha) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'prelu');\n    var $alpha = tensor_util_env_1.convertToTensor(alpha, 'alpha', 'prelu');\n    var grad = function (dy, saved) {\n        var $x = saved[0], $alpha = saved[1];\n        var mask = $x.greater(0);\n        return {\n            x: function () { return logical_ops_1.where(mask, dy, dy.mul($alpha)); },\n            alpha: function () {\n                var res = logical_ops_1.where(mask, tensor_ops_1.zerosLike(dy), dy.mul($x));\n                var reduceAxes = broadcast_util_1.getReductionAxes($alpha.shape, dy.shape);\n                if (reduceAxes.length > 0) {\n                    res = res.sum(reduceAxes);\n                }\n                return res.reshape($alpha.shape);\n            }\n        };\n    };\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.prelu($x, $alpha);\n        save([$x, $alpha]);\n        return res;\n    }, { x: $x, alpha: $alpha }, grad, 'Prelu');\n}\nexports.elu = operation_1.op({ elu_: elu_ });\nexports.leakyRelu = operation_1.op({ leakyRelu_: leakyRelu_ });\nexports.prelu = operation_1.op({ prelu_: prelu_ });\nexports.relu = operation_1.op({ relu_: relu_ });\nexports.relu6 = operation_1.op({ relu6_: relu6_ });\nexports.selu = operation_1.op({ selu_: selu_ });\n//# sourceMappingURL=relu_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction norm_(x, ord, axis, keepDims) {\n    if (ord === void 0) { ord = 'euclidean'; }\n    if (axis === void 0) { axis = null; }\n    if (keepDims === void 0) { keepDims = false; }\n    x = tensor_util_env_1.convertToTensor(x, 'x', 'norm');\n    var norm = normImpl(x, ord, axis);\n    var keepDimsShape = norm.shape;\n    if (keepDims) {\n        var axes = util_1.parseAxisParam(axis, x.shape);\n        keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n    }\n    return norm.reshape(keepDimsShape);\n}\nfunction normImpl(x, p, axis) {\n    if (axis === void 0) { axis = null; }\n    if (x.rank === 0) {\n        return x.abs();\n    }\n    // consider vector when no axis is specified\n    if (x.rank !== 1 && axis === null) {\n        return normImpl(x.reshape([-1]), p, axis);\n    }\n    // vector\n    if (x.rank === 1 || typeof axis === 'number' ||\n        Array.isArray(axis) && axis.length === 1) {\n        if (p === 1) {\n            return x.abs().sum(axis);\n        }\n        if (p === Infinity) {\n            return x.abs().max(axis);\n        }\n        if (p === -Infinity) {\n            return x.abs().min(axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n            return x.abs().pow(tensor_ops_1.scalar(2, 'int32')).sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    // matrix (assumption axis[0] < axis[1])\n    if (Array.isArray(axis) && axis.length === 2) {\n        if (p === 1) {\n            return x.abs().sum(axis[0]).max(axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return x.abs().sum(axis[1]).max(axis[0]);\n        }\n        if (p === -Infinity) {\n            return x.abs().sum(axis[1]).min(axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            // norm(x) = sqrt(sum(pow(x, 2)))\n            return x.square().sum(axis).sqrt();\n        }\n        throw new Error(\"Error in norm: invalid ord value: \" + p);\n    }\n    throw new Error(\"Error in norm: invalid axis: \" + axis);\n}\nexports.norm = operation_1.op({ norm_: norm_ });\n//# sourceMappingURL=norm.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operation_1 = require(\"../ops/operation\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar concat_split_1 = require(\"./concat_split\");\nvar slice_1 = require(\"./slice\");\nvar spectral_ops_1 = require(\"./spectral_ops\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength) {\n    return cosineWindow(windowLength, 0.5, 0.5);\n}\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength) {\n    return cosineWindow(windowLength, 0.54, 0.46);\n}\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(signal, frameLength, frameStep, padEnd, padValue) {\n    if (padEnd === void 0) { padEnd = false; }\n    if (padValue === void 0) { padValue = 0; }\n    var start = 0;\n    var output = [];\n    while (start + frameLength <= signal.size) {\n        output.push(slice_1.slice(signal, start, frameLength));\n        start += frameStep;\n    }\n    if (padEnd) {\n        while (start < signal.size) {\n            var padLen = (start + frameLength) - signal.size;\n            var pad = concat_split_1.concat([slice_1.slice(signal, start, frameLength - padLen),\n                tensor_ops_1.fill([padLen], padValue)]);\n            output.push(pad);\n            start += frameStep;\n        }\n    }\n    if (output.length === 0) {\n        return tensor_ops_1.tensor2d([], [0, frameLength]);\n    }\n    return concat_split_1.concat(output).as2D(output.length, frameLength);\n}\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(signal, frameLength, frameStep, fftLength, windowFn) {\n    if (windowFn === void 0) { windowFn = exports.hannWindow; }\n    if (fftLength == null) {\n        fftLength = enclosingPowerOfTwo(frameLength);\n    }\n    var framedSignal = exports.frame(signal, frameLength, frameStep);\n    var windowedSignal = binary_ops_1.mul(framedSignal, windowFn(frameLength));\n    var output = [];\n    for (var i = 0; i < framedSignal.shape[0]; i++) {\n        output.push(spectral_ops_1.rfft(windowedSignal.slice([i, 0], [1, frameLength]), fftLength));\n    }\n    return concat_split_1.concat(output);\n}\nfunction enclosingPowerOfTwo(value) {\n    // Return 2**N for integer N such that 2**N >= value.\n    return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nfunction cosineWindow(windowLength, a, b) {\n    var even = 1 - windowLength % 2;\n    var newValues = new Float32Array(windowLength);\n    for (var i = 0; i < windowLength; ++i) {\n        var cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n        newValues[i] = a - b * Math.cos(cosArg);\n    }\n    return tensor_ops_1.tensor1d(newValues, 'float32');\n}\nexports.hannWindow = operation_1.op({ hannWindow_: hannWindow_ });\nexports.hammingWindow = operation_1.op({ hammingWindow_: hammingWindow_ });\nexports.frame = operation_1.op({ frame_: frame_ });\nexports.stft = operation_1.op({ stft_: stft_ });\n//# sourceMappingURL=signal_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gradients_1 = require(\"../gradients\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar axis_util_1 = require(\"./axis_util\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction = exports.Reduction || (exports.Reduction = {}));\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction computeWeightedLoss_(losses, weights, reduction) {\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $losses = tensor_util_env_1.convertToTensor(losses, 'losses', 'computeWeightedLoss');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'computeWeightedLoss');\n    }\n    var weightedLoss = ($weights == null) ? $losses : $losses.mul($weights);\n    if (reduction === Reduction.NONE) {\n        return weightedLoss;\n    }\n    if (reduction === Reduction.SUM) {\n        return weightedLoss.sum();\n    }\n    if (reduction === Reduction.MEAN) {\n        if ($weights == null) {\n            return weightedLoss.mean();\n        }\n        else {\n            var broadcastFactor = $losses.size / $weights.size;\n            var result = weightedLoss.sum().div($weights.sum());\n            return broadcastFactor > 1 ? result.div(tensor_ops_1.scalar(broadcastFactor)) :\n                result;\n        }\n    }\n    if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n        if ($weights == null) {\n            return weightedLoss.sum().div(tensor_ops_1.scalar($losses.size));\n        }\n        else {\n            var broadcastedWeights = $weights.mul(tensor_ops_1.ones($losses.shape));\n            var numNonZeros = broadcastedWeights.notEqual(tensor_ops_1.scalar(0)).sum().toFloat();\n            return weightedLoss.sum().div(numNonZeros);\n        }\n    }\n    throw Error(\"Unknown reduction: \" + reduction);\n}\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction absoluteDifference_(labels, predictions, weights, reduction) {\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'absoluteDifference');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'absoluteDifference');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'absoluteDifference');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n    var losses = $labels.sub($predictions).abs();\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction meanSquaredError_(labels, predictions, weights, reduction) {\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'meanSquaredError');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'meanSquaredError');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'meanSquaredError');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n    var losses = $labels.squaredDifference($predictions);\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction cosineDistance_(labels, predictions, axis, weights, reduction) {\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'cosineDistance');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'cosineDistance');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'cosineDistance');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n    var one = tensor_ops_1.scalar(1);\n    var losses = one.sub($labels.mul($predictions).sum(axis, true));\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction hingeLoss_(labels, predictions, weights, reduction) {\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'hingeLoss');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'hingeLoss');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'hingeLoss');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n    var one = tensor_ops_1.scalar(1);\n    // Convert binary labels to (-1, 1)\n    $labels = tensor_ops_1.scalar(2).mul($labels).sub(one);\n    var losses = one.sub($labels.mul($predictions)).relu();\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction logLoss_(labels, predictions, weights, epsilon, reduction) {\n    if (epsilon === void 0) { epsilon = 1e-7; }\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'logLoss');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'logLoss');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'logLoss');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n    var one = tensor_ops_1.scalar(1);\n    var epsilonScalar = tensor_ops_1.scalar(epsilon);\n    var losses = $labels.mul($predictions.add(epsilonScalar).log())\n        .neg()\n        .sub(one.sub($labels).mul(one.sub($predictions).add(epsilonScalar).log()));\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\nfunction sigmoidCrossEntropyWithLogits_(labels, logits) {\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n    util_1.assertShapesMatch($labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n    /**\n     * Implementation Details:\n     *\n     * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n     *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n     *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n     *   = (1 - z) * x + log(1 + exp(-x))\n     *   = x - x * z + log(1 + exp(-x))\n     *\n     *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n     *     x - x * z + log(1 + exp(-x))\n     *   = log(exp(x)) - x * z + log(1 + exp(-x))\n     *   = - x * z + log(1 + exp(x))\n     *\n     * Hence, to ensure stability and avoid overflow, the implementation uses\n     * this equivalent formulation:\n     *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n     */\n    var maxOutput = $logits.relu();\n    var outputXTarget = $logits.mul($labels);\n    var sigmoidOutput = $logits.abs().neg().exp().log1p();\n    return maxOutput.sub(outputXTarget).add(sigmoidOutput);\n}\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' } */\nfunction sigmoidCrossEntropy_(multiClassLabels, logits, weights, labelSmoothing, reduction) {\n    if (labelSmoothing === void 0) { labelSmoothing = 0; }\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $multiClassLabels = tensor_util_env_1.convertToTensor(multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n    }\n    util_1.assertShapesMatch($multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        var labelSmoothingScalar = tensor_ops_1.scalar(labelSmoothing);\n        var one = tensor_ops_1.scalar(1);\n        var half = tensor_ops_1.scalar(0.5);\n        $multiClassLabels = $multiClassLabels.mul(one.sub(labelSmoothingScalar))\n            .add(half.mul(labelSmoothingScalar));\n    }\n    var losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction huberLoss_(labels, predictions, weights, delta, reduction) {\n    if (delta === void 0) { delta = 1.0; }\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'huberLoss');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'huberLoss');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'huberLoss');\n    }\n    util_1.assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n    var deltaScalar = tensor_ops_1.scalar(delta);\n    var error = $predictions.sub($labels).abs();\n    var quadratic = binary_ops_1.minimum(error, deltaScalar);\n    var linear = error.sub(quadratic);\n    var losses = tensor_ops_1.scalar(0.5).mul(quadratic.square()).add(deltaScalar.mul(linear));\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_(labels, logits, dim) {\n    if (dim === void 0) { dim = -1; }\n    if (dim === -1) {\n        dim = logits.rank - 1;\n    }\n    if (dim !== logits.rank - 1) {\n        throw Error(\"Softmax cross entropy along a non-last dimension is not yet \" +\n            (\"supported. Labels / logits was rank \" + logits.rank + \" \") +\n            (\"and dim was \" + dim));\n    }\n    // Use a custom gradient for numerical stability.\n    var customOp = gradients_1.customGrad(function (labels, logits, save) {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        var keepDims = true;\n        var lse = logits.logSumExp([dim], keepDims);\n        var logResult = logits.toFloat().sub(lse);\n        save([labels, logResult]);\n        var costVector = logResult.mul(labels).neg();\n        var value = costVector.sum([dim]);\n        var gradFunc = function (dy, saved) {\n            var labels = saved[0], logResult = saved[1];\n            var dyShape = axis_util_1.expandShapeToKeepDim(dy.shape, [dim]);\n            return [\n                dy.reshape(dyShape).mul(labels.toFloat().sub(logResult.exp())),\n                dy.reshape(dyShape).mul(logResult.exp().sub(labels.toFloat())),\n            ];\n        };\n        return { value: value, gradFunc: gradFunc };\n    });\n    return customOp(labels, logits);\n}\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' } */\nfunction softmaxCrossEntropy_(onehotLabels, logits, weights, labelSmoothing, reduction) {\n    if (labelSmoothing === void 0) { labelSmoothing = 0; }\n    if (reduction === void 0) { reduction = Reduction.SUM_BY_NONZERO_WEIGHTS; }\n    var $onehotLabels = tensor_util_env_1.convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n    var $logits = tensor_util_env_1.convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n    var $weights = null;\n    if (weights != null) {\n        $weights = tensor_util_env_1.convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n    }\n    util_1.assertShapesMatch($onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        var labelSmoothingScalar = tensor_ops_1.scalar(labelSmoothing);\n        var one = tensor_ops_1.scalar(1);\n        var numClasses = tensor_ops_1.scalar($onehotLabels.shape[1]);\n        $onehotLabels = $onehotLabels.mul(one.sub(labelSmoothingScalar))\n            .add(labelSmoothingScalar.div(numClasses));\n    }\n    var losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n    return exports.computeWeightedLoss(losses, $weights, reduction);\n}\nexports.absoluteDifference = operation_1.op({ absoluteDifference_: absoluteDifference_ });\nexports.computeWeightedLoss = operation_1.op({ computeWeightedLoss_: computeWeightedLoss_ });\nexports.cosineDistance = operation_1.op({ cosineDistance_: cosineDistance_ });\nexports.hingeLoss = operation_1.op({ hingeLoss_: hingeLoss_ });\nexports.huberLoss = operation_1.op({ huberLoss_: huberLoss_ });\nexports.logLoss = operation_1.op({ logLoss_: logLoss_ });\nexports.meanSquaredError = operation_1.op({ meanSquaredError_: meanSquaredError_ });\nexports.sigmoidCrossEntropy = operation_1.op({ sigmoidCrossEntropy_: sigmoidCrossEntropy_ });\nexports.softmaxCrossEntropy = operation_1.op({ softmaxCrossEntropy_: softmaxCrossEntropy_ });\n//# sourceMappingURL=loss_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../../util\");\nfunction assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(function (t) {\n        if (t != null) {\n            util_1.assert(t.dtype !== 'complex64', function () { return opName + \" does not support complex64 tensors.\"; });\n        }\n    });\n}\nexports.assertNotComplex = assertNotComplex;\n//# sourceMappingURL=cpu_util.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Type definitions for exporting and importing of models. */\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexports.DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'int32': 4,\n    'uint16': 2,\n    'uint8': 1,\n    'bool': 1,\n};\n//# sourceMappingURL=types.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar progress_1 = require(\"./progress\");\nvar types_1 = require(\"./types\");\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nfunction loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n        var fetchFunc, requests, fetchStartFraction, fetchEndFraction, responses, _a, bufferPromises, bufferStartFraction, bufferEndFraction, buffers, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    if (loadOptions == null) {\n                        loadOptions = {};\n                    }\n                    fetchFunc = loadOptions.fetchFunc == null ? environment_1.env().platform.fetch :\n                        loadOptions.fetchFunc;\n                    requests = fetchURLs.map(function (fetchURL) {\n                        return fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true });\n                    });\n                    fetchStartFraction = 0;\n                    fetchEndFraction = 0.5;\n                    if (!(loadOptions.onProgress == null)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, Promise.all(requests)];\n                case 1:\n                    _a = _c.sent();\n                    return [3 /*break*/, 4];\n                case 2: return [4 /*yield*/, progress_1.monitorPromisesProgress(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction)];\n                case 3:\n                    _a = _c.sent();\n                    _c.label = 4;\n                case 4:\n                    responses = _a;\n                    bufferPromises = responses.map(function (response) { return response.arrayBuffer(); });\n                    bufferStartFraction = 0.5;\n                    bufferEndFraction = 1;\n                    if (!(loadOptions.onProgress == null)) return [3 /*break*/, 6];\n                    return [4 /*yield*/, Promise.all(bufferPromises)];\n                case 5:\n                    _b = _c.sent();\n                    return [3 /*break*/, 8];\n                case 6: return [4 /*yield*/, progress_1.monitorPromisesProgress(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction)];\n                case 7:\n                    _b = _c.sent();\n                    _c.label = 8;\n                case 8:\n                    buffers = _b;\n                    return [2 /*return*/, buffers];\n            }\n        });\n    });\n}\nexports.loadWeightsAsArrayBuffer = loadWeightsAsArrayBuffer;\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nfunction loadWeights(manifest, filePathPrefix, weightNames, requestInit) {\n    if (filePathPrefix === void 0) { filePathPrefix = ''; }\n    return __awaiter(this, void 0, void 0, function () {\n        var fetchWeights, loadWeights;\n        return __generator(this, function (_a) {\n            fetchWeights = function (fetchUrls) {\n                return loadWeightsAsArrayBuffer(fetchUrls, { requestInit: requestInit });\n            };\n            loadWeights = weightsLoaderFactory(fetchWeights);\n            return [2 /*return*/, loadWeights(manifest, filePathPrefix, weightNames)];\n        });\n    });\n}\nexports.loadWeights = loadWeights;\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nfunction weightsLoaderFactory(fetchWeightsFunction) {\n    var _this = this;\n    return function (manifest, filePathPrefix, weightNames) {\n        if (filePathPrefix === void 0) { filePathPrefix = ''; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var groupIndicesToFetchMap, groupWeightsToFetch, weightsFound, allManifestWeightNames, weightsNotFound, groupIndicesToFetch, fetchUrls, buffers, weightsTensorMap, bufferIndexOffset;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        groupIndicesToFetchMap = manifest.map(function () { return false; });\n                        groupWeightsToFetch = {};\n                        weightsFound = weightNames != null ? weightNames.map(function () { return false; }) : [];\n                        allManifestWeightNames = [];\n                        manifest.forEach(function (manifestGroupConfig, groupIndex) {\n                            var groupOffset = 0;\n                            manifestGroupConfig.weights.forEach(function (weightsEntry) {\n                                var rawDtype = ('quantization' in weightsEntry) ?\n                                    weightsEntry.quantization.dtype :\n                                    weightsEntry.dtype;\n                                var weightsBytes = types_1.DTYPE_VALUE_SIZE_MAP[rawDtype] *\n                                    util.sizeFromShape(weightsEntry.shape);\n                                var enqueueWeightsForFetchingFn = function () {\n                                    groupIndicesToFetchMap[groupIndex] = true;\n                                    if (groupWeightsToFetch[groupIndex] == null) {\n                                        groupWeightsToFetch[groupIndex] = [];\n                                    }\n                                    groupWeightsToFetch[groupIndex].push({\n                                        manifestEntry: weightsEntry,\n                                        groupOffset: groupOffset,\n                                        sizeBytes: weightsBytes\n                                    });\n                                };\n                                if (weightNames != null) {\n                                    weightNames.forEach(function (weightName, weightIndex) {\n                                        if (weightName === weightsEntry.name) {\n                                            enqueueWeightsForFetchingFn();\n                                            weightsFound[weightIndex] = true;\n                                        }\n                                    });\n                                }\n                                else {\n                                    enqueueWeightsForFetchingFn();\n                                }\n                                allManifestWeightNames.push(weightsEntry.name);\n                                groupOffset += weightsBytes;\n                            });\n                        });\n                        if (!weightsFound.every(function (found) { return found; })) {\n                            weightsNotFound = weightNames.filter(function (_, i) { return !weightsFound[i]; });\n                            throw new Error(\"Could not find weights in manifest with names: \" +\n                                (weightsNotFound.join(', ') + \". \\n\") +\n                                \"Manifest JSON has weights with names: \" +\n                                (allManifestWeightNames.join(', ') + \".\"));\n                        }\n                        groupIndicesToFetch = groupIndicesToFetchMap.reduce(function (accumulator, shouldFetch, i) {\n                            if (shouldFetch) {\n                                accumulator.push(i);\n                            }\n                            return accumulator;\n                        }, []);\n                        fetchUrls = [];\n                        groupIndicesToFetch.forEach(function (i) {\n                            manifest[i].paths.forEach(function (filepath) {\n                                var fetchUrl = filePathPrefix +\n                                    (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                                fetchUrls.push(fetchUrl);\n                            });\n                        });\n                        return [4 /*yield*/, fetchWeightsFunction(fetchUrls)];\n                    case 1:\n                        buffers = _a.sent();\n                        weightsTensorMap = {};\n                        bufferIndexOffset = 0;\n                        groupIndicesToFetch.forEach(function (i) {\n                            var numBuffers = manifest[i].paths.length;\n                            var groupBytes = 0;\n                            for (var i_1 = 0; i_1 < numBuffers; i_1++) {\n                                groupBytes += buffers[bufferIndexOffset + i_1].byteLength;\n                            }\n                            // Create a buffer for the whole group.\n                            var groupBuffer = new ArrayBuffer(groupBytes);\n                            var groupByteBuffer = new Uint8Array(groupBuffer);\n                            var groupBufferOffset = 0;\n                            for (var i_2 = 0; i_2 < numBuffers; i_2++) {\n                                var buffer = new Uint8Array(buffers[bufferIndexOffset + i_2]);\n                                groupByteBuffer.set(buffer, groupBufferOffset);\n                                groupBufferOffset += buffer.byteLength;\n                            }\n                            var weightsEntries = groupWeightsToFetch[i];\n                            weightsEntries.forEach(function (weightsEntry) {\n                                var byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                                var nameToTensorMap = io_utils_1.decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n                                for (var name_1 in nameToTensorMap) {\n                                    weightsTensorMap[name_1] = nameToTensorMap[name_1];\n                                }\n                            });\n                            bufferIndexOffset += numBuffers;\n                        });\n                        return [2 /*return*/, weightsTensorMap];\n                }\n            });\n        });\n    };\n}\nexports.weightsLoaderFactory = weightsLoaderFactory;\n//# sourceMappingURL=weights_loader.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Profiler = /** @class */ (function () {\n    function Profiler(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    Profiler.prototype.profileKernel = function (kernelName, inputs, f) {\n        var _this = this;\n        var outputs;\n        var holdResultWrapperFn = function () {\n            outputs = f();\n        };\n        var timer = this.backendTimer.time(holdResultWrapperFn);\n        outputs.forEach(function (r) {\n            // Dangling promise here because we don't want to propagate up\n            // asynchronicity.\n            r.data().then(function (vals) {\n                checkComputationForErrors(vals, r.dtype, kernelName);\n                timer.then(function (timing) {\n                    var extraInfo = '';\n                    if (timing.getExtraProfileInfo != null) {\n                        extraInfo = timing.getExtraProfileInfo();\n                    }\n                    _this.logger.logKernelProfile(kernelName, r, vals, timing.kernelMs, inputs, extraInfo);\n                });\n            });\n        });\n        return outputs;\n    };\n    return Profiler;\n}());\nexports.Profiler = Profiler;\nfunction checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (var i = 0; i < vals.length; i++) {\n        var num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(\"Found \" + num + \" in the result of '\" + kernelName + \"'\");\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkComputationForErrors = checkComputationForErrors;\nvar Logger = /** @class */ (function () {\n    function Logger() {\n    }\n    Logger.prototype.logKernelProfile = function (name, result, vals, timeMs, inputs, extraInfo) {\n        var time = util.rightPad(timeMs + \"ms\", 9);\n        var paddedName = util.rightPad(name, 25);\n        var rank = result.rank;\n        var size = result.size;\n        var shape = util.rightPad(result.shape.toString(), 14);\n        var inputShapesDescription = '';\n        for (var name_1 in inputs) {\n            var input = inputs[name_1];\n            // The input might be a non-tensor (e.g HTMLImageElement), in which case\n            // we claim the output shape as input shape.\n            var inputShape = input.shape || result.shape;\n            var inputRank = inputShape.length;\n            inputShapesDescription +=\n                name_1 + \": \" + inputRank + \"D \" + (inputRank > 0 ? inputShape : '') + \" \";\n        }\n        console.log(\"%c\" + paddedName + \"\\t%c\" + time + \"\\t%c\" + rank + \"D \" + shape + \"\\t%c\" + size + \"\\t%c\" + inputShapesDescription + \"\\t%c\" + extraInfo, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n//# sourceMappingURL=profiler.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nfunction getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    var tensorsFromX = {};\n    var nodesFromX = {};\n    for (var i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        for (var inputName in nodeInputs) {\n            var input = nodeInputs[inputName];\n            var anyInputFromX = false;\n            for (var j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(function (output) { return tensorsFromX[output.id] = true; });\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    var tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    var nodesToY = {};\n    for (var i = tape.length - 1; i >= 0; i--) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (var j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (var inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    var filteredTape = [];\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            var prunedInputs = {};\n            for (var inputName in node.inputs) {\n                var nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            var prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\nexports.getFilteredNodesXToY = getFilteredNodesXToY;\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy) {\n    var _loop_1 = function (i) {\n        var node = filteredTape[i];\n        var dys = [];\n        node.outputs.forEach(function (o) {\n            var gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(\"Cannot compute gradient: gradient function not found \" +\n                (\"for \" + node.name + \".\"));\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        var inputGradients = node.gradient(dys);\n        var _loop_2 = function (inputName) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(\"Cannot backprop through input \" + inputName + \". \" +\n                    (\"Available gradients found: \" + Object.keys(inputGradients) + \".\"));\n            }\n            // Call the gradient function.\n            var dx = tidy(function () { return inputGradients[inputName](); });\n            if (dx.dtype !== 'float32') {\n                throw new Error(\"Error in gradient for op \" + node.name + \". The gradient of input \" +\n                    (inputName + \" must have 'float32' dtype, but has '\" + dx.dtype + \"'\"));\n            }\n            var x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(\"Error in gradient for op \" + node.name + \". The gradient of input \" +\n                    (\"'\" + inputName + \"' has shape '\" + dx.shape + \"', which does not match \") +\n                    (\"the shape of the input '\" + x.shape + \"'\"));\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                var curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = curGradient.add(dx);\n                curGradient.dispose();\n            }\n        };\n        for (var inputName in node.inputs) {\n            _loop_2(inputName);\n        }\n    };\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (var i = filteredTape.length - 1; i >= 0; i--) {\n        _loop_1(i);\n    }\n}\nexports.backpropagateGradients = backpropagateGradients;\n//# sourceMappingURL=tape.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\n// Maximum number of values before we decide to show ellipsis.\nvar FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nvar FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nvar FORMAT_NUM_SIG_DIGITS = 7;\nfunction tensorToString(vals, shape, dtype, verbose) {\n    var strides = util_1.computeStrides(shape);\n    var padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    var rank = shape.length;\n    var valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    var lines = ['Tensor'];\n    if (verbose) {\n        lines.push(\"  dtype: \" + dtype);\n        lines.push(\"  rank: \" + rank);\n        lines.push(\"  shape: [\" + shape + \"]\");\n        lines.push(\"  values:\");\n    }\n    lines.push(valsLines.map(function (l) { return '    ' + l; }).join('\\n'));\n    return lines.join('\\n');\n}\nexports.tensorToString = tensorToString;\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    var n = util_1.sizeFromShape(shape);\n    var numCols = strides[strides.length - 1];\n    var padPerCol = new Array(numCols).fill(0);\n    var rank = shape.length;\n    var valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (var row = 0; row < n / numCols; row++) {\n            var offset = row * numCols;\n            for (var j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    var valStr;\n    if (Array.isArray(val)) {\n        valStr = parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS)) + \" + \" +\n            (parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS)) + \"j\");\n    }\n    else if (util_1.isString(val)) {\n        valStr = \"'\" + val + \"'\";\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return util_1.rightPad(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast) {\n    if (isLast === void 0) { isLast = true; }\n    var storagePerElement = dtype === 'complex64' ? 2 : 1;\n    var size = shape[0];\n    var rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            var complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            var firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            var firstVals = Array.from(vals.slice(0, firstValsSize));\n            var lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map(function (x, i) { return valToString(x, padPerCol[i], dtype); })\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map(function (x, i) { return valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype); })\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        var displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map(function (x, i) { return valToString(x, padPerCol[i], dtype); })\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    var subshape = shape.slice(1);\n    var substrides = strides.slice(1);\n    var stride = strides[0] * storagePerElement;\n    var lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (var i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (var i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (var i = 0; i < size; i++) {\n            var start = i * stride;\n            var end = start + stride;\n            lines.push.apply(lines, subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    var sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (var i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    var newLineSep = ',\\n';\n    for (var i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    var complexTuples = [];\n    for (var i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar device_util = require(\"./device_util\");\nvar environment_1 = require(\"./environment\");\nvar ENV = environment_1.env();\n/**\n * This file contains environment-related flag registrations.\n */\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', function () { return false; }, function (debugValue) {\n    if (debugValue) {\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', function () { return device_util.isBrowser(); });\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_NODE', function () { return (typeof process !== 'undefined') &&\n    (typeof process.versions !== 'undefined') &&\n    (typeof process.versions.node !== 'undefined'); });\n/** Whether this browser is Chrome. */\nENV.registerFlag('IS_CHROME', function () { return typeof navigator !== 'undefined' && navigator != null &&\n    navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n    /Google Inc/.test(navigator.vendor); });\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', function () { return false; });\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', function () { return ENV.getBool('DEBUG'); });\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', function () { return true; });\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', function () { return false; });\n//# sourceMappingURL=flags.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar device_util = require(\"../../device_util\");\nvar environment_1 = require(\"../../environment\");\nvar webgl_util = require(\"./webgl_util\");\nvar ENV = environment_1.env();\n/**\n * This file contains WebGL-specific flag registrations.\n */\n/**\n * True if WebGL is supported.\n */\nENV.registerFlag('HAS_WEBGL', function () { return ENV.getNumber('WEBGL_VERSION') > 0; });\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\nENV.registerFlag('WEBGL_VERSION', function () {\n    if (webgl_util.isWebGLVersionEnabled(2)) {\n        return 2;\n    }\n    else if (webgl_util.isWebGLVersionEnabled(1)) {\n        return 1;\n    }\n    return 0;\n});\nENV.registerFlag('WEBGL_BUFFER_SUPPORTED', function () { return ENV.get('WEBGL_VERSION') === 2; });\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\nENV.registerFlag('WEBGL_CPU_FORWARD', function () { return true; });\n/** Whether the WebGL backend will always use f16 textures for rendering. */\nENV.registerFlag('WEBGL_FORCE_F16_TEXTURES', function () { return false; });\n/** Whether to turn all packing related flags on. */\nENV.registerFlag('WEBGL_PACK', function () { return ENV.getBool('HAS_WEBGL'); });\n/** Whether we will pack the batchnormalization op. */\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack the clip op. */\nENV.registerFlag('WEBGL_PACK_CLIP', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack the depthwise conv op. */\n// TODO: https://github.com/tensorflow/tfjs/issues/1679\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', function () { return false; });\n/** Whether we will pack binary ops. */\nENV.registerFlag('WEBGL_PACK_BINARY_OPERATIONS', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack unary ops. */\nENV.registerFlag('WEBGL_PACK_UNARY_OPERATIONS', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack array ops. */\nENV.registerFlag('WEBGL_PACK_ARRAY_OPERATIONS', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack image ops. */\nENV.registerFlag('WEBGL_PACK_IMAGE_OPERATIONS', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will pack reduce ops. */\nENV.registerFlag('WEBGL_PACK_REDUCE', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether packed WebGL kernels lazily unpack their outputs. */\nENV.registerFlag('WEBGL_LAZILY_UNPACK', function () { return ENV.getBool('WEBGL_PACK'); });\n/** Whether we will use the im2col algorithm to speed up convolutions. */\nENV.registerFlag('WEBGL_CONV_IM2COL', function () { return ENV.getBool('WEBGL_PACK'); });\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURE_SIZE', function () { return webgl_util.getWebGLMaxTextureSize(ENV.getNumber('WEBGL_VERSION')); });\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURES_IN_SHADER', function () { return webgl_util.getMaxTexturesInShader(ENV.getNumber('WEBGL_VERSION')); });\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', function () {\n    var webGLVersion = ENV.getNumber('WEBGL_VERSION');\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    return webgl_util.getWebGLDisjointQueryTimerVersion(webGLVersion);\n});\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', function () { return ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n    !device_util.isMobile(); });\n/**\n * Whether the device is physically capable of rendering to float32 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_CAPABLE', function () { return webgl_util.isCapableOfRenderingToFloatTexture(ENV.getNumber('WEBGL_VERSION')); });\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_ENABLED', function () {\n    return ENV.getBool('WEBGL_FORCE_F16_TEXTURES') ?\n        false :\n        ENV.getBool('WEBGL_RENDER_FLOAT32_CAPABLE');\n});\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\nENV.registerFlag('WEBGL_DOWNLOAD_FLOAT_ENABLED', function () { return webgl_util.isDownloadFloatTextureEnabled(ENV.getNumber('WEBGL_VERSION')); });\n/** Whether the fence API is available. */\nENV.registerFlag('WEBGL_FENCE_API_ENABLED', function () { return webgl_util.isWebGLFenceEnabled(ENV.getNumber('WEBGL_VERSION')); });\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', function () {\n    // Use uniform uploads only when 32bit floats are supported. In\n    // 16bit\n    // environments there are problems with comparing a 16bit texture value\n    // with a 32bit uniform value.\n    var useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n    return useUniforms ? 4 : 0;\n});\n//# sourceMappingURL=flags_webgl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nvar MPRandGauss = /** @class */ (function () {\n    function MPRandGauss(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        var seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    /** Returns next sample from a Gaussian distribution. */\n    MPRandGauss.prototype.nextValue = function () {\n        if (!isNaN(this.nextVal)) {\n            var value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        var resultX, resultY;\n        var isValid = false;\n        while (!isValid) {\n            var v1 = void 0, v2 = void 0, s = void 0;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            var mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    };\n    /** Handles proper rounding for non-floating-point numbers. */\n    MPRandGauss.prototype.convertValue = function (value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    /** Returns true if less than 2-standard-deviations from the mean. */\n    MPRandGauss.prototype.isValidTruncated = function (value) {\n        return value <= this.upper && value >= this.lower;\n    };\n    return MPRandGauss;\n}());\nexports.MPRandGauss = MPRandGauss;\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nvar RandGamma = /** @class */ (function () {\n    function RandGamma(alpha, beta, dtype, seed) {\n        this.alpha = alpha;\n        this.beta = 1 / beta; // convert rate to scale parameter\n        this.dtype = dtype;\n        var seedValue = seed ? seed : Math.random();\n        this.randu = seedrandom.alea(seedValue.toString());\n        this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n        if (alpha < 1) {\n            this.d = alpha + (2 / 3);\n        }\n        else {\n            this.d = alpha - (1 / 3);\n        }\n        this.c = 1 / Math.sqrt(9 * this.d);\n    }\n    /** Returns next sample from a gamma distribution. */\n    RandGamma.prototype.nextValue = function () {\n        var x2, v0, v1, x, u, v;\n        while (true) {\n            do {\n                x = this.randn.nextValue();\n                v = 1 + (this.c * x);\n            } while (v <= 0);\n            v *= v * v;\n            x2 = x * x;\n            v0 = 1 - (0.331 * x2 * x2);\n            v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n            u = this.randu();\n            if (u < v0 || Math.log(u) < v1) {\n                break;\n            }\n        }\n        v = (1 / this.beta) * this.d * v;\n        if (this.alpha < 1) {\n            v *= Math.pow(this.randu(), 1 / this.alpha);\n        }\n        return this.convertValue(v);\n    };\n    /** Handles proper rounding for non-floating-point numbers. */\n    RandGamma.prototype.convertValue = function (value) {\n        if (this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    };\n    return RandGamma;\n}());\nexports.RandGamma = RandGamma;\nvar UniformRandom = /** @class */ (function () {\n    function UniformRandom(min, max, dtype, seed) {\n        var _this = this;\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        /** Handles proper rounding for non floating point numbers. */\n        this.canReturnFloat = function () {\n            return (_this.dtype == null || _this.dtype === 'float32');\n        };\n        this.min = min;\n        this.range = max - min;\n        this.dtype = dtype;\n        if (seed == null) {\n            seed = Math.random();\n        }\n        if (typeof seed === 'number') {\n            seed = seed.toString();\n        }\n        if (!this.canReturnFloat() && this.range <= 1) {\n            throw new Error(\"The difference between \" + min + \" - \" + max + \" <= 1 and dtype is not float\");\n        }\n        this.random = seedrandom.alea(seed);\n    }\n    UniformRandom.prototype.convertValue = function (value) {\n        if (this.canReturnFloat()) {\n            return value;\n        }\n        return Math.round(value);\n    };\n    UniformRandom.prototype.nextValue = function () {\n        return this.convertValue(this.min + this.range * this.random());\n    };\n    return UniformRandom;\n}());\nexports.UniformRandom = UniformRandom;\n//# sourceMappingURL=rand.js.map","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AddNProgram = /** @class */ (function () {\n    function AddNProgram(outputShape, shapes) {\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map(function (_, i) { return \"T\" + i; });\n        var snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(function (variable) {\n            snippets.push(\"float v\" + variable + \" = get\" + variable + \"AtOutCoords();\");\n        });\n        // Calculate the sum of all elements.\n        var operation = this.variableNames\n            .map(function (variable) {\n            return \"v\" + variable;\n        })\n            .join(' + ');\n        this.userCode = \"\\n      void main() {\\n        \" + snippets.join('\\n        ') + \"\\n\\n        float result = \" + operation + \";\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return AddNProgram;\n}());\nexports.AddNProgram = AddNProgram;\n//# sourceMappingURL=addn_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AddNPackedProgram = /** @class */ (function () {\n    function AddNPackedProgram(outputShape, shapes) {\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map(function (_, i) { return \"T\" + i; });\n        var snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(function (variable) {\n            snippets.push(\"vec4 v\" + variable + \" = get\" + variable + \"AtOutCoords();\");\n        });\n        // Calculate the sum of all elements.\n        var operation = this.variableNames\n            .map(function (variable) {\n            return \"v\" + variable;\n        })\n            .join(' + ');\n        this.userCode = \"\\n      void main() {\\n        \" + snippets.join('\\n        ') + \"\\n\\n        vec4 result = \" + operation + \";\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return AddNPackedProgram;\n}());\nexports.AddNPackedProgram = AddNPackedProgram;\n//# sourceMappingURL=addn_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArgMinMaxProgram = /** @class */ (function () {\n    function ArgMinMaxProgram(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        var compOp = (op === 'max') ? '>' : '<';\n        var indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          int inIdx = \" + indexSnippet + \";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \" + compOp + \" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \";\n    }\n    return ArgMinMaxProgram;\n}());\nexports.ArgMinMaxProgram = ArgMinMaxProgram;\n//# sourceMappingURL=argminmax_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../../util\");\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ArgMinMaxPackedProgram = /** @class */ (function () {\n    function ArgMinMaxPackedProgram(shape, windowSize, op, firstPass) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        util_1.assert(shape.length > 2, function () { return \"Packed arg\" + (op.charAt(0).toUpperCase() +\n            op.slice(1)) + \" supports only inputs with rank above 2.\"; });\n        var inSize = shape[shape.length - 1];\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = shape.slice(0, -1);\n        if (outSize > 1) {\n            this.outputShape.push(outSize);\n        }\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        var outShape = this.outputShape;\n        var rank = outShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        var coords = packing_util_1.getChannels('coords', rank);\n        var sourceLocSetup;\n        var sourceRank;\n        if (outSize === 1) {\n            sourceRank = rank + 1;\n            var sourceLocDType = shader_compiler_1.getCoordsDataType(sourceRank);\n            sourceLocSetup = \"\\n        \" + sourceLocDType + \" sourceLocR = \" + sourceLocDType + \"(\" + coords.join() + \", 0);\\n        ++\" + coords[rank - 1] + \";\\n        \" + sourceLocDType + \" sourceLocG = \" + sourceLocDType + \"(\" + coords.join() + \", 0);\\n        ++\" + coords[rank - 2] + \";\\n        \" + sourceLocDType + \" sourceLocA = \" + sourceLocDType + \"(\" + coords.join() + \", 0);\\n        --\" + coords[rank - 1] + \";\\n        \" + sourceLocDType + \" sourceLocB = \" + sourceLocDType + \"(\" + coords.join() + \", 0);\\n        --\" + coords[rank - 2] + \";\";\n        }\n        else {\n            sourceRank = rank;\n            sourceLocSetup = \"\\n        \" + dtype + \" sourceLocR = coords;\\n        ++\" + coords[rank - 1] + \";\\n        \" + dtype + \" sourceLocG = coords;\\n        ++\" + coords[rank - 2] + \";\\n        \" + dtype + \" sourceLocA = coords;\\n        --\" + coords[rank - 1] + \";\\n        \" + dtype + \" sourceLocB = coords;\\n        --\" + coords[rank - 2] + \";\";\n        }\n        var channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, sourceRank);\n        var inChannel = '.' + channels[sourceRank - 1]; // e.g. \".b\" for rank 3.\n        var intChannels = channels.map(function (x) { return 'int ' + x; });\n        var srcRCoords = packing_util_1.getChannels('sourceLocR', sourceRank - 1).concat('inIdx.r');\n        var srcGCoords = packing_util_1.getChannels('sourceLocG', sourceRank - 1).concat('inIdx.g');\n        var srcBCoords = packing_util_1.getChannels('sourceLocB', sourceRank - 1).concat('inIdx.b');\n        var srcACoords = packing_util_1.getChannels('sourceLocA', sourceRank - 1).concat('inIdx.a');\n        var compOp = (op === 'max') ? 'greaterThan' : 'lessThan';\n        var fetchCandidateIdx = firstPass ? '' : \"\\n          inIdx = round(vec4(getBestIndicesAChannel(\" + srcRCoords.join() + \"),\\n                             getBestIndicesAChannel(\" + srcGCoords.join() + \"),\\n                             getBestIndicesAChannel(\" + srcBCoords.join() + \"),\\n                             getBestIndicesAChannel(\" + srcACoords.join() + \")));\";\n        var fetchValue = \"vec4(\\n            getAChannel(\" + srcRCoords.join() + \"),\\n            hasNextCol ? getAChannel(\" + srcGCoords.join() + \") : 0.,\\n            hasNextRow ? getAChannel(\" + srcBCoords.join() + \") : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(\" + srcACoords.join() + \") : 0.)\";\n        var getBestIndicesAChannelSnippet = firstPass ? '' : \"\\n      float getBestIndicesAChannel(\" + intChannels.join() + \") {\\n        return getChannel(getBestIndicesA(\" + channels.join() + \"),\\n                                          vec2(\" + channels.slice(-2).join() + \"));\\n      }\";\n        this.userCode = \"\\n      float getAChannel(\" + intChannels.join() + \") {\\n        return getChannel(getA(\" + channels.join() + \"),\\n                               vec2(\" + channels.slice(-2).join() + \"));\\n      }\\n      \" + getBestIndicesAChannelSnippet + \"\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        bool hasNextCol = \" + coords[rank - 1] + \" < \" + (outShape[rank - 1] - 1) + \";\\n        bool hasNextRow = \" + coords[rank - 2] + \" < \" + (outShape[rank - 2] - 1) + \";\\n        \" + sourceLocSetup + \"\\n        ivec4 srcIdx = ivec4(sourceLocR\" + inChannel + \", sourceLocG\" + inChannel + \",\\n          sourceLocB\" + inChannel + \", sourceLocA\" + inChannel + \") * \" + windowSize + \";\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = \" + fetchValue + \";\\n\\n        for (int i = 0; i < \" + windowSize + \"; i++) {\\n          inIdx = srcIdx;\\n          \" + fetchCandidateIdx + \"\\n          vec4 candidate = \" + fetchValue + \";\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(\" + compOp + \"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    \";\n    }\n    return ArgMinMaxPackedProgram;\n}());\nexports.ArgMinMaxPackedProgram = ArgMinMaxPackedProgram;\n//# sourceMappingURL=argminmax_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AvgPool2DBackpropProgram = /** @class */ (function () {\n    function AvgPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float avgMultiplier = float(\" + avgMultiplier + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n            wR += \" + dilationHeight + \") {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + effectiveFilterWidth + \";\\n            wC+= \" + dilationWidth + \") {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return AvgPool2DBackpropProgram;\n}());\nexports.AvgPool2DBackpropProgram = AvgPool2DBackpropProgram;\nvar AvgPool3DBackpropProgram = /** @class */ (function () {\n    function AvgPool3DBackpropProgram(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n        this.userCode = \"\\n      const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n      const float avgMultiplier = float(\" + avgMultiplier + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \" + effectiveFilterDepth + \";\\n            wD += \" + dilationDepth + \") {\\n          float dyD = float(dyDCorner + wD) / \" + strideDepth + \".0;\\n\\n          if (dyD < 0.0 || dyD >= \" + convInfo.outDepth + \".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n              wR += \" + dilationHeight + \") {\\n            float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n            if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \" + effectiveFilterWidth + \";\\n                wC += \" + dilationWidth + \") {\\n              float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n              if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return AvgPool3DBackpropProgram;\n}());\nexports.AvgPool3DBackpropProgram = AvgPool3DBackpropProgram;\n//# sourceMappingURL=avg_pool_backprop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar BatchNormProgram = /** @class */ (function () {\n    function BatchNormProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \" + offsetSnippet + \";\\n        float scale = \" + scaleSnippet + \";\\n        float inv = scale * inversesqrt(variance + float(\" + varianceEpsilon + \"));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    \";\n    }\n    return BatchNormProgram;\n}());\nexports.BatchNormProgram = BatchNormProgram;\n//# sourceMappingURL=batchnorm_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar BatchNormPackedProgram = /** @class */ (function () {\n    function BatchNormPackedProgram(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n        broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        var offsetSnippet = 'vec4(0.0)';\n        if (offsetShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        var scaleSnippet = 'vec4(1.0)';\n        if (scaleShape != null) {\n            broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = \"\\n      void main() {\\n        vec4 offset = \" + offsetSnippet + \";\\n        vec4 scale = \" + scaleSnippet + \";\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(\" + varianceEpsilon + \"));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \";\n    }\n    return BatchNormPackedProgram;\n}());\nexports.BatchNormPackedProgram = BatchNormPackedProgram;\n//# sourceMappingURL=batchnorm_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipProgram = /** @class */ (function () {\n    function ClipProgram(aShape) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    \";\n    }\n    ClipProgram.prototype.getCustomSetupFunc = function (min, max) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.minLoc == null) {\n                _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(_this.minLoc, min);\n            gpgpu.gl.uniform1f(_this.maxLoc, max);\n        };\n    };\n    return ClipProgram;\n}());\nexports.ClipProgram = ClipProgram;\n//# sourceMappingURL=clip_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ClipPackedProgram = /** @class */ (function () {\n    function ClipPackedProgram(aShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    \";\n    }\n    ClipPackedProgram.prototype.getCustomSetupFunc = function (min, max) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.minLoc == null) {\n                _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(_this.minLoc, min);\n            gpgpu.gl.uniform1f(_this.maxLoc, max);\n        };\n    };\n    return ClipPackedProgram;\n}());\nexports.ClipPackedProgram = ClipPackedProgram;\n//# sourceMappingURL=clip_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ComplexAbsProgram = /** @class */ (function () {\n    function ComplexAbsProgram(shape) {\n        this.variableNames = ['real', 'imag'];\n        this.outputShape = shape;\n        this.userCode = \"\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    \";\n    }\n    return ComplexAbsProgram;\n}());\nexports.ComplexAbsProgram = ComplexAbsProgram;\n//# sourceMappingURL=complex_abs_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = require(\"../../ops/concat_util\");\nvar ConcatProgram = /** @class */ (function () {\n    // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n    function ConcatProgram(shapes) {\n        this.outputShape = [];\n        this.outputShape = concat_util.computeOutShape(shapes, 1 /* axis */);\n        this.variableNames = shapes.map(function (_, i) { return \"T\" + i; });\n        var offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][1];\n        for (var i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][1];\n        }\n        var snippets = [\"if (yC < \" + offsets[0] + \") setOutput(getT0(yR, yC));\"];\n        for (var i = 1; i < offsets.length; i++) {\n            var shift = offsets[i - 1];\n            snippets.push(\"else if (yC < \" + offsets[i] + \") \" +\n                (\"setOutput(getT\" + i + \"(yR, yC-\" + shift + \"));\"));\n        }\n        var lastIndex = offsets.length;\n        var lastShift = offsets[offsets.length - 1];\n        snippets.push(\"else setOutput(getT\" + lastIndex + \"(yR, yC-\" + lastShift + \"));\");\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \" + snippets.join('\\n        ') + \"\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}());\nexports.ConcatProgram = ConcatProgram;\n//# sourceMappingURL=concat_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar concat_util = require(\"../../ops/concat_util\");\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ConcatPackedProgram = /** @class */ (function () {\n    function ConcatPackedProgram(shapes, axis) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        this.outputShape = concat_util.computeOutShape(shapes, axis);\n        var shape = this.outputShape;\n        var rank = shape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        var coords = packing_util_1.getChannels('coords', rank);\n        var channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n        this.variableNames = shapes.map(function (_, i) { return \"T\" + i; });\n        var offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][axis];\n        for (var i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][axis];\n        }\n        var channel = channels[axis];\n        var lastChannels = channels.slice(-2);\n        var allChannels = channels.join();\n        var getValueSnippet = \"if (\" + channel + \" < \" + offsets[0] + \") {\\n        return getChannel(\\n            getT0(\" + allChannels + \"), vec2(\" + lastChannels.join() + \"));\\n        }\";\n        for (var i = 1; i < offsets.length; i++) {\n            var shift_1 = offsets[i - 1];\n            // Note: the >= comparison below may seem unnecessary given the check\n            // above but is needed to workaround branch execution issues on some\n            // devices. It makes all the conditions exclusive without relying on\n            // execution order.\n            getValueSnippet += \"\\n        if (\" + channel + \" < \" + offsets[i] + \"  && \" + channel + \" >= \" + offsets[i - 1] + \") {\\n          return getChannel(\\n            getT\" + i + \"(\" + shiftedChannels(channels, channel, shift_1) + \"),\\n            vec2(\" + shiftedChannels(lastChannels, channel, shift_1) + \"));\\n        }\";\n        }\n        var lastIndex = offsets.length;\n        var shift = offsets[offsets.length - 1];\n        getValueSnippet += \"\\n        return getChannel(\\n          getT\" + lastIndex + \"(\" + shiftedChannels(channels, channel, shift) + \"),\\n          vec2(\" + shiftedChannels(lastChannels, channel, shift) + \"));\";\n        this.userCode = \"\\n      float getValue(\" + channels.map(function (x) { return 'int ' + x; }) + \") {\\n        \" + getValueSnippet + \"\\n      }\\n\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        vec4 result = vec4(getValue(\" + coords + \"), 0., 0., 0.);\\n\\n        \" + coords[rank - 1] + \" = \" + coords[rank - 1] + \" + 1;\\n        if (\" + coords[rank - 1] + \" < \" + shape[rank - 1] + \") {\\n          result.g = getValue(\" + coords + \");\\n        }\\n\\n        \" + coords[rank - 2] + \" = \" + coords[rank - 2] + \" + 1;\\n        if (\" + coords[rank - 2] + \" < \" + shape[rank - 2] + \") {\\n          result.a = getValue(\" + coords + \");\\n        }\\n\\n        \" + coords[rank - 1] + \" = \" + coords[rank - 1] + \" - 1;\\n        if (\" + coords[rank - 2] + \" < \" + shape[rank - 2] + \" &&\\n            \" + coords[rank - 1] + \" < \" + shape[rank - 1] + \") {\\n          result.b = getValue(\" + coords + \");\\n        }\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return ConcatPackedProgram;\n}());\nexports.ConcatPackedProgram = ConcatPackedProgram;\n/**\n * Return an expression for coordinates into a vector where a given channel\n * will be offset by [shift].\n *\n * @param channels the channels to consider\n * @param channel the channel we want shifted\n * @param shift  the amount to subtract from the channel.\n *\n * @returns a string of the form 'x, y-[shift], z' where any one channel can\n * have the shift applied.\n */\nfunction shiftedChannels(channels, channel, shift) {\n    var channelIdx = channels.indexOf(channel);\n    var res = channels.map(function (c, idx) {\n        if (idx === channelIdx) {\n            return c + \" - \" + shift;\n        }\n        else {\n            return c;\n        }\n    });\n    return res.join();\n}\n//# sourceMappingURL=concat_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DDerFilterProgram = /** @class */ (function () {\n    function Conv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              if (\" + isChannelsLast + \") {\\n                float dyValue = getDy(b, yR, yC, d2);\\n                float xValue = getX(b, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              } else {\\n                float dyValue = getDy(b, d2, yR, yC);\\n                float xValue = getX(b, d1, xR, xC);\\n                dotProd += (xValue * dyValue);\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerFilterProgram;\n}());\nexports.Conv2DDerFilterProgram = Conv2DDerFilterProgram;\nvar Conv2DDerInputProgram = /** @class */ (function () {\n    function Conv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var rowDim = isChannelsLast ? 1 : 2;\n        var colDim = isChannelsLast ? 2 : 3;\n        var channelDim = isChannelsLast ? 3 : 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[\" + channelDim + \"];\\n\\n        ivec2 dyCorner = ivec2(coords[\" + rowDim + \"], coords[\" + colDim + \"]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n\\n              if (\" + isChannelsLast + \") {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv2DDerInputProgram;\n}());\nexports.Conv2DDerInputProgram = Conv2DDerInputProgram;\nvar Conv3DDerFilterProgram = /** @class */ (function () {\n    function Conv3DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padFront = convInfo.padInfo.front;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.userCode = \"\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yF = 0; yF < \" + convInfo.outDepth + \"; yF++) {\\n            int xF = wF + yF * \" + strideDepth + \" - \" + padFront + \";\\n\\n            if (xF < 0 || xF >= \" + convInfo.inDepth + \") {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n              int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n              if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n                int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n                if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv3DDerFilterProgram;\n}());\nexports.Conv3DDerFilterProgram = Conv3DDerFilterProgram;\nvar Conv3DDerInputProgram = /** @class */ (function () {\n    function Conv3DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padFront = filterDepth - 1 - convInfo.padInfo.front;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = \"\\n      const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \" + filterDepth + \"; wF++) {\\n          float dyF = float(dyFCorner + wF) / \" + strideDepth + \".0;\\n\\n          if (dyF < 0.0 || dyF >= \" + convInfo.outDepth + \".0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = \" + filterDepth + \" - 1 - wF;\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n            if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n              if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n              for (int d2 = 0; d2 < \" + convInfo.outChannels + \"; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv3DDerInputProgram;\n}());\nexports.Conv3DDerInputProgram = Conv3DDerInputProgram;\n//# sourceMappingURL=conv_backprop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DDerFilterProgram = /** @class */ (function () {\n    function DepthwiseConv2DDerFilterProgram(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * \" + channelMul + \" + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < \" + convInfo.batchSize + \"; b++) {\\n          for (int yR = 0; yR < \" + convInfo.outHeight + \"; yR++) {\\n            int xR = wR + yR * \" + strideHeight + \" - \" + padTop + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \" + convInfo.outWidth + \"; yC++) {\\n              int xC = wC + yC * \" + strideWidth + \" - \" + padLeft + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DDerFilterProgram;\n}());\nexports.DepthwiseConv2DDerFilterProgram = DepthwiseConv2DDerFilterProgram;\nvar DepthwiseConv2DDerInputProgram = /** @class */ (function () {\n    function DepthwiseConv2DDerInputProgram(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var padTop = filterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \" + filterHeight + \" - 1 - wR;\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \" + filterWidth + \" - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < \" + channelMul + \"; dm++) {\\n              int d2 = d1 * \" + channelMul + \" + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DDerInputProgram;\n}());\nexports.DepthwiseConv2DDerInputProgram = DepthwiseConv2DDerInputProgram;\n//# sourceMappingURL=conv_backprop_gpu_depthwise.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Conv2DProgram = /** @class */ (function () {\n    function Conv2DProgram(convInfo, addBias, activation, hasPreluActivationWeights) {\n        if (addBias === void 0) { addBias = false; }\n        if (activation === void 0) { activation = null; }\n        if (hasPreluActivationWeights === void 0) { hasPreluActivationWeights = false; }\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        var rowDim = isChannelsLast ? 1 : 2;\n        var colDim = isChannelsLast ? 2 : 3;\n        var channelDim = isChannelsLast ? 3 : 1;\n        var activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivationWeights) {\n                activationSnippet = \"float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          \" + activation + \"\\n        }\";\n            }\n            else {\n                activationSnippet = \"\\n          float activation(float x) {\\n            \" + activation + \"\\n          }\\n        \";\n            }\n            applyActivationSnippet = \"result = activation(result);\";\n        }\n        var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.userCode = \"\\n      \" + activationSnippet + \"\\n\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[\" + channelDim + \"];\\n\\n        ivec2 xRCCorner =\\n            ivec2(coords[\" + rowDim + \"], coords[\" + colDim + \"]) * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              if (\" + isChannelsLast + \") {\\n                vec4 xValues = vec4(\\n                  getX(batch, xR, xC, d1),\\n                  getX(batch, xR, xC, d1 + 1),\\n                  getX(batch, xR, xC, d1 + 2),\\n                  getX(batch, xR, xC, d1 + 3)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec4 xValues = vec4(\\n                  getX(batch, d1, xR, xC),\\n                  getX(batch, d1 + 1, xR, xC),\\n                  getX(batch, d1 + 2, xR, xC),\\n                  getX(batch, d1 + 3, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n\\n            if (\" + (inputDepthVec4Remainder === 1) + \") {\\n\\n              if (\" + isChannelsLast + \") {\\n                dotProd +=\\n                    getX(batch, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                    getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n              } else {\\n                dotProd +=\\n                    getX(batch, \" + inputDepthNearestVec4 + \", xR, xC) *\\n                    getW(wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n              }\\n\\n            } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n              );\\n\\n              if (\" + isChannelsLast + \") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                  getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec2 xValues = vec2(\\n                  getX(batch, \" + inputDepthNearestVec4 + \", xR, xC),\\n                  getX(batch, \" + inputDepthNearestVec4 + \" + 1, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                getW(wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n              );\\n\\n              if (\" + isChannelsLast + \") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                  getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                  getX(batch, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec3 xValues = vec3(\\n                  getX(batch, \" + inputDepthNearestVec4 + \", xR, xC),\\n                  getX(batch, \" + inputDepthNearestVec4 + \" + 1, xR, xC),\\n                  getX(batch, \" + inputDepthNearestVec4 + \" + 2, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            }\\n          }\\n        }\\n\\n        float result = dotProd;\\n        \" + addBiasSnippet + \"\\n        \" + applyActivationSnippet + \"\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return Conv2DProgram;\n}());\nexports.Conv2DProgram = Conv2DProgram;\nvar Conv3DProgram = /** @class */ (function () {\n    function Conv3DProgram(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var padFront = convInfo.padInfo.front;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        var inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = \"\\n      const ivec3 strides = ivec3(\" + strideDepth + \", \" + strideHeight + \", \" + strideWidth + \");\\n      const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \" + filterDepth + \"; wF++) {\\n          int xF = xFCorner + wF * \" + dilationDepth + \";\\n\\n          if (xF < 0 || xF >= \" + convInfo.inDepth + \") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n            int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n              int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < \" + inputDepthNearestVec4 + \"; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (\" + (inputDepthVec4Remainder === 1) + \") {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \") *\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \", d2);\\n              } else if (\" + (inputDepthVec4Remainder === 2) + \") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \" + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (\" + (inputDepthVec4Remainder === 3) + \") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \"),\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \" + 1),\\n                  getX(batch, xF, xR, xC, \" + inputDepthNearestVec4 + \" + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \", d2),\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \" + 1, d2),\\n                  getW(wF, wR, wC, \" + inputDepthNearestVec4 + \" + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return Conv3DProgram;\n}());\nexports.Conv3DProgram = Conv3DProgram;\n//# sourceMappingURL=conv_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthwiseConv2DProgram = /** @class */ (function () {\n    function DepthwiseConv2DProgram(convInfo, addBias, activation, hasPreluActivation) {\n        if (addBias === void 0) { addBias = false; }\n        if (activation === void 0) { activation = null; }\n        if (hasPreluActivation === void 0) { hasPreluActivation = false; }\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var channelMul = convInfo.outChannels / convInfo.inChannels;\n        var activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = \"float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          \" + activation + \"\\n        }\";\n            }\n            else {\n                activationSnippet = \"\\n          float activation(float x) {\\n            \" + activation + \"\\n          }\\n        \";\n            }\n            applyActivationSnippet = \"result = activation(result);\";\n        }\n        var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.userCode = \"\\n      \" + activationSnippet + \"\\n\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \" + channelMul + \";\\n        int q = d2 - d1 * \" + channelMul + \";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \" + filterHeight + \"; wR++) {\\n          int xR = xRCorner + wR * \" + dilationHeight + \";\\n\\n          if (xR < 0 || xR >= \" + xNumRows + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidth + \"; wC++) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            if (xC < 0 || xC >= \" + xNumCols + \") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n\\n        float result = dotProd;\\n        \" + addBiasSnippet + \"\\n        \" + applyActivationSnippet + \"\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return DepthwiseConv2DProgram;\n}());\nexports.DepthwiseConv2DProgram = DepthwiseConv2DProgram;\n//# sourceMappingURL=conv_gpu_depthwise.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../../util\");\nvar DepthwiseConvPacked2DProgram = /** @class */ (function () {\n    function DepthwiseConvPacked2DProgram(convInfo, addBias, activation, hasPreluActivation) {\n        if (addBias === void 0) { addBias = false; }\n        if (activation === void 0) { activation = null; }\n        if (hasPreluActivation === void 0) { hasPreluActivation = false; }\n        this.variableNames = ['x', 'W'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = convInfo.outShape;\n        var xNumRows = convInfo.inHeight;\n        var xNumCols = convInfo.inWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var texelsAcross = filterWidth;\n        var mainLoop = \"int xR; int xC; int xCOffset;\";\n        for (var r = 0; r < filterHeight; r++) {\n            for (var c = 0; c < filterWidth; c++) {\n                mainLoop += \"\\n          vec4 xTexelR\" + r + \"C\" + c * 2 + \" = vec4(0.);\\n          vec4 wR\" + r + \"C\" + c + \" = vec4(0.);\\n          vec4 xR\" + r + \"C\" + c + \" = vec4(0.);\";\n            }\n        }\n        /**\n         * This vectorized implementation works by gathering the values needed for\n         * each output channel's dot product into vec4's and then multiplying them\n         * all together (this happens in the final double for-loop below). Most of\n         * the main loop consists of constructing these vec4's with the minimum\n         * number of texture2D calls, which means making use of all four returned\n         * values from a texture2D call at once.\n         */\n        for (var r = 0; r < filterHeight; r++) {\n            for (var texelC = 0; texelC < texelsAcross; texelC++) {\n                var c = texelC * 2;\n                mainLoop += \"\\n          xR = xRCorner + \" + r * dilationHeight + \";\\n          xC = xCCorner + \" + c * dilationWidth + \";\\n        \";\n                if (strideWidth === 1) {\n                    if (c < filterWidth) {\n                        // If padding is odd, the outer texels have to be composed.\n                        if (padLeft % 2 === 1) {\n                            // TODO: Ensure vec4 previous does not result in redundant sample,\n                            // and avoid setting xTexelRC's that exceed the boundary in the\n                            // first place rather than resetting them to vec4(0)).\n                            // To compute xCOffset:\n                            // - If padding is odd, we must add 1 to ensure we ask for an\n                            // even-numbered row.\n                            // - We subtract 2 to access the previous texel.\n                            mainLoop += \"\\n                xCOffset = xC + 1;\\n                if(xR >= 0 && xR < \" + xNumRows + \" && xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + c + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + c + \" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + 1 - 2;\\n                if(xR >= 0 && xR < \" + xNumRows + \" && xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\\n                  xR\" + r + \"C\" + c + \" = vec4(previous.zw, xTexelR\" + r + \"C\" + c + \".xy);\\n                } else {\\n                  xR\" + r + \"C\" + c + \" = vec4(0, 0, xTexelR\" + r + \"C\" + c + \".xy);\\n                }\\n              \";\n                        }\n                        else {\n                            // Padding is even, so xRC corresponds to a single texel.\n                            mainLoop += \"\\n                if(xR >= 0 && xR < \" + xNumRows + \" && xC >= 0 && xC < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + c + \" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + c + \" = vec4(0.);\\n                }\\n\\n                xR\" + r + \"C\" + c + \" = xTexelR\" + r + \"C\" + c + \";\\n              \";\n                        }\n                        if (c + 1 < filterWidth) {\n                            // If dilation is even, the second entry should match the first\n                            // (either both are composed or both are single samples). But if\n                            // dilation is odd, then the second entry should be the opposite\n                            // of the first (if the first is composed, the second is a single\n                            // sample, and vice versa.)\n                            var nextTexelOffset = padLeft % 2 === 0 ?\n                                util.nearestLargerEven(dilationWidth) :\n                                dilationWidth;\n                            if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                                (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                                mainLoop += \"\\n                  xCOffset = xC + \" + padLeft % 2 + \" + \" + nextTexelOffset + \";\\n\\n                  if(xR >= 0 && xR < \" + xNumRows + \" &&\\n                    xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                    xTexelR\" + r + \"C\" + (c + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                  }\\n                \";\n                                // If dilation > 1 then the xRC's will not be able to share any\n                                // values, so each xRC will require two unique calls to getX.\n                                if (dilationWidth > 1) {\n                                    mainLoop += \"\\n                    xCOffset -= 2;\\n                    if(xR >= 0 && xR < \" + xNumRows + \" &&\\n                      xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                      xTexelR\" + r + \"C\" + c + \" = getX(batch, xR, xCOffset, d1);\\n                    } else {\\n                      xTexelR\" + r + \"C\" + c + \" = vec4(0.);\\n                    }\\n                  \";\n                                }\n                                mainLoop += \"\\n                  xR\" + r + \"C\" + (c + 1) + \" = vec4(\\n                    xTexelR\" + r + \"C\" + c + \".zw, xTexelR\" + r + \"C\" + (c + 2) + \".xy);\\n                \";\n                            }\n                            else {\n                                mainLoop += \"\\n                  xCOffset = xC + \" + nextTexelOffset + \";\\n\\n                  if(xR >= 0 && xR < \" + xNumRows + \" &&\\n                    xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                    xTexelR\" + r + \"C\" + (c + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                  }\\n\\n                  xR\" + r + \"C\" + (c + 1) + \" = xTexelR\" + r + \"C\" + (c + 2) + \";\\n                \";\n                            }\n                        }\n                    }\n                }\n                else { // stride > 1\n                    if (c < filterWidth) {\n                        mainLoop += \"\\n              if(xR >= 0 && xR < \" + xNumRows + \") {\\n            \";\n                        // Depending on whether padLeft is even or odd, we want either the\n                        // xy or zw channels from X texels for xR${r}C${c}. If padLeft is\n                        // even, xR${r}C${c + 1} is simply the zw channels of texels we've\n                        // already sampled. But if padLeft is odd, xR${r}C{$c + 1}.zw will\n                        // need to come from the xy channels of a new texel, hence the `vec4\n                        // final` initialized below.\n                        if (padLeft % 2 === 1) {\n                            mainLoop += \"\\n                xCOffset = xC + 1 - \" + strideWidth + \";\\n                if(xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + c + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + c + \" = vec4(0.);\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + (c + 2) + \" = getX(batch, xR, xC + 1, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + (c + 2) + \" = vec4(0.);\\n                }\\n\\n                xR\" + r + \"C\" + c + \" = vec4(\\n                  xTexelR\" + r + \"C\" + c + \".zw, xTexelR\" + r + \"C\" + (c + 2) + \".zw);\\n              \";\n                            if (c + 1 < filterWidth) {\n                                mainLoop += \"\\n                  vec4 final = vec4(0.);\\n                  xCOffset = xC + 1 + \" + strideWidth + \";\\n                  if(xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xR\" + r + \"C\" + (c + 1) + \" = vec4(xTexelR\" + r + \"C\" + (c + 2) + \".xy, final.xy);\\n                \";\n                            }\n                        }\n                        else {\n                            mainLoop += \"\\n                if(xC >= 0 && xC < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + c + \" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + c + \" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + \" + strideWidth + \";\\n                if(xCOffset >= 0 && xCOffset < \" + xNumCols + \") {\\n                  xTexelR\" + r + \"C\" + (c + 2) + \" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\" + r + \"C\" + (c + 2) + \" = vec4(0.);\\n                }\\n\\n                xR\" + r + \"C\" + c + \" = vec4(\\n                  xTexelR\" + r + \"C\" + c + \".xy, xTexelR\" + r + \"C\" + (c + 2) + \".xy);\\n              \";\n                            if (c + 1 < filterWidth) {\n                                mainLoop += \"\\n                  xR\" + r + \"C\" + (c + 1) + \" = vec4(\\n                    xTexelR\" + r + \"C\" + c + \".zw, xTexelR\" + r + \"C\" + (c + 2) + \".zw);\\n                \";\n                            }\n                        }\n                        mainLoop += \"}\";\n                    }\n                }\n                if (c < filterWidth) {\n                    mainLoop += \"\\n            vec4 wTexelR\" + r + \"C\" + c + \" = getW(\" + r + \", \" + c + \", d1, q);\\n            wR\" + r + \"C\" + c + \" = vec4(wTexelR\" + r + \"C\" + c + \".xz, wTexelR\" + r + \"C\" + c + \".xz);\\n          \";\n                    if (c + 1 < filterWidth) {\n                        mainLoop += \"\\n              vec4 wTexelR\" + r + \"C\" + (c + 1) + \" = getW(\" + r + \", \" + (c + 1) + \", d1, q);\\n              wR\" + r + \"C\" + (c + 1) + \" =\\n                vec4(wTexelR\" + r + \"C\" + (c + 1) + \".xz, wTexelR\" + r + \"C\" + (c + 1) + \".xz);\";\n                    }\n                }\n            }\n        }\n        for (var r = 0; r < filterHeight; r++) {\n            for (var c = 0; c < filterWidth; c++) {\n                mainLoop += \"dotProd += xR\" + r + \"C\" + c + \" * wR\" + r + \"C\" + c + \";\";\n            }\n        }\n        var activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \" + activation + \"\\n        }\";\n            }\n            else {\n                activationSnippet = \"vec4 activation(vec4 x) {\\n          \" + activation + \"\\n        }\";\n            }\n            applyActivationSnippet = \"result = activation(result);\";\n        }\n        var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.userCode = \"\\n      \" + activationSnippet + \"\\n\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2;\\n        int q = 0;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        vec4 dotProd = vec4(0.);\\n\\n        \" + mainLoop + \"\\n\\n        vec4 result = dotProd;\\n        \" + addBiasSnippet + \"\\n        \" + applyActivationSnippet + \"\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return DepthwiseConvPacked2DProgram;\n}());\nexports.DepthwiseConvPacked2DProgram = DepthwiseConvPacked2DProgram;\n//# sourceMappingURL=conv_packed_gpu_depthwise.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CropAndResizeProgram = /** @class */ (function () {\n    function CropAndResizeProgram(imageShape, boxShape, cropSize, method, extrapolationValue) {\n        this.variableNames = ['Image', 'Boxes', 'BoxInd'];\n        this.outputShape = [];\n        var batch = imageShape[0], imageHeight = imageShape[1], imageWidth = imageShape[2], depth = imageShape[3];\n        var numBoxes = boxShape[0];\n        var cropHeight = cropSize[0], cropWidth = cropSize[1];\n        this.outputShape = [numBoxes, cropHeight, cropWidth, depth];\n        var methodId = method === 'bilinear' ? 1 : 0;\n        var _a = [imageHeight - 1 + \".0\", imageWidth - 1 + \".0\"], inputHeightFloat = _a[0], inputWidthFloat = _a[1];\n        var _b = cropHeight > 1 ?\n            [\n                \"\" + (imageHeight - 1) / (cropHeight - 1),\n                '(y2-y1) * height_ratio',\n                \"y1*\" + inputHeightFloat + \" + float(y)*(height_scale)\",\n            ] :\n            [\n                '0.0',\n                '0.0',\n                \"0.5 * (y1+y2) * \" + inputHeightFloat,\n            ], heightRatio = _b[0], heightScale = _b[1], inY = _b[2];\n        var _c = cropWidth > 1 ?\n            [\n                \"\" + (imageWidth - 1) / (cropWidth - 1),\n                '(x2-x1) * width_ratio',\n                \"x1*\" + inputWidthFloat + \" + float(x)*(width_scale)\",\n            ] :\n            [\n                '0.0',\n                '0.0',\n                \"0.5 * (x1+x2) * \" + inputWidthFloat,\n            ], widthRatio = _c[0], widthScale = _c[1], inX = _c[2];\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n        this.userCode = \"\\n      const float height_ratio = float(\" + heightRatio + \");\\n      const float width_ratio = float(\" + widthRatio + \");\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= \" + batch + \") {\\n          return;\\n        }\\n\\n        float height_scale = \" + heightScale + \";\\n        float width_scale = \" + widthScale + \";\\n\\n        float in_y = \" + inY + \";\\n        if( in_y < 0.0 || in_y > \" + inputHeightFloat + \" ) {\\n          setOutput(float(\" + extrapolationValue + \"));\\n          return;\\n        }\\n        float in_x = \" + inX + \";\\n        if( in_x < 0.0 || in_x > \" + inputWidthFloat + \" ) {\\n          setOutput(float(\" + extrapolationValue + \"));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(\" + methodId + \" == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    \";\n    }\n    return CropAndResizeProgram;\n}());\nexports.CropAndResizeProgram = CropAndResizeProgram;\n//# sourceMappingURL=crop_and_resize_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar CumSumProgram = /** @class */ (function () {\n    function CumSumProgram(shape, exclusive, reverse) {\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        var rank = shape.length;\n        var finalDim = shape[shape.length - 1];\n        var comparator = reverse ? '<' : '>';\n        this.userCode = \"\\n      int getIndex(int i) {\\n        \" + (reverse ? \"return \" + finalDim + \" -i - 1;\" : 'return i;') + \"\\n      }\\n\\n      void main() {\\n        \" + shader_compiler_1.getCoordsDataType(rank) + \" coords = getOutputCoords();\\n        int end = \" + getFinalCoord(rank, 'coords') + \";\\n        float val = 0.0;\\n        for (int i = \" + finalDim + \" - 1; i >= 0; i -= 1) {\\n          int idx = getIndex(i);\\n          if (idx \" + comparator + \" end) {\\n            continue;\\n          }\\n          if (idx == end && \" + exclusive + \") {\\n            continue;\\n          }\\n          \" + getFinalCoord(rank, 'coords') + \" = idx;\\n          val += getX(\" + getCoords(rank, 'coords') + \");\\n        }\\n        setOutput(val);\\n      }\\n    \";\n    }\n    return CumSumProgram;\n}());\nexports.CumSumProgram = CumSumProgram;\nfunction getCoords(rank, name) {\n    if (rank === 1) {\n        return \"\" + name;\n    }\n    else if (rank === 2) {\n        return name + \".x, \" + name + \".y\";\n    }\n    else if (rank === 3) {\n        return name + \".x, \" + name + \".y, \" + name + \".z\";\n    }\n    else if (rank === 4) {\n        return name + \".x, \" + name + \".y, \" + name + \".z, \" + name + \".w\";\n    }\n    else {\n        throw Error(\"Cumulative sum for rank \" + rank + \" is not yet supported\");\n    }\n}\nfunction getFinalCoord(rank, name) {\n    if (rank === 1) {\n        return \"\" + name;\n    }\n    else if (rank === 2) {\n        return name + \".y\";\n    }\n    else if (rank === 3) {\n        return name + \".z\";\n    }\n    else if (rank === 4) {\n        return name + \".w\";\n    }\n    else {\n        throw Error(\"Cumulative sum for rank \" + rank + \" is not yet supported\");\n    }\n}\n//# sourceMappingURL=cumsum_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_util = require(\"./shader_compiler_util\");\nvar tex_util_1 = require(\"./tex_util\");\nvar DecodeMatrixProgram = /** @class */ (function () {\n    function DecodeMatrixProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        this.outPackingScheme = tex_util_1.PackingScheme.DENSE;\n        var texShape = tex_util_1.getDenseTexShape(outputShape);\n        var glsl = glsl_version_1.getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \" + shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape) + \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = 4 * (resTexRC.x * \" + texShape[1] + \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        \" + glsl.output + \" = result;\\n      }\\n    \";\n    }\n    return DecodeMatrixProgram;\n}());\nexports.DecodeMatrixProgram = DecodeMatrixProgram;\n//# sourceMappingURL=decode_matrix_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_util = require(\"./shader_compiler_util\");\nvar tex_util_1 = require(\"./tex_util\");\nvar DecodeMatrixPackedProgram = /** @class */ (function () {\n    function DecodeMatrixPackedProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outPackingScheme = tex_util_1.PackingScheme.DENSE;\n        var texShape = tex_util_1.getDenseTexShape(outputShape);\n        var glsl = glsl_version_1.getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \" + shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape) + \"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\" + texShape[0] + \", \" + texShape[1] + \"));\\n        int index = 4 * (resTexRC.x * \" + texShape[1] + \" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        \" + glsl.output + \" = result;\\n      }\\n    \";\n    }\n    return DecodeMatrixPackedProgram;\n}());\nexports.DecodeMatrixPackedProgram = DecodeMatrixPackedProgram;\n//# sourceMappingURL=decode_matrix_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DepthToSpaceProgram = /** @class */ (function () {\n    function DepthToSpaceProgram(outputShape, blockSize, dataFormat) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.blockSize = blockSize;\n        this.dataFormat = dataFormat;\n        this.userCode = \"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \" + this.getHeightCoordString() + \";\\n      int w = \" + this.getWidthCoordString() + \";\\n      int d = \" + this.getDepthCoordString() + \";\\n\\n      int in_h = h / \" + blockSize + \";\\n      int offset_h = imod(h, \" + blockSize + \");\\n      int in_w = w / \" + blockSize + \";\\n      int offset_w = imod(w, \" + blockSize + \");\\n      int offset_d = (offset_h * \" + blockSize + \" + offset_w) *\\n        \" + this.getOutputDepthSize() + \";\\n      int in_d = d + offset_d;\\n\\n      float result = \" + this.getInputSamplingString() + \";\\n      setOutput(result);\\n    }\\n  \";\n    }\n    DepthToSpaceProgram.prototype.getHeightCoordString = function () {\n        if (this.dataFormat === 'NHWC') {\n            return \"coords[1]\";\n        }\n        else {\n            return \"coords[2]\";\n        }\n    };\n    DepthToSpaceProgram.prototype.getWidthCoordString = function () {\n        if (this.dataFormat === 'NHWC') {\n            return \"coords[2]\";\n        }\n        else {\n            return \"coords[3]\";\n        }\n    };\n    DepthToSpaceProgram.prototype.getDepthCoordString = function () {\n        if (this.dataFormat === 'NHWC') {\n            return \"coords[3]\";\n        }\n        else {\n            return \"coords[1]\";\n        }\n    };\n    DepthToSpaceProgram.prototype.getOutputDepthSize = function () {\n        if (this.dataFormat === 'NHWC') {\n            return this.outputShape[3];\n        }\n        else {\n            return this.outputShape[1];\n        }\n    };\n    DepthToSpaceProgram.prototype.getInputSamplingString = function () {\n        if (this.dataFormat === 'NHWC') {\n            return \"getX(b, in_h, in_w, in_d)\";\n        }\n        else {\n            return \"getX(b, in_d, in_h, in_w)\";\n        }\n    };\n    return DepthToSpaceProgram;\n}());\nexports.DepthToSpaceProgram = DepthToSpaceProgram;\n//# sourceMappingURL=depth_to_space_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DiagProgram = /** @class */ (function () {\n    function DiagProgram(size) {\n        this.variableNames = ['X'];\n        this.outputShape = [size, size];\n        this.userCode = \"\\n      void main() {\\n          ivec2 coords = getOutputCoords();\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\n          setOutput(val);\\n      }\\n    \";\n    }\n    return DiagProgram;\n}());\nexports.DiagProgram = DiagProgram;\n//# sourceMappingURL=diag_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_compiler_util_1 = require(\"./shader_compiler_util\");\nvar tex_util_1 = require(\"./tex_util\");\nvar EncodeFloatProgram = /** @class */ (function () {\n    function EncodeFloatProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.outTexUsage = tex_util_1.TextureUsage.DOWNLOAD;\n        var glsl = glsl_version_1.getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      \" + shader_compiler_util_1.ENCODE_FLOAT_SNIPPET + \"\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        \" + glsl.output + \" = encode_float(x);\\n      }\\n    \";\n    }\n    return EncodeFloatProgram;\n}());\nexports.EncodeFloatProgram = EncodeFloatProgram;\n//# sourceMappingURL=encode_float_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_compiler_util_1 = require(\"./shader_compiler_util\");\nvar tex_util_1 = require(\"./tex_util\");\nvar EncodeFloatPackedProgram = /** @class */ (function () {\n    function EncodeFloatPackedProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outTexUsage = tex_util_1.TextureUsage.DOWNLOAD;\n        var glsl = glsl_version_1.getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      \" + shader_compiler_util_1.ENCODE_FLOAT_SNIPPET + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        \" + glsl.output + \" = encode_float(x);\\n      }\\n    \";\n    }\n    return EncodeFloatPackedProgram;\n}());\nexports.EncodeFloatPackedProgram = EncodeFloatPackedProgram;\n//# sourceMappingURL=encode_float_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_util = require(\"./shader_compiler_util\");\nvar EncodeMatrixProgram = /** @class */ (function () {\n    function EncodeMatrixProgram(outputShape, texShape, inputIsUnsignedByte) {\n        if (inputIsUnsignedByte === void 0) { inputIsUnsignedByte = false; }\n        this.variableNames = ['A'];\n        var glsl = glsl_version_1.getGlslDifferences();\n        var height = texShape[0], width = texShape[1];\n        this.outputShape = outputShape;\n        var output = \"result\";\n        if (inputIsUnsignedByte) {\n            output = \"floor(result * 255. + 0.5)\";\n        }\n        this.userCode = \"\\n      \" + shader_util.getFlatIndexFrom3D(outputShape) + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        int flatIndex = getFlatIndex(coords);\\n        int offset = imod(flatIndex, 4);\\n\\n        flatIndex = idiv(flatIndex, 4, 1.);\\n        \\n        int r = flatIndex / \" + width + \";\\n        int c = imod(flatIndex, \" + width + \");\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n        vec4 values = \" + glsl.texture2D + \"(A, uv);\\n\\n        float result;\\n\\n        if(offset == 0) {\\n          result = values[0];\\n        } else if(offset == 1) {\\n          result = values[1];\\n        } else if(offset == 2) {\\n          result = values[2];\\n        } else {\\n          result = values[3];\\n        }\\n\\n        \" + glsl.output + \" = vec4(\" + output + \", 0., 0., 0.);\\n      }\\n    \";\n    }\n    return EncodeMatrixProgram;\n}());\nexports.EncodeMatrixProgram = EncodeMatrixProgram;\n//# sourceMappingURL=encode_matrix_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar shader_util = require(\"./shader_compiler_util\");\n/*\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\n(indices are [batch, row, col]).\n\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\n-------   -------   -------   -------   -------   -------\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\n-------   -------   -------   -------   -------   -------\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\nSingle texels contain only values from the same batch, and from adjacent rows\nand columns.\n */\nvar EncodeMatrixPackedProgram = /** @class */ (function () {\n    function EncodeMatrixPackedProgram(outputShape, texShape, inputIsUnsignedByte) {\n        if (inputIsUnsignedByte === void 0) { inputIsUnsignedByte = false; }\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        var glsl = glsl_version_1.getGlslDifferences();\n        var height = texShape[0], width = texShape[1];\n        this.outputShape = outputShape;\n        var mainLoop = '';\n        var output = 'result';\n        if (inputIsUnsignedByte) {\n            output = 'floor(result * 255. + 0.5)';\n        }\n        for (var row = 0; row <= 1; row++) {\n            for (var col = 0; col <= 1; col++) {\n                var channel = row * 2 + col;\n                mainLoop += \"\\n          localCoords = coords;\\n          if(localCoords[2] + \" + col + \" < \" + outputShape[2] + \") {\\n            localCoords[2] += \" + col + \";\\n            if(localCoords[1] + \" + row + \" < \" + outputShape[1] + \") {\\n              localCoords[1] += \" + row + \";\\n\\n              flatIndex = getFlatIndex(localCoords);\\n              offset = imod(flatIndex, 4);\\n\\n              flatIndex = idiv(flatIndex, 4, 1.);\\n\\n              r = flatIndex / \" + width + \";\\n              c = imod(flatIndex, \" + width + \");\\n              uv = (vec2(c, r) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n              values = \" + glsl.texture2D + \"(A, uv);\\n\\n              if(offset == 0) {\\n                result[\" + channel + \"] = values[0];\\n              } else if(offset == 1) {\\n                result[\" + channel + \"] = values[1];\\n              } else if(offset == 2) {\\n                result[\" + channel + \"] = values[2];\\n              } else {\\n                result[\" + channel + \"] = values[3];\\n              }\\n            }\\n          }\\n        \";\n            }\n        }\n        this.userCode = \"\\n      \" + shader_util.getFlatIndexFrom3D(outputShape) + \"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n        int flatIndex, r, c, offset;\\n        ivec3 localCoords;\\n        vec2 uv;\\n        vec4 values;\\n\\n        \" + mainLoop + \"\\n\\n        \" + glsl.output + \" = \" + output + \";\\n      }\\n    \";\n    }\n    return EncodeMatrixPackedProgram;\n}());\nexports.EncodeMatrixPackedProgram = EncodeMatrixPackedProgram;\n//# sourceMappingURL=encode_matrix_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FillProgram = /** @class */ (function () {\n    function FillProgram(shape, value) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        this.userCode = \"\\n      uniform float value;\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    \";\n    }\n    FillProgram.prototype.getCustomSetupFunc = function (value) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.valueLoc == null) {\n                _this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n            }\n            gpgpu.gl.uniform1f(_this.valueLoc, value);\n        };\n    };\n    return FillProgram;\n}());\nexports.FillProgram = FillProgram;\n//# sourceMappingURL=fill_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar GatherProgram = /** @class */ (function () {\n    function GatherProgram(aShape, indicesLength, axis) {\n        this.variableNames = ['A', 'indices'];\n        var outputShape = aShape.slice();\n        outputShape[axis] = indicesLength;\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape, axis);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return GatherProgram;\n}());\nexports.GatherProgram = GatherProgram;\nfunction getSourceCoords(aShape, axis) {\n    var rank = aShape.length;\n    if (rank > 4) {\n        throw Error(\"Gather for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"int(getIndices(resRC))\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        if (i === axis) {\n            sourceCoords.push(\"int(getIndices(\" + currentCoords[i] + \"))\");\n        }\n        else {\n            sourceCoords.push(\"\" + currentCoords[i]);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=gather_gpu.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar GatherNDProgram = /** @class */ (function () {\n    function GatherNDProgram(sliceDim, strides, shape) {\n        this.sliceDim = sliceDim;\n        this.strides = strides;\n        this.variableNames = ['x', 'indices'];\n        this.outputShape = shape;\n        var stridesType = shader_compiler_1.getCoordsDataType(strides.length);\n        var dtype = shader_compiler_1.getCoordsDataType(shape.length);\n        var strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = \"\\n        \" + stridesType + \" strides = \" + stridesType + \"(\" + this.strides + \");\\n         void main() {\\n          \" + dtype + \" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \" + this.sliceDim + \"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \" + strideString + \";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \";\n    }\n    return GatherNDProgram;\n}());\nexports.GatherNDProgram = GatherNDProgram;\n//# sourceMappingURL=gather_nd_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar shader_compiler = require(\"./shader_compiler\");\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.shape,\n            texShape: input.isUniform ? null : input.texData.texShape,\n            isUniform: input.isUniform,\n            isPacked: input.isUniform ? false : input.texData.isPacked,\n            flatOffset: null\n        };\n        if (input.texData != null && input.texData.slice != null &&\n            input.texData.slice.flatOffset > 0) {\n            shapeInfo.flatOffset = input.texData.slice.flatOffset;\n        }\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.shape,\n        texShape: output.texData.texShape,\n        isUniform: false,\n        isPacked: output.texData.isPacked,\n        flatOffset: null\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.packedInputs);\n    var webGLProgram = gpgpu.createProgram(source);\n    // Add special uniforms (NAN, INFINITY)\n    var infLoc = null;\n    var nanLoc = gpgpu.getUniformLocation(webGLProgram, 'NAN', false);\n    if (environment_1.env().getNumber('WEBGL_VERSION') === 1) {\n        infLoc = gpgpu.getUniformLocation(webGLProgram, 'INFINITY', false);\n    }\n    // Add user-defined uniforms\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var varName = program.variableNames[i];\n        var shouldThrow = false;\n        uniformLocations[varName] =\n            gpgpu.getUniformLocation(webGLProgram, varName, shouldThrow);\n        uniformLocations[\"offset\" + varName] =\n            gpgpu.getUniformLocation(webGLProgram, \"offset\" + varName, shouldThrow);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo,\n        infLoc: infLoc,\n        nanLoc: nanLoc,\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var input = inputs[i];\n        var shapeB = input.shape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        // The input is uploaded as uniform.\n        if (s.isUniform && input.isUniform) {\n            return;\n        }\n        var texShapeA = s.texShape;\n        var texShapeB = input.isUniform ? null : input.texData.texShape;\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(gpgpu, binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    if (output.texData.isPacked) {\n        gpgpu.setOutputPackedMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    else {\n        gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    gpgpu.setProgram(binary.webGLProgram);\n    // Set special uniforms (NAN, INFINITY)\n    if (environment_1.env().getNumber('WEBGL_VERSION') === 1) {\n        if (binary.infLoc !== null) {\n            gpgpu.gl.uniform1f(binary.infLoc, Infinity);\n        }\n    }\n    if (binary.nanLoc !== null) {\n        gpgpu.gl.uniform1f(binary.nanLoc, NaN);\n    }\n    // Set user-defined inputs\n    inputs.forEach(function (input, i) {\n        var varName = binary.program.variableNames[i];\n        var varLoc = binary.uniformLocations[varName];\n        var varOffsetLoc = binary.uniformLocations[\"offset\" + varName];\n        if (varLoc == null) {\n            // The compiler inferred that this variable is not used in this shader.\n            return;\n        }\n        if (input.isUniform) {\n            // Upload the values of the tensor as uniform.\n            if (util.sizeFromShape(input.shape) < 2) {\n                gpgpu.gl.uniform1f(varLoc, input.uniformValues[0]);\n            }\n            else {\n                var vals = input.uniformValues;\n                if (!(vals instanceof Float32Array)) {\n                    vals = new Float32Array(vals);\n                }\n                gpgpu.gl.uniform1fv(varLoc, vals);\n            }\n            return;\n        }\n        // If the input was sliced, upload the flat offset index.\n        if (input.texData.slice != null && varOffsetLoc != null) {\n            gpgpu.gl.uniform1i(varOffsetLoc, input.texData.slice.flatOffset);\n        }\n        gpgpu.setInputMatrixTexture(input.texData.texture, varLoc, i);\n    });\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        var hasOffset = x.texData != null && x.texData.slice != null &&\n            x.texData.slice.flatOffset > 0;\n        var texShape = x.isUniform ? 'uniform' : x.texData.texShape;\n        keyInputs += x.shape + \"_\" + texShape + \"_\" + hasOffset;\n    });\n    var keyUserCode = program.userCode;\n    var key = program.constructor.name;\n    // Fast string concat. See https://jsperf.com/string-concatenation/14.\n    key += '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n//# sourceMappingURL=gpgpu_math.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar Im2ColPackedProgram = /** @class */ (function () {\n    function Im2ColPackedProgram(outputShape, inputShape, convInfo) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        var filterWidth = convInfo.filterWidth, inChannels = convInfo.inChannels, strideWidth = convInfo.strideWidth, strideHeight = convInfo.strideHeight, padInfo = convInfo.padInfo, outWidth = convInfo.outWidth, dilationWidth = convInfo.dilationWidth, dilationHeight = convInfo.dilationHeight, dataFormat = convInfo.dataFormat;\n        var left = padInfo.left, top = padInfo.top;\n        var itemsPerBlockRow = inChannels * filterWidth;\n        var glsl = glsl_version_1.getGlslDifferences();\n        var isChannelsLast = dataFormat === 'channelsLast';\n        var rowDim = isChannelsLast ? 0 : 1;\n        var colDim = isChannelsLast ? 1 : 2;\n        var unrolled = \"\";\n        for (var row = 0; row <= 1; row++) {\n            for (var col = 0; col <= 1; col++) {\n                unrolled += \"\\n          blockIndex = rc.y + \" + col + \";\\n          pos = rc.x + \" + row + \";\\n\\n          if(blockIndex < \" + outputShape[1] + \" && pos < \" + outputShape[0] + \") {\\n            offsetY = int(blockIndex / (\" + outWidth + \")) * \" + strideHeight + \" - \" + top + \";\\n            d0 = offsetY + \" + dilationHeight + \" * (pos / \" + itemsPerBlockRow + \");\\n\\n            if(d0 < \" + inputShape[rowDim] + \" && d0 >= 0) {\\n\\n              offsetX = int(mod(float(blockIndex), \" + outWidth + \".) * \" + strideWidth + \". - \" + left + \".);\\n              d1 = offsetX + \" + dilationWidth + \" * (int(mod(float(pos), \" + itemsPerBlockRow + \".) / \" + inChannels + \".));\\n\\n              if(d1 < \" + inputShape[colDim] + \" && d1 >= 0) {\\n\\n                ch = int(mod(float(pos), \" + inChannels + \".));\\n\\n                if (\" + isChannelsLast + \") {\\n                  innerDims = vec2(d1, ch);\\n                  result[\" + (row * 2 + col) + \"] = getChannel(\\n                    getA(d0, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                } else {\\n                  innerDims = vec2(d0, d1);\\n                  result[\" + (row * 2 + col) + \"] = getChannel(\\n                    getA(ch, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                }\\n              }\\n            }\\n          }\\n        \";\n            }\n        }\n        this.userCode = \"\\n      void main() {\\n        ivec2 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\n        vec2 innerDims;\\n\\n        \" + unrolled + \"\\n\\n        \" + glsl.output + \" = result;\\n      }\\n    \";\n    }\n    return Im2ColPackedProgram;\n}());\nexports.Im2ColPackedProgram = Im2ColPackedProgram;\n//# sourceMappingURL=im2col_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRNProgram = /** @class */ (function () {\n    function LRNProgram(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        var rad = radius;\n        var maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        var powOperator;\n        var basis = \"float(\" + bias + \") + float(\" + alpha + \") * sum\";\n        if (beta === 0.5) {\n            powOperator = \"inversesqrt(\" + basis + \")\";\n        }\n        else if (beta === 1.0) {\n            powOperator = \"1.0/(\" + basis + \")\";\n        }\n        else {\n            powOperator = \"exp(log(\" + basis + \") * float(-\" + beta + \"));\";\n        }\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\" + rad + \"; j <= \" + rad + \"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \" + maxD + \") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \" + powOperator + \";\\n        setOutput(val);\\n      }\\n    \";\n    }\n    return LRNProgram;\n}());\nexports.LRNProgram = LRNProgram;\n//# sourceMappingURL=lrn_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRNGradProgram = /** @class */ (function () {\n    function LRNGradProgram(inputShape, depthRadius, bias, alpha, beta) {\n        this.variableNames = ['inputImage', 'outputImage', 'dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        this.depth = inputShape[3];\n        this.depthRadius = depthRadius;\n        this.bias = bias;\n        this.alpha = alpha;\n        this.beta = beta;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < \" + this.depth + \"; ++d) {\\n          int depthBegin = int(max(0.0, float(d - \" + depthRadius + \")));\\n          int depthEnd = int(min(float(\" + this.depth + \"),\\n              float(d + \" + depthRadius + \" + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = \" + this.depth + \";\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(\" + alpha + \") * norm + float(\" + bias + \");\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(\" + alpha + \")\\n                * float(\" + beta + \")\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * \" + beta + \");\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    \";\n    }\n    return LRNGradProgram;\n}());\nexports.LRNGradProgram = LRNGradProgram;\n//# sourceMappingURL=lrn_grad_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LRNPackedProgram = /** @class */ (function () {\n    function LRNPackedProgram(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        var rad = radius;\n        var maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        var powOperator;\n        var basis = \"float(\" + bias + \") + float(\" + alpha + \") * sum\";\n        if (beta === 0.5) {\n            powOperator = \"inversesqrt(\" + basis + \")\";\n        }\n        else if (beta === 1.0) {\n            powOperator = \"1.0/(\" + basis + \")\";\n        }\n        else {\n            powOperator = \"exp(log(\" + basis + \") * float(-\" + beta + \"));\";\n        }\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < \" + this.outputShape[3] + \";\\n        bool hasNextRow = c < \" + this.outputShape[2] + \";\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - \" + rad + \";\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - \" + rad + \"; j <= \" + rad + \"; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(\" + maxD + \"));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * \" + powOperator + \";\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return LRNPackedProgram;\n}());\nexports.LRNPackedProgram = LRNPackedProgram;\n//# sourceMappingURL=lrn_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MaxPool2DBackpropProgram = /** @class */ (function () {\n    function MaxPool2DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = \"\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n          wR += \" + dilationHeight + \") {\\n          float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n          if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \" + effectiveFilterWidth + \"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n            if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \" + lastIndex + \" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \" + effectiveFilterWidth + \" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool2DBackpropProgram;\n}());\nexports.MaxPool2DBackpropProgram = MaxPool2DBackpropProgram;\nvar MaxPool3DBackpropProgram = /** @class */ (function () {\n    function MaxPool3DBackpropProgram(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var lastIndex = effectiveFilterDepth * effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = \"\\n      const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \" + effectiveFilterDepth + \";\\n           wD += \" + dilationDepth + \") {\\n          float dyD = float(dyDCorner + wD) / \" + strideDepth + \".0;\\n\\n          if (dyD < 0.0 || dyD >= \" + convInfo.outDepth + \".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n              wR += \" + dilationHeight + \") {\\n            float dyR = float(dyRCorner + wR) / \" + strideHeight + \".0;\\n\\n            if (dyR < 0.0 || dyR >= \" + convInfo.outHeight + \".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \" + effectiveFilterWidth + \";\\n                wC += \" + dilationWidth + \") {\\n              float dyC = float(dyCCorner + wC) / \" + strideWidth + \".0;\\n\\n              if (dyC < 0.0 || dyC >= \" + convInfo.outWidth + \".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n              int maxPosValue = \" + lastIndex + \" -\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\n\\n              // Get the current value, check it against the value from the\\n              // position matrix.\\n              int curPosValue =\\n                  wD * \" + effectiveFilterHeight + \" * \" + effectiveFilterWidth + \" +\\n                  wR * \" + effectiveFilterWidth + \" + wC;\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n              dotProd += dyValue * mask;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \";\n    }\n    return MaxPool3DBackpropProgram;\n}());\nexports.MaxPool3DBackpropProgram = MaxPool3DBackpropProgram;\n//# sourceMappingURL=max_pool_backprop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MatMulPackedProgram = /** @class */ (function () {\n    function MatMulPackedProgram(aShape, outputShape, transposeA, transposeB, addBias, activation, hasPreluActivation) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        if (addBias === void 0) { addBias = false; }\n        if (activation === void 0) { activation = null; }\n        if (hasPreluActivation === void 0) { hasPreluActivation = false; }\n        this.variableNames = ['matrixA', 'matrixB'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        var sharedDim = transposeA ? aShape[1] : aShape[2];\n        var sharedDimensionPacked = Math.ceil(sharedDim / 2);\n        var aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n        var bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n        var aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n        var bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n        var activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = \"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \" + activation + \"\\n        }\";\n            }\n            else {\n                activationSnippet = \"vec4 activation(vec4 x) {\\n          \" + activation + \"\\n        }\";\n            }\n            applyActivationSnippet = \"result = activation(result);\";\n        }\n        var addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.userCode = \"\\n      \" + activationSnippet + \"\\n\\n      const float sharedDimension = \" + sharedDimensionPacked + \".0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        for (int i = 0; i < \" + sharedDimensionPacked + \"; i++) {\\n          vec4 a = getMatrixA(rc.x, \" + aSample + \");\\n          vec4 b = getMatrixB(rc.x, \" + bSample + \");\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (\" + aSwizzle[0] + \" * \" + bSwizzle[0] + \");\\n          result += (\" + aSwizzle[1] + \" * \" + bSwizzle[1] + \");\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        \" + addBiasSnippet + \"\\n\\n        \" + applyActivationSnippet + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return MatMulPackedProgram;\n}());\nexports.MatMulPackedProgram = MatMulPackedProgram;\n//# sourceMappingURL=mulmat_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MultinomialProgram = /** @class */ (function () {\n    function MultinomialProgram(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = \"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \" + (numOutcomes - 1) + \"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\" + (numOutcomes - 1) + \"));\\n      }\\n    \";\n    }\n    MultinomialProgram.prototype.getCustomSetupFunc = function (seed) {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.seedLoc == null) {\n                _this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(_this.seedLoc, seed);\n        };\n    };\n    return MultinomialProgram;\n}());\nexports.MultinomialProgram = MultinomialProgram;\n//# sourceMappingURL=multinomial_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OneHotProgram = /** @class */ (function () {\n    function OneHotProgram(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\" + offValue + \"), float(\" + onValue + \"),\\n                      float(index == coords.y)));\\n      }\\n    \";\n    }\n    return OneHotProgram;\n}());\nexports.OneHotProgram = OneHotProgram;\n//# sourceMappingURL=onehot_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar PackProgram = /** @class */ (function () {\n    function PackProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        // Only input / output 3D tensors.\n        this.outputShape = outputShape;\n        var rank = outputShape.length;\n        if (rank === 0) {\n            this.userCode = \"\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      \";\n        }\n        else {\n            var channels = packing_util_1.getChannels('rc', rank);\n            var dtype = shader_compiler_1.getCoordsDataType(rank);\n            var outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n            var setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n            var output = getOutput(outputShape, channels);\n            this.userCode = \"\\n        void main() {\\n          \" + dtype + \" rc = getOutputCoords();\\n\\n          if(\" + outOfBoundsCondition + \") {\\n            setOutput(vec4(0));\\n          } else {\\n            \" + setup + \"\\n\\n            setOutput(vec4(\" + output + \"));\\n          }\\n        }\\n      \";\n        }\n    }\n    return PackProgram;\n}());\nexports.PackProgram = PackProgram;\nfunction getSourceCoordsArr(rank, dims) {\n    var coords = [];\n    for (var row = 0; row <= 1; row++) {\n        for (var col = 0; col <= 1; col++) {\n            var coord = (row === 0 ? 'r' : 'rp1') + \", \" + (col === 0 ? 'c' : 'cp1');\n            for (var d = 2; d < rank; d++) {\n                coord = dims[dims.length - 1 - d] + \",\" + coord;\n            }\n            coords.push(coord);\n        }\n    }\n    return coords;\n}\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n    if (rank === 1) {\n        return \"rc > \" + shape[0];\n    }\n    var cond = '';\n    for (var i = rank - 2; i < rank; i++) {\n        cond += dims[i] + \" >= \" + shape[i];\n        if (i < rank - 1) {\n            cond += '||';\n        }\n    }\n    return cond;\n}\nfunction getSetup(rank, cols, rows, dims) {\n    if (rank === 1) {\n        return '';\n    }\n    var innerDims = dims.slice(-2);\n    return \"\\n    int r = \" + innerDims[0] + \";\\n    int c = \" + innerDims[1] + \";\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= \" + cols + \";\\n    bool rEdge = rp1 >= \" + rows + \";\\n  \";\n}\nfunction getOutput(shape, dims) {\n    var rank = shape.length;\n    var sourceCoords = getSourceCoordsArr(rank, dims);\n    if (rank === 1) {\n        return \"getA(rc),\\n            rc + 1 >= \" + shape[0] + \" ? 0. : getA(rc + 1),\\n            0, 0\";\n    }\n    return \"getA(\" + sourceCoords[0] + \"),\\n          cEdge ? 0. : getA(\" + sourceCoords[1] + \"),\\n          rEdge ? 0. : getA(\" + sourceCoords[2] + \"),\\n          rEdge || cEdge ? 0. : getA(\" + sourceCoords[3] + \")\";\n}\n//# sourceMappingURL=pack_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar PadProgram = /** @class */ (function () {\n    function PadProgram(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map(function (p, i) { return p[0] /* beforePad */ + xShape[i] + p[1]; } /* afterPad */);\n        var rank = xShape.length;\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        var start = paddings.map(function (p) { return p[0]; }).join(',');\n        var end = paddings.map(function (p, i) { return p[0] + xShape[i]; }).join(',');\n        var unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        if (rank === 1) {\n            this.userCode = \"\\n        int start = \" + start + \";\\n        int end = \" + end + \";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(\" + constantValue + \"));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \";\n            return;\n        }\n        this.userCode = \"\\n      \" + type + \" start = \" + type + \"(\" + start + \");\\n      \" + type + \" end = \" + type + \"(\" + end + \");\\n\\n      void main() {\\n        \" + type + \" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(\" + constantValue + \"));\\n        } else {\\n          \" + type + \" coords = outC - start;\\n          setOutput(getX(\" + unpackedCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return PadProgram;\n}());\nexports.PadProgram = PadProgram;\n//# sourceMappingURL=pad_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar PadPackedProgram = /** @class */ (function () {\n    function PadPackedProgram(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map(function (p, i) { return p[0] /* beforePad */ + xShape[i] + p[1]; } /* afterPad */);\n        var rank = xShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        var start = paddings.map(function (p) { return p[0]; }).join(',');\n        var end = paddings.map(function (p, i) { return p[0] + xShape[i]; }).join(',');\n        var coords = packing_util_1.getChannels('rc', rank);\n        var source = packing_util_1.getChannels('source', rank);\n        var cLimit = coords[rank - 1] + \" < \" + this.outputShape[rank - 1];\n        var innerDims = rank === 1 ? 'source' : \"vec2(\" + source.slice(-2).join() + \")\";\n        var componentSetup = [\n            dtype + \" rc = outputLoc;\", coords[rank - 1] + \" += 1;\\n       if(\" + cLimit + \") {\\n      \",\n            rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \" + coords[rank - 2] + \" += 1;\\n       if(\" + coords[rank - 2] + \" < \" + this.outputShape[rank - 2] + \") {\",\n            rank === 1 ? '' : \"  \" + coords[rank - 1] + \" += 1;\\n         if(\" + cLimit + \") {\"\n        ];\n        var paddingArea = rank === 1 ?\n            'rc < start || rc >= end' :\n            'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n        var mainLoop = '';\n        for (var i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n            mainLoop += \"\\n        \" + componentSetup[i] + \"\\n        if (\" + paddingArea + \") {\\n          result[\" + i + \"] = float(\" + constantValue + \");\\n        } else {\\n          \" + dtype + \" source = rc - start;\\n          result[\" + i + \"] = getChannel(getX(\" + source.join() + \"), \" + innerDims + \");\\n        }\\n      \";\n        }\n        mainLoop += (rank === 1 ? \"} \" : \"}}\");\n        this.userCode = \"\\n      const \" + dtype + \" start = \" + dtype + \"(\" + start + \");\\n      const \" + dtype + \" end = \" + dtype + \"(\" + end + \");\\n\\n      void main() {\\n        \" + dtype + \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \" + mainLoop + \"\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return PadPackedProgram;\n}());\nexports.PadPackedProgram = PadPackedProgram;\n//# sourceMappingURL=pad_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pool2DProgram = /** @class */ (function () {\n    function Pool2DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterWidth = convInfo.filterWidth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            var compareOp_1 = '>=';\n            this.userCode = \"\\n        const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n        const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n              wR += \" + dilationHeight + \") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + effectiveFilterWidth + \";\\n                wC += \" + dilationWidth + \") {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value \" + compareOp_1 + \" currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \" + effectiveFilterWidth + \" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / count\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec2 strides = ivec2(\" + strideHeight + \", \" + strideWidth + \");\\n      const ivec2 pads = ivec2(\" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n            wR += \" + dilationHeight + \") {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n            int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + dilationWidth + \", d),\\n              getValue(batch, xR, xC + 2 * \" + dilationWidth + \", d),\\n              getValue(batch, xR, xC + 3 * \" + dilationWidth + \", d)\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n\\n          int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n          if (\" + (filterWidthVec4Remainder === 1) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + dilationWidth + \", d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \" + dilationWidth + \", d),\\n              getValue(batch, xR, xC + 2 * \" + dilationWidth + \", d),\\n              initializationValue\\n            );\\n\\n            \" + updateSnippet + \"\\n          }\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return Pool2DProgram;\n}());\nexports.Pool2DProgram = Pool2DProgram;\nvar Pool3DProgram = /** @class */ (function () {\n    function Pool3DProgram(convInfo, poolType, computePositions) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        var filterWidth = convInfo.filterWidth;\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = convInfo.padInfo.front;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        var isAvgPool = poolType === 'avg';\n        var initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            var compareOp_2 = '>=';\n            this.userCode = \"\\n        const ivec3 strides =\\n            ivec3(\" + strideDepth + \", \" + strideHeight + \", \" + strideWidth + \");\\n        const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < \" + effectiveFilterDepth + \";\\n              wD += \" + dilationDepth + \") {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= \" + convInfo.inDepth + \") {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n                wR += \" + dilationHeight + \") {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < \" + effectiveFilterWidth + \";\\n                  wC += \" + dilationWidth + \") {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value \" + compareOp_2 + \" currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition =\\n                      wD * \" + effectiveFilterHeight + \" * \" + effectiveFilterWidth + \" +\\n                      wR * \" + effectiveFilterWidth + \" + wC;;\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";\n            return;\n        }\n        var compareOp = 'max';\n        var returnValue = poolType + \"(\" + poolType + \"(\" + poolType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = \"avgValue / count\";\n        }\n        var filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        var filterWidthVec4Remainder = filterWidth % 4;\n        var updateSnippet = \"\\n      if (\" + isAvgPool + \") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        this.userCode = \"\\n      const ivec3 strides =\\n        ivec3(\" + strideDepth + \", \" + strideHeight + \", \" + strideWidth + \");\\n      const ivec3 pads = ivec3(\" + padFront + \", \" + padTop + \", \" + padLeft + \");\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= \" + convInfo.inWidth + \") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < \" + effectiveFilterDepth + \";\\n            wD += \" + dilationDepth + \") {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= \" + convInfo.inDepth + \") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \" + effectiveFilterHeight + \";\\n            wR += \" + dilationHeight + \") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \" + convInfo.inHeight + \") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \" + filterWidthNearestVec4 + \"; wC += 4) {\\n              int xC = xCCorner + wC * \" + dilationWidth + \";\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \" + dilationWidth + \", ch),\\n                getValue(batch, xD, xR, xC + 2 * \" + dilationWidth + \", ch),\\n                getValue(batch, xD, xR, xC + 3 * \" + dilationWidth + \", ch)\\n              );\\n\\n              \" + updateSnippet + \"\\n            }\\n\\n            int xC = xCCorner + \" + filterWidthNearestVec4 + \";\\n            if (\" + (filterWidthVec4Remainder === 1) + \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \" + updateSnippet + \"\\n            } else if (\" + (filterWidthVec4Remainder === 2) + \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \" + dilationWidth + \", ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \" + updateSnippet + \"\\n            } else if (\" + (filterWidthVec4Remainder === 3) + \") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \" + dilationWidth + \", ch),\\n                getValue(batch, xD, xR, xC + 2 * \" + dilationWidth + \", ch),\\n                initializationValue\\n              );\\n\\n              \" + updateSnippet + \"\\n            }\\n          }\\n          setOutput(\" + returnValue + \");\\n        }\\n      }\\n    \";\n    }\n    return Pool3DProgram;\n}());\nexports.Pool3DProgram = Pool3DProgram;\n//# sourceMappingURL=pool_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReduceProgram = /** @class */ (function () {\n    function ReduceProgram(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        var windowSize = reduceInfo.windowSize;\n        var batchSize = reduceInfo.batchSize;\n        var inSize = reduceInfo.inSize;\n        var outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var initializationValue = '0.0';\n        var compareOp = \"\";\n        if (reduceType === 'prod') {\n            initializationValue = '1.0';\n        }\n        else if (reduceType === 'min') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '1.0 / 1e-20';\n            compareOp = \"min\";\n        }\n        else if (reduceType === 'max') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n            compareOp = \"max\";\n        }\n        var returnValue = reduceType + \"(\" + reduceType + \"(\" + reduceType + \"(\" +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = \"sumValue\";\n        }\n        else if (reduceType === 'prod') {\n            returnValue = \"prodValue\";\n        }\n        else if (reduceType === 'all') {\n            returnValue = \"allValue\";\n        }\n        else if (reduceType === 'any') {\n            returnValue = \"anyValue\";\n        }\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n      if (\" + (reduceType === 'sum') + \") {\\n        sumValue += dot(values, ones);\\n      } else if (\" + (reduceType === 'prod') + \") {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = \" + compareOp + \"(values, minMaxValue);\\n      }\\n    \";\n        var vecType = \"vec4\";\n        if (reduceType === 'all') {\n            initializationValue = '1.0';\n            updateSnippet = \"\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      \";\n            vecType = \"bvec4\";\n        }\n        else if (reduceType === 'any') {\n            initializationValue = '0.0';\n            updateSnippet = \"\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      \";\n            vecType = \"bvec4\";\n        }\n        var checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \" + windowSize + \";\\n\\n        vec4 minMaxValue = vec4(\" + initializationValue + \");\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          \" + vecType + \" values = \" + vecType + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          \" + vecType + \" values = \" + vecType + \"(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          \" + vecType + \" values = \" + vecType + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          \" + vecType + \" values = \" + vecType + \"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return ReduceProgram;\n}());\nexports.ReduceProgram = ReduceProgram;\n//# sourceMappingURL=reduce_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_util = require(\"./shader_compiler_util\");\nvar ReshapePackedProgram = /** @class */ (function () {\n    function ReshapePackedProgram(outputShape, inputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        var mainLoop = \"\";\n        for (var i = 0; i < 4; i++) {\n            var thisRC = \"thisRC = rc;\";\n            if (i % 2 === 1) {\n                thisRC += \"thisRC.z += 1;\";\n            }\n            if (i > 1) {\n                thisRC += \"thisRC.y += 1;\";\n            }\n            mainLoop += \"\\n        \" + thisRC + \"\\n        \" + (i > 0 ? \"if(thisRC.y < rows && thisRC.z < cols){\" : '') + \"\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[\" + i + \"] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        \" + (i > 0 ? '}' : '') + \"\\n      \";\n        }\n        this.userCode = \"\\n      \" + getReshapedInputCoords(inputShape) + \"\\n      \" + shader_util.getFlatIndexFrom3D(outputShape) + \"\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = \" + outputShape[1] + \";\\n        int cols = \" + outputShape[2] + \";\\n\\n        \" + mainLoop + \"\\n\\n        setOutput(result);\\n      }\\n    \";\n    }\n    return ReshapePackedProgram;\n}());\nexports.ReshapePackedProgram = ReshapePackedProgram;\nfunction getReshapedInputCoords(shape) {\n    var coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return \"\\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      \" + coordsFromIndexSnippet + \"\\n      return ivec3(r, c, d);\\n    }\\n  \";\n}\n//# sourceMappingURL=reshape_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinearBackpropProgram = /** @class */ (function () {\n    function ResizeBilinearBackpropProgram(dy, x, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = x.shape;\n        var _a = x.shape, xHeight = _a[1], xWidth = _a[2];\n        var _b = dy.shape, yHeight = _b[1], yWidth = _b[2];\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        var effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        var effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        var heightScale = effectiveXSize[0] / effectiveYSize[0];\n        var widthScale = effectiveXSize[1] / effectiveYSize[1];\n        var invHeightScale = 1 / heightScale;\n        var invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        var winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        var winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\" + heightScale + \");\\n        const float widthScale = float(\" + widthScale + \");\\n\\n        const float invHeightScale = float(\" + invHeightScale + \");\\n        const float invWidthScale = float(\" + invWidthScale + \");\\n\\n        const int winHeight = int(\" + winHeight + \");\\n        const int winWidth = int(\" + winWidth + \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \" + yHeight + \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \" + yWidth + \") {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), \" + (xHeight - 1) + \".0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), \" + (xWidth - 1) + \".0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \";\n    }\n    return ResizeBilinearBackpropProgram;\n}());\nexports.ResizeBilinearBackpropProgram = ResizeBilinearBackpropProgram;\n//# sourceMappingURL=resize_bilinear_backprop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinearProgram = /** @class */ (function () {\n    function ResizeBilinearProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        var effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinearProgram;\n}());\nexports.ResizeBilinearProgram = ResizeBilinearProgram;\n//# sourceMappingURL=resize_bilinear_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeBilinearPackedProgram = /** @class */ (function () {\n    function ResizeBilinearPackedProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        var effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        this.userCode = \"\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec3 inputShapeRC = vec3(\" + oldHeight + \".0, \" + oldWidth + \".0,\\n                                     \" + oldWidth + \".0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < \" + (depth - 1) + \";\\n        bool hasNextRow = coords.z < \" + (newWidth - 1) + \";\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeBilinearPackedProgram;\n}());\nexports.ResizeBilinearPackedProgram = ResizeBilinearPackedProgram;\n//# sourceMappingURL=resize_bilinear_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeNearestNeigborBackpropProgram = /** @class */ (function () {\n    function ResizeNearestNeigborBackpropProgram(dy, x, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = x.shape;\n        var _a = x.shape, xHeight = _a[1], xWidth = _a[2];\n        var _b = dy.shape, yHeight = _b[1], yWidth = _b[2];\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        var effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        var effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        var heightScale = effectiveXSize[0] / effectiveYSize[0];\n        var widthScale = effectiveXSize[1] / effectiveYSize[1];\n        var invHeightScale = 1 / heightScale;\n        var invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        var winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        var winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = \"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\" + heightScale + \");\\n        const float widthScale = float(\" + widthScale + \");\\n\\n        const float invHeightScale = float(\" + invHeightScale + \");\\n        const float invWidthScale = float(\" + invWidthScale + \");\\n\\n        const int winHeight = int(\" + winHeight + \");\\n        const int winWidth = int(\" + winWidth + \");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \" + yHeight + \") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \" + yWidth + \") {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(\" + effectiveXSize[0] + \") *\\n                (float(dyR) / float(\" + effectiveYSize[0] + \"));\\n\\n            float sourceFracCol =\\n                float(\" + effectiveXSize[1] + \") *\\n                  (float(dyC) / float(\" + effectiveYSize[1] + \"));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(\" + xHeight + \") - 1),\\n                \" + alignCorners + \" ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(\" + xWidth + \") - 1),\\n                \" + alignCorners + \" ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \";\n    }\n    return ResizeNearestNeigborBackpropProgram;\n}());\nexports.ResizeNearestNeigborBackpropProgram = ResizeNearestNeigborBackpropProgram;\n//# sourceMappingURL=resize_nearest_neighbor_backprop_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeNearestNeighborProgram = /** @class */ (function () {\n    function ResizeNearestNeighborProgram(inputShape, newHeight, newWidth, alignCorners) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        var batch = inputShape[0], oldHeight = inputShape[1], oldWidth = inputShape[2], depth = inputShape[3];\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        var effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        var effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        // When align corners is false, we rounds the value with floor.\n        var roundBase = alignCorners ? '0.5' : '0.0';\n        this.userCode = \"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \" + effectiveInSize[0] / effectiveOutSize[0] + \",\\n          \" + effectiveInSize[1] / effectiveOutSize[1] + \");\\n      const vec2 inputShapeRC = vec2(\" + oldHeight + \".0, \" + oldWidth + \".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + \" + roundBase + \")));\\n\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \";\n    }\n    return ResizeNearestNeighborProgram;\n}());\nexports.ResizeNearestNeighborProgram = ResizeNearestNeighborProgram;\n//# sourceMappingURL=resize_nearest_neighbor_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ReverseProgram = /** @class */ (function () {\n    function ReverseProgram(xShape, axis) {\n        this.variableNames = ['x'];\n        var rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(\"WebGL backend: Reverse of rank-\" + rank + \" tensor is not yet supported\");\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\" + xShape[0] + \" - coord - 1));\\n        }\\n      \";\n            return;\n        }\n        var getInCoord = function (i) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return xShape[i] + \" - coords[\" + i + \"] - 1\";\n            }\n            return \"coords[\" + i + \"]\";\n        };\n        var inCoords = xShape.map(function (_, i) { return getInCoord(i); }).join(',');\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + type + \" coords = getOutputCoords();\\n        setOutput(getX(\" + inCoords + \"));\\n      }\\n    \";\n    }\n    return ReverseProgram;\n}());\nexports.ReverseProgram = ReverseProgram;\n//# sourceMappingURL=reverse_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ReversePackedProgram = /** @class */ (function () {\n    function ReversePackedProgram(xShape, axis) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        var rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(\"WebGL backend: Reverse of rank-\" + rank + \" tensor is not yet supported\");\n        }\n        this.outputShape = xShape;\n        var channels = packing_util_1.getChannels('rc', rank);\n        var nextColumn = channels[rank - 1] + \" + 1 < \" + this.outputShape[rank - 1];\n        var nextRow = channels[rank - 2] + \" + 1 < \" + this.outputShape[rank - 2];\n        var type = shader_compiler_1.getCoordsDataType(rank);\n        if (rank === 1) {\n            this.userCode = \"\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(\" + xShape[0] + \" - rc - 1),\\n            \" + xShape[0] + \" - rc - 1);\\n          if(\" + nextColumn + \"){\\n              result.g = getChannel(getX(\" + xShape[0] + \" - (rc  + 1) - 1),\\n                \" + xShape[0] + \" - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      \";\n        }\n        else {\n            this.userCode = \"\\n        void main() {\\n          \" + type + \" rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = \" + getR(channels.slice()) + \";\\n          if(\" + nextColumn + \"){\\n            result.g = \" + getG(channels.slice()) + \";\\n          }\\n          if(\" + nextRow + \") {\\n            result.b = \" + getB(channels.slice()) + \";\\n            if(\" + nextColumn + \") {\\n              result.a = \" + getA(channels.slice()) + \";\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    \";\n        }\n        function getR(channels) {\n            return getChannel(channels);\n        }\n        function getG(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + \" + 1)\";\n            return getChannel(channels);\n        }\n        function getB(channels) {\n            channels[rank - 2] = '(' + channels[rank - 2] + \" + 1)\";\n            return getChannel(channels);\n        }\n        function getA(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + \" + 1)\";\n            channels[rank - 2] = '(' + channels[rank - 2] + \" + 1)\";\n            return getChannel(channels);\n        }\n        function getChannel(channels) {\n            var inCoordsArray = xShape.map(function (_, i) { return getInCoord(i, channels); });\n            var inCoords = inCoordsArray.join(',');\n            var innerDims = inCoordsArray.slice(-2).join(',');\n            return \"getChannel(getX(\" + inCoords + \"), vec2(\" + innerDims + \"))\";\n        }\n        function getInCoord(i, channels1) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return xShape[i] + \" - \" + channels1[i] + \" - 1\";\n            }\n            else {\n                return \"\" + channels1[i];\n            }\n        }\n    }\n    return ReversePackedProgram;\n}());\nexports.ReversePackedProgram = ReversePackedProgram;\n//# sourceMappingURL=reverse_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar ScatterProgram = /** @class */ (function () {\n    function ScatterProgram(updateSize, sliceDim, indicesRank, updatesRank, strides, shape, summingDupeIndex) {\n        if (summingDupeIndex === void 0) { summingDupeIndex = true; }\n        this.variableNames = ['updates', 'indices', 'defaultValue'];\n        this.outputShape = shape;\n        var stridesType = shader_compiler_1.getCoordsDataType(strides.length);\n        var dtype = shader_compiler_1.getCoordsDataType(shape.length);\n        var indicesString = '';\n        if (indicesRank === 1) {\n            indicesString = 'i';\n        }\n        else if (indicesRank === 2) {\n            indicesString = 'i, j';\n        }\n        var indicesSnippet = \"getIndices(\" + indicesString + \")\";\n        var updatesString = '';\n        if (updatesRank === 1) {\n            updatesString = 'i';\n        }\n        else if (updatesRank === 2) {\n            updatesString = 'i, coords[1]';\n        }\n        var updatesSnippet = \"getUpdates(\" + updatesString + \")\";\n        var strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = \"\\n        \" + stridesType + \" strides = \" + stridesType + \"(\" + strides + \");\\n\\n        void main() {\\n          \" + dtype + \" coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < \" + updateSize + \"; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < \" + sliceDim + \"; j++) {\\n              int index = round(\" + indicesSnippet + \");\\n              flattenedIndex += index * \" + strideString + \";\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += \" + updatesSnippet + \";\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      \";\n    }\n    return ScatterProgram;\n}());\nexports.ScatterProgram = ScatterProgram;\n//# sourceMappingURL=scatter_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SegmentOpProgram = /** @class */ (function () {\n    function SegmentOpProgram(segOpInfo, segOpType) {\n        this.variableNames = ['x', 'segmentIds'];\n        var windowSize = segOpInfo.windowSize;\n        var batchSize = segOpInfo.batchSize;\n        var inSize = segOpInfo.inSize;\n        var numSegments = segOpInfo.numSegments;\n        var outSize = numSegments * Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        var initializationValue = '0.0';\n        var returnValue = \"sumValue\";\n        var windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        var windowSizeVec4Remainder = windowSize % 4;\n        var updateSnippet = \"\\n        sumValue += dot(values, segFilter);\\n    \";\n        var checkValueOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkValueOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return initializationValue;\\n        }\\n      \";\n        }\n        var checkSegmentIdOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkSegmentIdOutOfBounds = \"\\n        if (inIdx < 0 || inIdx >= \" + inSize + \") {\\n          return -1.0;\\n        }\\n      \";\n        }\n        this.userCode = \"\\n      const float initializationValue = \" + initializationValue + \";\\n\\n      float getValue(int batch, int inIdx) {\\n        \" + checkValueOutOfBounds + \"\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        \" + checkSegmentIdOutOfBounds + \"\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          \" + numSegments + \")) * float(\" + windowSize + \"));\\n        int currentSeg = int(mod(float(outIdx), float(\" + numSegments + \")));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \" + windowSizeNearestVec4 + \"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n\\n        int inIdx = inOffset + \" + windowSizeNearestVec4 + \";\\n        if (\" + (windowSizeVec4Remainder === 1) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 2) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          \" + updateSnippet + \"\\n        } else if (\" + (windowSizeVec4Remainder === 3) + \") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          \" + updateSnippet + \"\\n        }\\n        setOutput(\" + returnValue + \");\\n      }\\n    \";\n    }\n    return SegmentOpProgram;\n}());\nexports.SegmentOpProgram = SegmentOpProgram;\n//# sourceMappingURL=segment_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar SelectProgram = /** @class */ (function () {\n    function SelectProgram(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.outputShape = shape;\n        var cCoords;\n        var abCoords;\n        if (rank > 4) {\n            throw Error(\"Where for rank \" + rank + \" is not yet supported\");\n        }\n        if (rank === 1) {\n            abCoords = \"resRC\";\n            cCoords = \"resRC\";\n        }\n        else {\n            var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            var cCoordVars = [];\n            var abCoordVars = [];\n            for (var i = 0; i < shape.length; i++) {\n                abCoordVars.push(\"\" + currentCoords[i]);\n                if (i < cRank) {\n                    cCoordVars.push(\"\" + currentCoords[i]);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        float cVal = getC(\" + cCoords + \");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\" + abCoords + \"));\\n        } else {\\n          setOutput(getB(\" + abCoords + \"));\\n        }\\n      }\\n    \";\n    }\n    return SelectProgram;\n}());\nexports.SelectProgram = SelectProgram;\n//# sourceMappingURL=select_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar SliceProgram = /** @class */ (function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var uniformPart = \"uniform int start[\" + this.rank + \"];\";\n        var sourceCoords = getCoords(this.rank);\n        var body;\n        var coordSum = destSize.map(function (_, i) {\n            return \"sourceLoc.\" + coords[i] + \" = start[\" + i + \"] + coords.\" + coords[i] + \";\";\n        });\n        body = \"\\n        \" + dtype + \" sourceLoc;\\n        \" + dtype + \" coords = getOutputCoords();\\n        \" + coordSum.join('\\n') + \"\\n      \";\n        this.userCode = \"\\n      \" + uniformPart + \"\\n      void main() {\\n        \" + body + \"\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(_this.startLoc, start);\n        };\n    };\n    return SliceProgram;\n}());\nexports.SliceProgram = SliceProgram;\nvar coords = ['x', 'y', 'z', 'w', 'u', 'v'];\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank <= 6) {\n        return coords.slice(0, rank).map(function (x) { return 'sourceLoc.' + x; }).join(',');\n    }\n    else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n//# sourceMappingURL=slice_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar SlicePackedProgram = /** @class */ (function () {\n    function SlicePackedProgram(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var coords = packing_util_1.getChannels('coords', this.rank);\n        var sourceLoc = packing_util_1.getChannels('sourceLoc', this.rank);\n        var innerDims = this.rank === 1 ? 'sourceLoc' : \"vec2(\" + sourceLoc.slice(-2).join() + \")\";\n        var getChannel = \"getChannel(getSource(\" + sourceLoc.join() + \"), \" + innerDims + \")\";\n        var upperRow = \"\\n      result.x = \" + getChannel + \";\\n      if (++\" + coords[this.rank - 1] + \" < \" + destSize[this.rank - 1] + \") {\\n        ++\" + sourceLoc[this.rank - 1] + \";\\n        result.y = \" + getChannel + \";\\n        --\" + sourceLoc[this.rank - 1] + \";\\n      }\\n    \";\n        var lowerRow = this.rank === 1 ? '' : \"\\n      --\" + coords[this.rank - 1] + \";\\n      if (++\" + coords[this.rank - 2] + \" < \" + destSize[this.rank - 2] + \") {\\n        ++\" + sourceLoc[this.rank - 2] + \";\\n        result.z = \" + getChannel + \";\\n        if (++\" + coords[this.rank - 1] + \" < \" + destSize[this.rank - 1] + \") {\\n          ++\" + sourceLoc[this.rank - 1] + \";\\n          result.w = \" + getChannel + \";\\n        }\\n      }\\n    \";\n        var sourceLocSetup = this.rank <= 4 ?\n            \"sourceLoc = coords +\\n            \" + dtype + \"(\" + destSize.map(function (_, i) { return \"start[\" + i + \"]\"; }).join() + \");\" :\n            destSize.map(function (_, i) { return sourceLoc[i] + \" = \" + coords[i] + \" + start[\" + i + \"];\"; })\n                .join('\\n');\n        this.userCode = \"\\n      uniform int start[\" + this.rank + \"];\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        \" + dtype + \" sourceLoc;\\n        \" + sourceLocSetup + \"\\n        vec4 result = vec4(0.);\\n        \" + upperRow + \"\\n        \" + lowerRow + \"\\n        setOutput(result);\\n      }\\n    \";\n    }\n    SlicePackedProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" +\n                (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(_this.startLoc, start);\n        };\n    };\n    return SlicePackedProgram;\n}());\nexports.SlicePackedProgram = SlicePackedProgram;\n//# sourceMappingURL=slice_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar StridedSliceProgram = /** @class */ (function () {\n    function StridedSliceProgram(begin, strides, size) {\n        this.variableNames = ['x'];\n        this.outputShape = size;\n        var rank = size.length;\n        var inputDtype = shader_compiler_1.getCoordsDataType(size.length);\n        var dtype = shader_compiler_1.getCoordsDataType(size.length);\n        var newCoords = '';\n        if (rank === 1) {\n            newCoords = 'coords * strides + begin';\n        }\n        else {\n            var outputAxis_1 = 0;\n            newCoords =\n                size.map(function (_, i) {\n                    outputAxis_1++;\n                    return size.length === 1 ?\n                        \"coords * strides[\" + i + \"] + begin[\" + i + \"]\" :\n                        \"coords[\" + (outputAxis_1 - 1) + \"] * strides[\" + i + \"] + begin[\" + i + \"]\";\n                })\n                    .join(',');\n        }\n        this.userCode = \"\\n      \" + inputDtype + \" begin = \" + inputDtype + \"(\" + begin + \");\\n      \" + inputDtype + \" strides = \" + inputDtype + \"(\" + strides + \");\\n\\n      void main() {\\n        \" + dtype + \" coords = getOutputCoords();\\n        setOutput(getX(\" + newCoords + \"));\\n      }\\n    \";\n    }\n    return StridedSliceProgram;\n}());\nexports.StridedSliceProgram = StridedSliceProgram;\n//# sourceMappingURL=strided_slice_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar tex_util_1 = require(\"./tex_util\");\nvar TextureManager = /** @class */ (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.usedTextures = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC, usage, isPacked) {\n        var physicalTexType = getPhysicalFromLogicalTextureType(usage, isPacked);\n        var shapeKey = getKeyFromTextureShape(shapeRC, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextures)) {\n            this.usedTextures[shapeKey] = [];\n        }\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            var newTexture_1 = this.freeTextures[shapeKey].shift();\n            this.usedTextures[shapeKey].push(newTexture_1);\n            return newTexture_1;\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture;\n        if (physicalTexType === tex_util_1.PhysicalTextureType.PACKED_2X2_FLOAT32) {\n            newTexture = this.gpgpu.createPackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === tex_util_1.PhysicalTextureType.PACKED_2X2_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16PackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === tex_util_1.PhysicalTextureType.UNPACKED_FLOAT32) {\n            newTexture =\n                this.gpgpu.createFloat32MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === tex_util_1.PhysicalTextureType.UNPACKED_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === tex_util_1.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE) {\n            newTexture =\n                this.gpgpu.createUnsignedBytesMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        this.usedTextures[shapeKey].push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape, logicalTexType, isPacked) {\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        var physicalTexType = getPhysicalFromLogicalTextureType(logicalTexType, isPacked);\n        var shapeKey = getKeyFromTextureShape(shape, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        var texList = this.usedTextures[shapeKey];\n        var texIndex = texList.indexOf(texture);\n        if (texIndex < 0) {\n            throw new Error('Cannot release a texture that was never provided by this ' +\n                'texture manager');\n        }\n        texList.splice(texIndex, 1);\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        for (var texShape in this.freeTextures) {\n            this.freeTextures[texShape].forEach(function (tex) {\n                _this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        for (var texShape in this.usedTextures) {\n            this.usedTextures[texShape].forEach(function (tex) {\n                _this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        this.freeTextures = null;\n        this.usedTextures = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getPhysicalTextureForRendering(isPacked) {\n    if (environment_1.env().getBool('WEBGL_RENDER_FLOAT32_ENABLED')) {\n        if (isPacked) {\n            return tex_util_1.PhysicalTextureType.PACKED_2X2_FLOAT32;\n        }\n        return tex_util_1.PhysicalTextureType.UNPACKED_FLOAT32;\n    }\n    if (isPacked) {\n        return tex_util_1.PhysicalTextureType.PACKED_2X2_FLOAT16;\n    }\n    return tex_util_1.PhysicalTextureType.UNPACKED_FLOAT16;\n}\nfunction getPhysicalFromLogicalTextureType(logicalTexType, isPacked) {\n    if (logicalTexType === tex_util_1.TextureUsage.UPLOAD) {\n        return tex_util_1.PhysicalTextureType.PACKED_2X2_FLOAT32;\n    }\n    else if (logicalTexType === tex_util_1.TextureUsage.RENDER || logicalTexType == null) {\n        return getPhysicalTextureForRendering(isPacked);\n    }\n    else if (logicalTexType === tex_util_1.TextureUsage.DOWNLOAD ||\n        logicalTexType === tex_util_1.TextureUsage.PIXELS) {\n        return tex_util_1.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;\n    }\n    throw new Error(\"Unknown logical texture type \" + logicalTexType);\n}\nfunction getKeyFromTextureShape(shapeRowsCol, physicalTexType, isPacked) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1] + \"_\" + physicalTexType + \"_\" + isPacked;\n}\n//# sourceMappingURL=texture_manager.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TileProgram = /** @class */ (function () {\n    function TileProgram(aShape, reps) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var sourceCoords = getSourceCoords(aShape);\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" resRC = getOutputCoords();\\n        setOutput(getA(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    return TileProgram;\n}());\nexports.TileProgram = TileProgram;\nfunction getSourceCoords(aShape) {\n    var rank = aShape.length;\n    if (rank > 5) {\n        throw Error(\"Tile for rank \" + rank + \" is not yet supported\");\n    }\n    if (rank === 1) {\n        return \"imod(resRC, \" + aShape[0] + \")\";\n    }\n    var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u'];\n    var sourceCoords = [];\n    for (var i = 0; i < aShape.length; i++) {\n        sourceCoords.push(\"imod(\" + currentCoords[i] + \", \" + aShape[i] + \")\");\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=tile_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TransposeProgram = /** @class */ (function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}());\nexports.TransposeProgram = TransposeProgram;\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 6) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n//# sourceMappingURL=transpose_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar TransposePackedProgram = /** @class */ (function () {\n    function TransposePackedProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        if (this.rank > 6) {\n            throw Error(\"Packed transpose for rank \" + this.rank + \" is not yet supported.\");\n        }\n        var dtype = shader_compiler_1.getCoordsDataType(this.rank);\n        var outputOrder = packing_util_1.getVecChannels('rc', this.rank);\n        var switchedOrder = new Array(this.rank);\n        for (var i = 0; i < newDim.length; i++) {\n            switchedOrder[newDim[i]] = outputOrder[i];\n        }\n        var innerDims = \"vec2(\" + switchedOrder.slice(-2).join() + \")\";\n        var nextColumn = \"++\" + outputOrder[this.rank - 1] + \" < \" + outputShape[this.rank - 1];\n        var getc = \"getChannel(getA(\" + switchedOrder.join() + \"), \" + innerDims + \")\";\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \" + getc + \";\\n      if(\" + nextColumn + \") {\\n        result[1] = \" + getc + \";\\n      }\\n      --\" + outputOrder[this.rank - 1] + \";\\n      if(++\" + outputOrder[this.rank - 2] + \" < \" + outputShape[this.rank - 2] + \") {\\n        result[2] = \" + getc + \";\\n        if(\" + nextColumn + \") {\\n          result[3] = \" + getc + \";\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    \";\n    }\n    return TransposePackedProgram;\n}());\nexports.TransposePackedProgram = TransposePackedProgram;\n//# sourceMappingURL=transpose_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar packing_util_1 = require(\"../packing_util\");\nvar shader_compiler_1 = require(\"./shader_compiler\");\nvar UnpackProgram = /** @class */ (function () {\n    function UnpackProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outputShape = outputShape;\n        var rank = outputShape.length;\n        var channels = packing_util_1.getChannels('rc', rank);\n        var dtype = shader_compiler_1.getCoordsDataType(rank);\n        var sourceCoords = packing_util_1.getSourceCoords(rank, channels);\n        var innerDims = channels.slice(-2);\n        var coords = rank <= 1 ? 'rc' : \"vec2(\" + innerDims.join(',') + \")\";\n        this.userCode = \"\\n      void main() {\\n        \" + dtype + \" rc = getOutputCoords();\\n        vec4 packedInput = getA(\" + sourceCoords + \");\\n\\n        setOutput(getChannel(packedInput, \" + coords + \"));\\n      }\\n    \";\n    }\n    return UnpackProgram;\n}());\nexports.UnpackProgram = UnpackProgram;\n//# sourceMappingURL=unpack_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar seedrandom = require(\"seedrandom\");\nvar engine_1 = require(\"../../engine\");\nvar environment_1 = require(\"../../environment\");\nvar log_1 = require(\"../../log\");\nvar array_ops_util = require(\"../../ops/array_ops_util\");\nvar axis_util = require(\"../../ops/axis_util\");\nvar broadcast_util = require(\"../../ops/broadcast_util\");\nvar complex_ops_1 = require(\"../../ops/complex_ops\");\nvar concat_util = require(\"../../ops/concat_util\");\nvar erf_util = require(\"../../ops/erf_util\");\nvar gather_nd_util = require(\"../../ops/gather_nd_util\");\nvar ops = require(\"../../ops/ops\");\nvar ops_1 = require(\"../../ops/ops\");\nvar scatter_nd_util = require(\"../../ops/scatter_nd_util\");\nvar selu_util = require(\"../../ops/selu_util\");\nvar slice_util_1 = require(\"../../ops/slice_util\");\nvar tensor_1 = require(\"../../tensor\");\nvar types_1 = require(\"../../types\");\nvar util = require(\"../../util\");\nvar util_1 = require(\"../../util\");\nvar backend_1 = require(\"../backend\");\nvar backend_util = require(\"../backend_util\");\nvar complex_util = require(\"../complex_util\");\nvar non_max_suppression_impl_1 = require(\"../non_max_suppression_impl\");\nvar split_shared_1 = require(\"../split_shared\");\nvar tile_impl_1 = require(\"../tile_impl\");\nvar topk_impl_1 = require(\"../topk_impl\");\nvar where_impl_1 = require(\"../where_impl\");\nvar cpu_util_1 = require(\"./cpu_util\");\nfunction mapActivation(backend, x, activation, preluActivationWeights) {\n    if (activation === 'linear') {\n        return backend.linear(x);\n    }\n    else if (activation === 'relu') {\n        return backend.relu(x);\n    }\n    else if (activation === 'elu') {\n        return backend.elu(x);\n    }\n    else if (activation === 'relu6') {\n        return backend.relu6(x);\n    }\n    else if (activation === 'prelu') {\n        return backend.prelu(x, preluActivationWeights);\n    }\n    throw new Error(\"Activation \" + activation + \" has not been implemented for the CPU backend.\");\n}\nvar MathBackendCPU = /** @class */ (function (_super) {\n    __extends(MathBackendCPU, _super);\n    function MathBackendCPU() {\n        var _this = _super.call(this) || this;\n        _this.blockSize = 48;\n        _this.firstUse = true;\n        _this.data = new backend_1.DataStorage(_this, engine_1.ENGINE);\n        return _this;\n    }\n    MathBackendCPU.prototype.write = function (values, shape, dtype) {\n        if (this.firstUse) {\n            this.firstUse = false;\n            if (environment_1.env().get('IS_NODE')) {\n                log_1.warn('\\n============================\\n' +\n                    'Hi there 👋. Looks like you are running TensorFlow.js in ' +\n                    'Node.js. To speed things up dramatically, install our node ' +\n                    'backend, which binds to TensorFlow C++, by running ' +\n                    'npm i @tensorflow/tfjs-node, ' +\n                    'or npm i @tensorflow/tfjs-node-gpu if you have CUDA. ' +\n                    'Then call require(\\'@tensorflow/tfjs-node\\'); (-gpu ' +\n                    'suffix for CUDA) at the start of your program. ' +\n                    'Visit https://github.com/tensorflow/tfjs-node for more details.' +\n                    '\\n============================');\n            }\n        }\n        var dataId = {};\n        this.data.set(dataId, { values: values, dtype: dtype });\n        return dataId;\n    };\n    MathBackendCPU.prototype.move = function (dataId, values, shape, dtype) {\n        this.data.set(dataId, { values: values, dtype: dtype });\n    };\n    MathBackendCPU.prototype.numDataIds = function () {\n        return this.data.numDataIds();\n    };\n    MathBackendCPU.prototype.read = function (dataId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.readSync(dataId)];\n            });\n        });\n    };\n    MathBackendCPU.prototype.readSync = function (dataId) {\n        var _a = this.data.get(dataId), dtype = _a.dtype, complexTensors = _a.complexTensors;\n        if (dtype === 'complex64') {\n            var realValues = this.readSync(complexTensors.real.dataId);\n            var imagValues = this.readSync(complexTensors.imag.dataId);\n            return complex_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        return this.data.get(dataId).values;\n    };\n    MathBackendCPU.prototype.bufferSync = function (t) {\n        var data = this.readSync(t.dataId);\n        var decodedData = data;\n        if (t.dtype === 'string') {\n            try {\n                // Decode the bytes into string.\n                decodedData = data.map(function (d) { return util.decodeString(d); });\n            }\n            catch (_a) {\n                throw new Error('Failed to decode encoded string bytes into utf-8');\n            }\n        }\n        return ops_1.buffer(t.shape, t.dtype, decodedData);\n    };\n    MathBackendCPU.prototype.makeOutput = function (values, shape, dtype) {\n        var dataId = this.write(values, shape, dtype);\n        return engine_1.ENGINE.makeTensorFromDataId(dataId, shape, dtype, this);\n    };\n    MathBackendCPU.prototype.disposeData = function (dataId) {\n        if (this.data.has(dataId)) {\n            var complexTensors = this.data.get(dataId).complexTensors;\n            if (complexTensors != null) {\n                complexTensors.real.dispose();\n                complexTensors.imag.dispose();\n            }\n            this.data.delete(dataId);\n        }\n    };\n    MathBackendCPU.prototype.time = function (f) {\n        return __awaiter(this, void 0, void 0, function () {\n            var start, kernelMs;\n            return __generator(this, function (_a) {\n                start = util_1.now();\n                f();\n                kernelMs = util_1.now() - start;\n                return [2 /*return*/, { kernelMs: kernelMs }];\n            });\n        });\n    };\n    MathBackendCPU.prototype.memory = function () {\n        return {\n            // Unreliable due to automatic gc. The numbers above are cumulative.\n            unreliable: true,\n            reasons: ['The reported memory is an upper bound. Due to automatic garbage ' +\n                    'collection, the true allocated memory may be less.']\n        };\n    };\n    MathBackendCPU.prototype.complex = function (real, imag) {\n        var result = this.makeOutput(null, real.shape, 'complex64');\n        var resultData = this.data.get(result.dataId);\n        // The backend owns the reference to the underlying real and imaginary\n        // clones. These will explicitly get disposed when the complex tensor is\n        // disposed.\n        resultData.complexTensors = {\n            real: engine_1.ENGINE.keep(real.clone()),\n            imag: engine_1.ENGINE.keep(imag.clone())\n        };\n        return result;\n    };\n    MathBackendCPU.prototype.real = function (input) {\n        var resultData = this.data.get(input.dataId);\n        return resultData.complexTensors.real.clone();\n    };\n    MathBackendCPU.prototype.imag = function (input) {\n        var resultData = this.data.get(input.dataId);\n        return resultData.complexTensors.imag.clone();\n    };\n    MathBackendCPU.prototype.slice = function (x, begin, size) {\n        cpu_util_1.assertNotComplex(x, 'slice');\n        var isContinous = slice_util_1.isSliceContinous(x.shape, begin, size);\n        if (isContinous) {\n            var flatOffset = slice_util_1.computeFlatOffset(begin, x.strides);\n            var length_1 = util.sizeFromShape(size);\n            var vals = this.readSync(x.dataId);\n            return ops_1.tensor(vals.subarray(flatOffset, flatOffset + length_1), size, x.dtype);\n        }\n        var buffer = ops.buffer(size, x.dtype);\n        var xBuf = this.bufferSync(x);\n        for (var i = 0; i < buffer.size; ++i) {\n            var loc = buffer.indexToLoc(i);\n            var xLoc = loc.map(function (idx, j) { return idx + begin[j]; });\n            buffer.values[i] = xBuf.get.apply(xBuf, xLoc);\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.stridedSlice = function (x, begin, end, strides) {\n        cpu_util_1.assertNotComplex(x, 'stridedSlice');\n        var outShape = slice_util_1.computeOutShape(begin, end, strides);\n        if (outShape.some(function (axis) { return axis === 0; })) {\n            return ops.tensor([], outShape);\n        }\n        var buffer = ops.buffer(outShape, x.dtype);\n        var xBuf = this.bufferSync(x);\n        for (var i = 0; i < buffer.size; i++) {\n            var loc = buffer.indexToLoc(i);\n            var newLoc = new Array(loc.length);\n            for (var j = 0; j < newLoc.length; j++) {\n                newLoc[j] = loc[j] * strides[j] + begin[j];\n            }\n            buffer.set.apply(buffer, [xBuf.get.apply(xBuf, newLoc)].concat(loc));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.diag = function (x) {\n        var xVals = this.readSync(x.dataId);\n        var buffer = ops.buffer([x.size, x.size], x.dtype);\n        var vals = buffer.values;\n        for (var i = 0; i < xVals.length; i++) {\n            vals[i * x.size + i] = xVals[i];\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.unstack = function (x, axis) {\n        var num = x.shape[axis];\n        var outShape = new Array(x.rank - 1);\n        var outIndex = 0;\n        for (var i = 0; i < x.rank; i++) {\n            if (i !== axis) {\n                outShape[outIndex++] = x.shape[i];\n            }\n        }\n        var begin = new Array(x.rank).fill(0);\n        var size = x.shape.slice();\n        size[axis] = 1;\n        var res = new Array(num);\n        for (var i = 0; i < res.length; i++) {\n            begin[axis] = i;\n            res[i] = this.slice(x, begin, size).reshape(outShape);\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.reverse = function (x, axis) {\n        cpu_util_1.assertNotComplex(x, 'reverse');\n        var buffer = ops.buffer(x.shape, x.dtype);\n        var xBuf = this.bufferSync(x);\n        var _loop_1 = function (i) {\n            var outLoc = buffer.indexToLoc(i);\n            var inLoc = outLoc.slice();\n            axis.forEach(function (ax) { return inLoc[ax] = x.shape[ax] - 1 - inLoc[ax]; });\n            buffer.set.apply(buffer, [xBuf.get.apply(xBuf, inLoc)].concat(outLoc));\n        };\n        for (var i = 0; i < buffer.size; i++) {\n            _loop_1(i);\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.concat = function (tensors, axis) {\n        var _this = this;\n        if (tensors[0].dtype === 'complex64') {\n            var reals = tensors.map(function (t) { return complex_ops_1.real(t); });\n            var imags = tensors.map(function (t) { return complex_ops_1.imag(t); });\n            return complex_ops_1.complex(this.concat(reals, axis), this.concat(imags, axis));\n        }\n        var tensors2D = tensors.map(function (t) {\n            var innerSize = util.sizeFromShape(t.shape.slice(axis));\n            return t.as2D(-1, innerSize);\n        });\n        var outShape = concat_util.computeOutShape(tensors2D.map(function (t) { return t.shape; }), 1 /* axis */);\n        var values = ops.buffer(outShape, tensors[0].dtype)\n            .values;\n        if (tensors2D[0].shape[0] === 1) {\n            // Use built-in TypedArray.set() method for speed.\n            var offset_1 = 0;\n            tensors2D.forEach(function (t) {\n                values.set(_this.readSync(t.dataId), offset_1);\n                offset_1 += t.size;\n            });\n        }\n        else {\n            var colOffset_1 = 0;\n            tensors2D.forEach(function (t) {\n                var tVals = _this.readSync(t.dataId);\n                var tIdx = 0;\n                for (var row = 0; row < t.shape[0]; ++row) {\n                    var resIdx = row * outShape[1] + colOffset_1;\n                    for (var col = 0; col < t.shape[1]; ++col) {\n                        values[resIdx + col] = tVals[tIdx++];\n                    }\n                }\n                colOffset_1 += t.shape[1];\n            });\n        }\n        var finalOutShape = concat_util.computeOutShape(tensors.map(function (t) { return t.shape; }), axis);\n        return ops_1.tensor(values, finalOutShape, tensors[0].dtype);\n    };\n    MathBackendCPU.prototype.neg = function (x) {\n        cpu_util_1.assertNotComplex(x, 'neg');\n        return this.multiply(ops.scalar(-1), x);\n    };\n    MathBackendCPU.prototype.add = function (a, b) {\n        if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n            return this.broadcastedBinaryComplexOp(a.cast('complex64'), b.cast('complex64'), function (aReal, aImag, bReal, bImag) {\n                return { real: aReal + bReal, imag: aImag + bImag };\n            });\n        }\n        return this.broadcastedBinaryOp(a, b, types_1.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue + bValue; });\n    };\n    MathBackendCPU.prototype.addN = function (tensors) {\n        var _this = this;\n        cpu_util_1.assertNotComplex(tensors, 'addN');\n        var vals = tensors.map(function (t) { return _this.readSync(t.dataId); });\n        var result = ops.buffer(tensors[0].shape, tensors[0].dtype);\n        var resultVals = result.values;\n        for (var i = 0; i < tensors.length; i++) {\n            var currVals = vals[i];\n            for (var j = 0; j < resultVals.length; j++) {\n                resultVals[j] += currVals[j];\n            }\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.subtract = function (a, b) {\n        if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n            return this.broadcastedBinaryComplexOp(a.cast('complex64'), b.cast('complex64'), function (aReal, aImag, bReal, bImag) {\n                return { real: aReal - bReal, imag: aImag - bImag };\n            });\n        }\n        return this.broadcastedBinaryOp(a, b, types_1.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue - bValue; });\n    };\n    MathBackendCPU.prototype.pow = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'pow');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.pow(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.batchMatMul = function (a, b, transposeA, transposeB) {\n        cpu_util_1.assertNotComplex([a, b], 'matMul');\n        var sharedDim = transposeA ? a.shape[1] : a.shape[2];\n        var leftDim = transposeA ? a.shape[2] : a.shape[1];\n        var rightDim = transposeB ? b.shape[1] : b.shape[2];\n        var batchDim = a.shape[0];\n        var aValues = this.readSync(a.dataId);\n        var bValues = this.readSync(b.dataId);\n        var _a = transposeA ?\n            [a.strides[0], 1, a.strides[1]] :\n            [a.strides[0], a.strides[1], 1], aBatch = _a[0], aOuterStep = _a[1], aInnerStep = _a[2];\n        var _b = transposeB ?\n            [1, b.strides[1], b.strides[0]] :\n            [b.strides[1], 1, b.strides[0]], bInnerStep = _b[0], bOuterStep = _b[1], bBatch = _b[2];\n        var size = leftDim * rightDim;\n        var result = ops_1.buffer([batchDim, leftDim, rightDim], a.dtype);\n        var resVals = result.values;\n        var blockSize = this.blockSize;\n        for (var b_1 = 0; b_1 < batchDim; b_1++) {\n            for (var i0 = 0; i0 < leftDim; i0 += blockSize) {\n                for (var j0 = 0; j0 < rightDim; j0 += blockSize) {\n                    for (var k0 = 0; k0 < sharedDim; k0 += blockSize) {\n                        // for when blockSize doesn't evenly divide the input\n                        var iBlock = Math.min(i0 + blockSize, leftDim);\n                        var jBlock = Math.min(j0 + blockSize, rightDim);\n                        var kBlock = Math.min(k0 + blockSize, sharedDim);\n                        for (var i = i0; i < iBlock; i++) {\n                            for (var j = j0; j < jBlock; j++) {\n                                var sum = 0.0;\n                                for (var k = k0; k < kBlock; k++) {\n                                    sum += aValues[b_1 * aBatch + i * aOuterStep + k * aInnerStep] *\n                                        bValues[k * bInnerStep + j * bOuterStep + b_1 * bBatch];\n                                }\n                                resVals[b_1 * size + (i * rightDim + j)] += sum;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.fusedBatchMatMul = function (_a) {\n        var a = _a.a, b = _a.b, transposeA = _a.transposeA, transposeB = _a.transposeB, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        var result = this.batchMatMul(a, b, transposeA, transposeB);\n        if (bias) {\n            result = this.add(result, bias);\n        }\n        if (activation) {\n            result =\n                mapActivation(this, result, activation, preluActivationWeights);\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.multiply = function (a, b) {\n        if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n            return this.broadcastedBinaryComplexOp(a.cast('complex64'), b.cast('complex64'), function (aReal, aImag, bReal, bImag) {\n                return {\n                    real: aReal * bReal - aImag * bImag,\n                    imag: aReal * bImag + aImag * bReal\n                };\n            });\n        }\n        return this.broadcastedBinaryOp(a, b, types_1.upcastType(a.dtype, b.dtype), function (aValue, bValue) { return aValue * bValue; });\n    };\n    MathBackendCPU.prototype.realDivide = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'realDivide');\n        var op = function (a, b) { return a / b; };\n        var outputDtype = 'float32';\n        return this.broadcastedBinaryOp(a, b, outputDtype, op);\n    };\n    MathBackendCPU.prototype.floorDiv = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'floorDiv');\n        var op = function (a, b) { return Math.floor(a / b); };\n        var outputDtype = 'int32';\n        return this.broadcastedBinaryOp(a, b, outputDtype, op);\n    };\n    MathBackendCPU.prototype.sum = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'sum');\n        axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types_1.upcastType(x.dtype, 'int32');\n        var result = ops.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var sum = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                sum += aVals[offset + j];\n            }\n            vals[i] = sum;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.prod = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'sum');\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var resultDtype = types_1.upcastType(x.dtype, 'int32');\n        var result = ops.zeros(outShape, resultDtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var prod = 1;\n            for (var j = 0; j < reduceSize; ++j) {\n                prod *= aVals[offset + j];\n            }\n            vals[i] = prod;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.unsortedSegmentSum = function (x, segmentIds, numSegments) {\n        cpu_util_1.assertNotComplex(x, 'unsortedSegmentSum');\n        var res = [];\n        // Reshape the segment id's so that they can be broadcast with\n        // x. The new shape should be [segmentIds.shape, 1, ..., 1]\n        var numIters = x.rank - segmentIds.rank;\n        for (var i = 0; i < numIters; ++i) {\n            segmentIds = segmentIds.expandDims(i + 1);\n        }\n        for (var i = 0; i < numSegments; ++i) {\n            var segmentId = ops.scalar(i, 'int32');\n            var mask = ops.equal(segmentId, segmentIds).asType('float32');\n            var sum = mask.mul(x).sum(0);\n            res.push(sum);\n        }\n        return ops.stack(res);\n    };\n    MathBackendCPU.prototype.argMin = function (x, axis) {\n        cpu_util_1.assertNotComplex(x, 'argMin');\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            var minIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                    minIndex = j;\n                }\n            }\n            vals[i] = minIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.argMax = function (x, axis) {\n        cpu_util_1.assertNotComplex(x, 'argMax');\n        var axes = [axis];\n        axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, 'int32');\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            var maxIndex = 0;\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                    maxIndex = j;\n                }\n            }\n            vals[i] = maxIndex;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.cumsum = function (x, axis, exclusive, reverse) {\n        cpu_util_1.assertNotComplex(x, 'cumsum');\n        if (axis !== x.rank - 1) {\n            throw new Error(\"backend.cumsum in CPU expects an inner-most axis=\" + (x.rank - 1) + \" \" +\n                (\"but got axis=\" + axis));\n        }\n        var resultDtype = types_1.upcastType(x.dtype, 'int32');\n        var result = ops.zeros(x.shape, resultDtype);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        var finalDim = x.shape[x.rank - 1];\n        var indexAdjuster = reverse ?\n            function (i, j) { return i + finalDim - j - 1; } :\n            function (i, j) { return i + j; };\n        for (var i = 0; i < aVals.length; i += finalDim) {\n            for (var j = 0; j < finalDim; j++) {\n                var idx = indexAdjuster(i, j);\n                if (j === 0) {\n                    vals[idx] = exclusive ? 0 : aVals[idx];\n                }\n                else {\n                    var prevIdx = indexAdjuster(i, j - 1);\n                    vals[idx] = exclusive ? aVals[prevIdx] + vals[prevIdx] :\n                        aVals[idx] + vals[prevIdx];\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.equal = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'equal');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal === bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.notEqual = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'notEqual');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal !== bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.less = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'less');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal < bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.lessEqual = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'lessEqual');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal <= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greater = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'greater');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal > bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.greaterEqual = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'greaterEqual');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return (aVal >= bVal) ? 1 : 0;\n        });\n    };\n    MathBackendCPU.prototype.logicalNot = function (x) {\n        cpu_util_1.assertNotComplex(x, 'logicalNot');\n        var values = this.readSync(x.dataId);\n        var newValues = new Uint8Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = values[i] ? 0 : 1;\n        }\n        return this.makeOutput(newValues, x.shape, 'bool');\n    };\n    MathBackendCPU.prototype.logicalAnd = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'logicalAnd');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal && bVal;\n        });\n    };\n    MathBackendCPU.prototype.logicalOr = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'logicalOr');\n        return this.broadcastedBinaryOp(a, b, 'bool', function (aVal, bVal) {\n            return aVal || bVal;\n        });\n    };\n    MathBackendCPU.prototype.select = function (condition, a, b) {\n        cpu_util_1.assertNotComplex([condition, a, b], 'select');\n        var values = this.readSync(condition.dataId);\n        var aValues = this.readSync(a.dataId);\n        var bValues = this.readSync(b.dataId);\n        var result = ops.zeros(a.shape, types_1.upcastType(a.dtype, b.dtype));\n        var newValues = this.readSync(result.dataId);\n        var index = 0;\n        var offset = condition.rank === 0 || condition.rank > 1 || a.rank === 1 ?\n            1 :\n            util.sizeFromShape(a.shape.slice(1));\n        for (var i = 0; i < values.length; i++) {\n            for (var j = 0; j < offset; j++) {\n                if (values[i] === 1) {\n                    newValues[index++] = aValues[i];\n                }\n                else {\n                    newValues[index++] = bValues[i];\n                }\n            }\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.where = function (condition) {\n        cpu_util_1.assertNotComplex([condition], 'where');\n        var condVals = this.readSync(condition.dataId);\n        return where_impl_1.whereImpl(condition.shape, condVals);\n    };\n    MathBackendCPU.prototype.topk = function (x, k, sorted) {\n        cpu_util_1.assertNotComplex(x, 'topk');\n        var xVals = this.readSync(x.dataId);\n        return topk_impl_1.topkImpl(xVals, x.shape, x.dtype, k, sorted);\n    };\n    MathBackendCPU.prototype.min = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'min');\n        axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var min = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value < min) {\n                    min = value;\n                }\n            }\n            vals[i] = min;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.minimum = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'minimum');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.min(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.mod = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'mod');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var rem = aVal % bVal;\n            if ((aVal < 0 && bVal < 0) || (aVal >= 0 && bVal >= 0)) {\n                return rem;\n            }\n            else {\n                return (rem + bVal) % bVal;\n            }\n        });\n    };\n    MathBackendCPU.prototype.max = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'max');\n        axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var max = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                if (value > max) {\n                    max = value;\n                }\n            }\n            vals[i] = max;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.maximum = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'maximum');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) { return Math.max(aVal, bVal); });\n    };\n    MathBackendCPU.prototype.all = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'all');\n        axis_util.assertAxesAreInnerMostDims('all', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var all = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                all = all && value;\n            }\n            vals[i] = all;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.any = function (x, axes) {\n        cpu_util_1.assertNotComplex(x, 'any');\n        axis_util.assertAxesAreInnerMostDims('any', axes, x.rank);\n        var _a = axis_util.computeOutAndReduceShapes(x.shape, axes), outShape = _a[0], reduceShape = _a[1];\n        var result = ops.zeros(outShape, x.dtype);\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var vals = this.readSync(result.dataId);\n        var aVals = this.readSync(x.dataId);\n        for (var i = 0; i < vals.length; ++i) {\n            var offset = i * reduceSize;\n            var anyVal = aVals[offset];\n            for (var j = 0; j < reduceSize; ++j) {\n                var value = aVals[offset + j];\n                anyVal = anyVal || value;\n            }\n            vals[i] = anyVal;\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.squaredDifference = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'squaredDifference');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aVal, bVal) {\n            var diff = aVal - bVal;\n            return diff * diff;\n        });\n    };\n    MathBackendCPU.prototype.ceil = function (x) {\n        cpu_util_1.assertNotComplex(x, 'ceil');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.ceil(values[i]);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.floor = function (x) {\n        cpu_util_1.assertNotComplex(x, 'floor');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.floor(values[i]);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.sign = function (x) {\n        cpu_util_1.assertNotComplex(x, 'x');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] < 0) {\n                newValues[i] = -1;\n            }\n            else if (values[i] > 0) {\n                newValues[i] = 1;\n            }\n            else {\n                newValues[i] = 0;\n            }\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.isNaN = function (x) {\n        cpu_util_1.assertNotComplex(x, 'x');\n        var values = this.readSync(x.dataId);\n        var newValues = new Uint8Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (Number.isNaN(values[i])) {\n                newValues[i] = 1;\n            }\n        }\n        return this.makeOutput(newValues, x.shape, 'bool');\n    };\n    MathBackendCPU.prototype.isInf = function (x) {\n        cpu_util_1.assertNotComplex(x, 'x');\n        var values = this.readSync(x.dataId);\n        var newValues = new Uint8Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (Math.abs(values[i]) === Infinity) {\n                newValues[i] = 1;\n            }\n        }\n        return this.makeOutput(newValues, x.shape, 'bool');\n    };\n    MathBackendCPU.prototype.isFinite = function (x) {\n        cpu_util_1.assertNotComplex(x, 'x');\n        var values = this.readSync(x.dataId);\n        var newValues = new Uint8Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            if (Number.isFinite(values[i])) {\n                newValues[i] = 1;\n            }\n        }\n        return this.makeOutput(newValues, x.shape, 'bool');\n    };\n    MathBackendCPU.prototype.round = function (x) {\n        cpu_util_1.assertNotComplex(x, 'round');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            // The algorithm is based on banker's rounding.\n            var base = Math.floor(values[i]);\n            if (values[i] - base < 0.5) {\n                newValues[i] = Math.floor(values[i]);\n            }\n            else if (values[i] - base > 0.5) {\n                newValues[i] = Math.ceil(values[i]);\n            }\n            else {\n                if (base % 2.0 === 0.0) {\n                    newValues[i] = base;\n                }\n                else {\n                    newValues[i] = base + 1.0;\n                }\n            }\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.exp = function (x) {\n        cpu_util_1.assertNotComplex(x, 'exp');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.exp(values[i]);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.expm1 = function (x) {\n        cpu_util_1.assertNotComplex(x, 'expm1');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = Math.expm1(values[i]);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.log = function (x) {\n        cpu_util_1.assertNotComplex(x, 'log');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log(value);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.log1p = function (x) {\n        cpu_util_1.assertNotComplex(x, 'log1p');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.log1p(value);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.sqrt = function (x) {\n        cpu_util_1.assertNotComplex(x, 'sqrt');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = Math.sqrt(value);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.rsqrt = function (x) {\n        cpu_util_1.assertNotComplex(x, 'rsqrt');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = 1 / Math.sqrt(value);\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.reciprocal = function (x) {\n        cpu_util_1.assertNotComplex(x, 'reciprocal');\n        var values = this.readSync(x.dataId);\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            newValues[i] = 1 / values[i];\n        }\n        return this.makeOutput(newValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.linear = function (x) {\n        return x;\n    };\n    MathBackendCPU.prototype.relu = function (x) {\n        cpu_util_1.assertNotComplex(x, 'relu');\n        var res = ops.zeros(x.shape, x.dtype);\n        var resVals = this.readSync(res.dataId);\n        var inVals = this.readSync(x.dataId);\n        for (var i = 0; i < inVals.length; ++i) {\n            resVals[i] = Math.max(0, inVals[i]);\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.relu6 = function (x) {\n        cpu_util_1.assertNotComplex(x, 'relu');\n        var res = ops.zeros(x.shape, x.dtype);\n        var resVals = this.readSync(res.dataId);\n        var inVals = this.readSync(x.dataId);\n        for (var i = 0; i < inVals.length; ++i) {\n            resVals[i] = Math.min(Math.max(0, inVals[i]), 6);\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.prelu = function (x, a) {\n        cpu_util_1.assertNotComplex([x, a], 'prelu');\n        return this.broadcastedBinaryOp(x, a, x.dtype, function (xValue, aValue) { return xValue < 0 ? aValue * xValue : xValue; });\n    };\n    MathBackendCPU.prototype.elu = function (x) {\n        cpu_util_1.assertNotComplex(x, 'elu');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = v;\n            }\n            else {\n                resultValues[i] = (Math.exp(v) - 1);\n            }\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.eluDer = function (dy, y) {\n        cpu_util_1.assertNotComplex([dy, y], 'eluDer');\n        var resultValues = new Float32Array(y.size);\n        var values = this.readSync(y.dataId);\n        var dyValues = this.readSync(dy.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 1) {\n                resultValues[i] = dyValues[i];\n            }\n            else {\n                resultValues[i] = dyValues[i] * (v + 1);\n            }\n        }\n        return this.makeOutput(resultValues, y.shape, 'float32');\n    };\n    MathBackendCPU.prototype.selu = function (x) {\n        cpu_util_1.assertNotComplex(x, 'selu');\n        // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n        // see: https://arxiv.org/abs/1706.02515\n        var scaleAlpha = selu_util.SELU_SCALEALPHA;\n        var scale = selu_util.SELU_SCALE;\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            if (v >= 0) {\n                resultValues[i] = scale * v;\n            }\n            else {\n                resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n            }\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.clip = function (x, min, max) {\n        cpu_util_1.assertNotComplex(x, 'clip');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            var v = values[i];\n            resultValues[i] = v > max ? max : (v < min ? min : v);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.abs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.abs(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.complexAbs = function (x) {\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < x.size; ++i) {\n            var real_1 = values[i * 2];\n            var imag_1 = values[i * 2 + 1];\n            resultValues[i] = Math.hypot(real_1, imag_1);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.int = function (x) {\n        cpu_util_1.assertNotComplex(x, 'int');\n        var resultValues = new Int32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = values[i];\n        }\n        return this.makeOutput(resultValues, x.shape, 'int32');\n    };\n    MathBackendCPU.prototype.sigmoid = function (x) {\n        cpu_util_1.assertNotComplex(x, 'sigmoid');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.softplus = function (x) {\n        cpu_util_1.assertNotComplex(x, 'softplus');\n        // mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n        // epsilon is the difference between 1.0 and the next representable float.\n        // For a single precision 32 bit float this should be 2^-23, see:\n        // https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\n        var epsilon = 1.1920928955078125e-7;\n        var threshold = Math.log(epsilon) + 2.0;\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            // Value above which exp(x) may overflow, but softplus(x) == x\n            // is within machine epsilon.\n            var tooLarge = values[i] > -threshold;\n            // Value below which exp(x) may underflow, but softplus(x) == exp(x)\n            // is within machine epsilon.\n            var tooSmall = values[i] < threshold;\n            var expX = Math.exp(values[i]);\n            var result = void 0;\n            if (tooSmall) {\n                result = expX;\n            }\n            else if (tooLarge) {\n                result = values[i];\n            }\n            else {\n                result = Math.log(1.0 + expX);\n            }\n            resultValues[i] = result;\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.sin = function (x) {\n        cpu_util_1.assertNotComplex(x, 'sin');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sin(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.cos = function (x) {\n        cpu_util_1.assertNotComplex(x, 'cos');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cos(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.tan = function (x) {\n        cpu_util_1.assertNotComplex(x, 'tan');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.tan(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.asin = function (x) {\n        cpu_util_1.assertNotComplex(x, 'asin');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asin(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.acos = function (x) {\n        cpu_util_1.assertNotComplex(x, 'acos');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acos(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.atan = function (x) {\n        cpu_util_1.assertNotComplex(x, 'atan');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atan(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.atan2 = function (a, b) {\n        cpu_util_1.assertNotComplex([a, b], 'atan2');\n        return this.broadcastedBinaryOp(a, b, a.dtype, function (aValue, bValue) { return Math.atan2(aValue, bValue); });\n    };\n    MathBackendCPU.prototype.sinh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'sinh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.sinh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.cosh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'cosh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.cosh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.tanh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'tanh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = util.tanh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.asinh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'asinh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.asinh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.acosh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'acosh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.acosh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.atanh = function (x) {\n        cpu_util_1.assertNotComplex(x, 'atanh');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            resultValues[i] = Math.atanh(values[i]);\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.erf = function (x) {\n        cpu_util_1.assertNotComplex(x, 'erf');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        var p = erf_util.ERF_P;\n        var a1 = erf_util.ERF_A1;\n        var a2 = erf_util.ERF_A2;\n        var a3 = erf_util.ERF_A3;\n        var a4 = erf_util.ERF_A4;\n        var a5 = erf_util.ERF_A5;\n        for (var i = 0; i < values.length; ++i) {\n            var sign = Math.sign(values[i]);\n            var v = Math.abs(values[i]);\n            var t = 1.0 / (1.0 + p * v);\n            resultValues[i] = sign *\n                (1.0 -\n                    (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t *\n                        Math.exp(-v * v));\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.step = function (x, alpha) {\n        if (alpha === void 0) { alpha = 0; }\n        cpu_util_1.assertNotComplex(x, 'step');\n        var resultValues = new Float32Array(x.size);\n        var values = this.readSync(x.dataId);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            if (isNaN(value)) {\n                resultValues[i] = NaN;\n            }\n            else {\n                resultValues[i] = value > 0 ? 1 : alpha;\n            }\n        }\n        return this.makeOutput(resultValues, x.shape, 'float32');\n    };\n    MathBackendCPU.prototype.fusedConv2d = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        var result = this.conv2d(input, filter, convInfo);\n        if (bias) {\n            result = this.add(result, bias);\n        }\n        if (activation) {\n            result =\n                mapActivation(this, result, activation, preluActivationWeights);\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.conv2d = function (x, filter, convInfo) {\n        cpu_util_1.assertNotComplex([x, filter], 'conv2d');\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        var xBatchStride = x.strides[0];\n        var xRowStride = isChannelsLast ? x.strides[1] : x.strides[2];\n        var xColStride = isChannelsLast ? x.strides[2] : 1;\n        var xChannelStride = isChannelsLast ? 1 : x.strides[1];\n        var yBatchStride = y.strides[0];\n        var yRowStride = isChannelsLast ? y.strides[1] : y.strides[2];\n        var yColStride = isChannelsLast ? y.strides[2] : 1;\n        var yChannelStride = isChannelsLast ? 1 : y.strides[1];\n        var xVals = this.readSync(x.dataId);\n        var wVals = this.readSync(filter.dataId);\n        var yVals = y.values;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            var xOffset1 = b * xBatchStride;\n            var yOffset1 = b * yBatchStride;\n            for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                var yOffset2 = yOffset1 + yR * yRowStride;\n                var xRCorner = yR * convInfo.strideHeight - padTop;\n                for (var wR = 0; wR < filterHeight; wR++) {\n                    var xR = xRCorner + wR * dilationHeight;\n                    if (xR < 0 || xR >= convInfo.inHeight) {\n                        continue;\n                    }\n                    var wOffset1 = wR * filter.strides[0];\n                    var xOffset2 = xOffset1 + xR * xRowStride;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var yOffset3 = yOffset2 + yC * yColStride;\n                        var xCCorner = yC * convInfo.strideWidth - padLeft;\n                        for (var wC = 0; wC < filterWidth; wC++) {\n                            var xC = xCCorner + wC * dilationWidth;\n                            if (xC < 0 || xC >= convInfo.inWidth) {\n                                continue;\n                            }\n                            var wOffset2 = wOffset1 + wC * filter.strides[1];\n                            var xOffset3 = xOffset2 + xC * xColStride;\n                            var wOffset3 = wOffset2;\n                            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                var xVal = xVals[xOffset3 + d1 * xChannelStride];\n                                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                    yVals[yOffset3 + d2 * yChannelStride] +=\n                                        xVal * wVals[wOffset3 + d2];\n                                }\n                                wOffset3 += convInfo.outChannels;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.conv3d = function (x, filter, convInfo) {\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padFront = convInfo.padInfo.front;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        var xVals = this.readSync(x.dataId);\n        var wVals = this.readSync(filter.dataId);\n        var yVals = y.values;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            var xOffset1 = b * x.strides[0];\n            var yOffset1 = b * y.strides[0];\n            for (var yF = 0; yF < convInfo.outDepth; ++yF) {\n                var yOffset2 = yOffset1 + yF * y.strides[1];\n                var xFCorner = yF * convInfo.strideDepth - padFront;\n                for (var wF = 0; wF < filterDepth; wF++) {\n                    var xF = xFCorner + wF * dilationDepth;\n                    if (xF < 0 || xF >= convInfo.inDepth) {\n                        continue;\n                    }\n                    var wOffset1 = wF * filter.strides[0];\n                    var xOffset2 = xOffset1 + xF * x.strides[1];\n                    for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                        var yOffset3 = yOffset2 + yR * y.strides[2];\n                        var xRCorner = yR * convInfo.strideHeight - padTop;\n                        for (var wR = 0; wR < filterHeight; wR++) {\n                            var xR = xRCorner + wR * dilationHeight;\n                            if (xR < 0 || xR >= convInfo.inHeight) {\n                                continue;\n                            }\n                            var wOffset2 = wOffset1 + wR * filter.strides[1];\n                            var xOffset3 = xOffset2 + xR * x.strides[2];\n                            for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                                var yOffset4 = yOffset3 + yC * convInfo.outChannels;\n                                var xCCorner = yC * convInfo.strideWidth - padLeft;\n                                for (var wC = 0; wC < filterWidth; wC++) {\n                                    var xC = xCCorner + wC * dilationWidth;\n                                    if (xC < 0 || xC >= convInfo.inWidth) {\n                                        continue;\n                                    }\n                                    var wOffset3 = wOffset2 + wC * filter.strides[2];\n                                    var xOffset4 = xOffset3 + xC * convInfo.inChannels;\n                                    var wOffset4 = wOffset3;\n                                    for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                        var xVal = xVals[xOffset4 + d1];\n                                        for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                                            yVals[yOffset4 + d2] += xVal * wVals[wOffset4 + d2];\n                                        }\n                                        wOffset4 += convInfo.outChannels;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerInput = function (dy, filter, convInfo) {\n        cpu_util_1.assertNotComplex([dy, filter], 'conv2dDerInput');\n        var dx = ops.buffer(convInfo.inShape, 'float32');\n        var dxValues = dx.values;\n        var dyValues = this.readSync(dy.dataId);\n        var fltValues = this.readSync(filter.dataId);\n        var _a = filter.strides, fltS0 = _a[0], fltS1 = _a[1], fltS2 = _a[2];\n        var batchSize = convInfo.batchSize, filterHeight = convInfo.filterHeight, filterWidth = convInfo.filterWidth, inChannels = convInfo.inChannels, inHeight = convInfo.inHeight, inWidth = convInfo.inWidth, outChannels = convInfo.outChannels, outHeight = convInfo.outHeight, outWidth = convInfo.outWidth, strideHeight = convInfo.strideHeight, strideWidth = convInfo.strideWidth, dataFormat = convInfo.dataFormat;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var isChannelsLast = dataFormat === 'channelsLast';\n        var xBatchStride = dx.strides[0];\n        var xRowStride = isChannelsLast ? dx.strides[1] : dx.strides[2];\n        var xColStride = isChannelsLast ? dx.strides[2] : 1;\n        var xChannelStride = isChannelsLast ? 1 : dx.strides[1];\n        var yBatchStride = dy.strides[0];\n        var yRowStride = isChannelsLast ? dy.strides[1] : dy.strides[2];\n        var yColStride = isChannelsLast ? dy.strides[2] : 1;\n        var yChannelStride = isChannelsLast ? 1 : dy.strides[1];\n        for (var b = 0; b < batchSize; ++b) {\n            for (var d1 = 0; d1 < inChannels; ++d1) {\n                for (var xR = 0; xR < inHeight; ++xR) {\n                    var xRCorner = xR - topPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < inWidth; ++xC) {\n                        var xCCorner = xC - leftPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                var dyOffset = yBatchStride * b + yRowStride * yR + yColStride * yC;\n                                var fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                                    fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n                                for (var d2 = 0; d2 < outChannels; ++d2) {\n                                    var pixel = dyValues[dyOffset + yChannelStride * d2];\n                                    var weight = fltValues[fltOffset + d2];\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        var dxOffset = xBatchStride * b + xRowStride * xR +\n                            xColStride * xC + xChannelStride * d1;\n                        dxValues[dxOffset] = dotProd;\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.conv3dDerInput = function (dy, filter, convInfo) {\n        var dx = ops.buffer(convInfo.inShape, 'float32');\n        var dxValues = dx.values;\n        var _a = dx.strides, dxS0 = _a[0], dxS1 = _a[1], dxS2 = _a[2], dxS3 = _a[3];\n        var dyValues = this.readSync(dy.dataId);\n        var _b = dy.strides, dyS0 = _b[0], dyS1 = _b[1], dyS2 = _b[2], dyS3 = _b[3];\n        var fltValues = this.readSync(filter.dataId);\n        var _c = filter.strides, fltS0 = _c[0], fltS1 = _c[1], fltS2 = _c[2], fltS3 = _c[3];\n        var batchSize = convInfo.batchSize, filterDepth = convInfo.filterDepth, filterHeight = convInfo.filterHeight, filterWidth = convInfo.filterWidth, inChannels = convInfo.inChannels, inDepth = convInfo.inDepth, inHeight = convInfo.inHeight, inWidth = convInfo.inWidth, outChannels = convInfo.outChannels, outDepth = convInfo.outDepth, outHeight = convInfo.outHeight, outWidth = convInfo.outWidth, strideDepth = convInfo.strideDepth, strideHeight = convInfo.strideHeight, strideWidth = convInfo.strideWidth;\n        var frontPad = filterDepth - 1 - convInfo.padInfo.front;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        for (var b = 0; b < batchSize; ++b) {\n            for (var d1 = 0; d1 < inChannels; ++d1) {\n                // Frames of depth\n                for (var xF = 0; xF < inDepth; ++xF) {\n                    var xFCorner = xF - frontPad;\n                    var xFMin = Math.max(0, Math.ceil(xFCorner / strideDepth));\n                    var yFMax = Math.min(outDepth, (filterDepth + xFCorner) / strideDepth);\n                    // Rows as per standard 2d matrix notation\n                    for (var xR = 0; xR < inHeight; ++xR) {\n                        var xRCorner = xR - topPad;\n                        var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                        var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                        // Columns as per standard 2d matrix notation\n                        for (var xC = 0; xC < inWidth; ++xC) {\n                            var xCCorner = xC - leftPad;\n                            var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                            var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                            var dotProd = 0;\n                            for (var yF = xFMin; yF < yFMax; ++yF) {\n                                var wF = yF * strideDepth - xFCorner;\n                                for (var yR = xRMin; yR < yRMax; ++yR) {\n                                    var wR = yR * strideHeight - xRCorner;\n                                    for (var yC = xCMin; yC < yCMax; ++yC) {\n                                        var wC = yC * strideWidth - xCCorner;\n                                        var dyOffset = dyS0 * b + dyS1 * yF + dyS2 * yR + dyS3 * yC;\n                                        var fltOffset = fltS0 * (filterDepth - 1 - wF) +\n                                            fltS1 * (filterHeight - 1 - wR) +\n                                            fltS2 * (filterWidth - 1 - wC) + fltS3 * d1;\n                                        for (var d2 = 0; d2 < outChannels; ++d2) {\n                                            var pixel = dyValues[dyOffset + d2];\n                                            var weight = fltValues[fltOffset + d2];\n                                            dotProd += pixel * weight;\n                                        }\n                                    }\n                                }\n                            }\n                            dxValues[dxS0 * b + dxS1 * xF + dxS2 * xR + dxS3 * xC + d1] =\n                                dotProd;\n                        }\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.conv2dDerFilter = function (x, dy, convInfo) {\n        cpu_util_1.assertNotComplex([x, dy], 'conv2dDerFilter');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        var dW = ops.buffer(convInfo.filterShape, 'float32');\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        var xBuf = this.bufferSync(x);\n        var dyBuf = this.bufferSync(dy);\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                        // Need to convolve.\n                        var dotProd = 0;\n                        for (var b = 0; b < convInfo.batchSize; ++b) {\n                            for (var yR = yRMin; yR < yRMax; ++yR) {\n                                var xR = wR + yR * strideHeight - topPad;\n                                for (var yC = yCMin; yC < yCMax; ++yC) {\n                                    var xC = wC + yC * strideWidth - leftPad;\n                                    if (isChannelsLast) {\n                                        dotProd +=\n                                            xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n                                    }\n                                    else {\n                                        dotProd +=\n                                            xBuf.get(b, d1, xR, xC) * dyBuf.get(b, d2, yR, yC);\n                                    }\n                                }\n                            }\n                        }\n                        dW.set(dotProd, wR, wC, d1, d2);\n                    }\n                }\n            }\n        }\n        return dW.toTensor();\n    };\n    MathBackendCPU.prototype.conv3dDerFilter = function (x, dy, convInfo) {\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dw = ops.buffer(convInfo.filterShape, 'float32');\n        var dwValues = dw.values;\n        var _a = dw.strides, dwS0 = _a[0], dwS1 = _a[1], dwS2 = _a[2], dwS3 = _a[3];\n        var dyValues = this.readSync(dy.dataId);\n        var _b = dy.strides, dyS0 = _b[0], dyS1 = _b[1], dyS2 = _b[2], dyS3 = _b[3];\n        var xValues = this.readSync(x.dataId);\n        var _c = x.strides, xS0 = _c[0], xS1 = _c[1], xS2 = _c[2], xS3 = _c[3];\n        var frontPad = convInfo.padInfo.front;\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        for (var wF = 0; wF < filterDepth; ++wF) {\n            var yFMin = Math.max(0, Math.ceil((frontPad - wF) / strideDepth));\n            var yFMax = Math.min(convInfo.outDepth, (convInfo.inDepth + frontPad - wF) / strideDepth);\n            var wOffset1 = wF * dwS0;\n            for (var wR = 0; wR < filterHeight; ++wR) {\n                var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n                var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n                var wOffset2 = wR * dwS1 + wOffset1;\n                for (var wC = 0; wC < filterWidth; ++wC) {\n                    var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                    var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                    var wOffset3 = wC * dwS2 + wOffset2;\n                    for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                        var wOffset4 = d1 * dwS3 + wOffset3;\n                        for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                            var dotProd = 0;\n                            for (var b = 0; b < convInfo.batchSize; ++b) {\n                                var xOffset1 = b * xS0;\n                                var yOffset1 = b * dyS0;\n                                for (var yF = yFMin; yF < yFMax; ++yF) {\n                                    var xF = wF + yF * strideDepth - frontPad;\n                                    var xOffset2 = xF * xS1 + xOffset1;\n                                    var yOffset2 = yF * dyS1 + yOffset1;\n                                    for (var yR = yRMin; yR < yRMax; ++yR) {\n                                        var xR = wR + yR * strideHeight - topPad;\n                                        var xOffset3 = xR * xS2 + xOffset2;\n                                        var yOffset3 = yR * dyS2 + yOffset2;\n                                        for (var yC = yCMin; yC < yCMax; ++yC) {\n                                            var xC = wC + yC * strideWidth - leftPad;\n                                            var xOffset4 = xC * xS3 + xOffset3;\n                                            var yOffset4 = yC * dyS3 + yOffset3;\n                                            dotProd +=\n                                                xValues[xOffset4 + d1] * dyValues[yOffset4 + d2];\n                                        }\n                                    }\n                                }\n                            }\n                            dwValues[wOffset4 + d2] = dotProd;\n                        }\n                    }\n                }\n            }\n        }\n        return dw.toTensor();\n    };\n    MathBackendCPU.prototype.fusedDepthwiseConv2D = function (_a) {\n        var input = _a.input, filter = _a.filter, convInfo = _a.convInfo, bias = _a.bias, activation = _a.activation, preluActivationWeights = _a.preluActivationWeights;\n        var result = this.depthwiseConv2D(input, filter, convInfo);\n        if (bias) {\n            result = this.add(result, bias);\n        }\n        if (activation) {\n            result =\n                mapActivation(this, result, activation, preluActivationWeights);\n        }\n        return result;\n    };\n    MathBackendCPU.prototype.depthwiseConv2D = function (x, filter, convInfo) {\n        cpu_util_1.assertNotComplex([x, filter], 'depthwiseConv2D');\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var padLeft = convInfo.padInfo.left;\n        var padTop = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var y = ops.buffer(convInfo.outShape, x.dtype);\n        var xVals = this.readSync(x.dataId);\n        var wVals = this.readSync(filter.dataId);\n        var yVals = y.values;\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            var xOffset1 = b * x.strides[0];\n            var yOffset1 = b * y.strides[0];\n            for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                var yOffset2 = yOffset1 + yR * y.strides[1];\n                var xRCorner = yR * convInfo.strideHeight - padLeft;\n                for (var wR = 0; wR < filterHeight; ++wR) {\n                    var xR = xRCorner + wR * dilationHeight;\n                    if (xR < 0 || xR >= convInfo.inHeight) {\n                        continue;\n                    }\n                    var wOffset1 = wR * filter.strides[0];\n                    var xOffset2 = xOffset1 + xR * x.strides[1];\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var yOffset3 = yOffset2 + yC * y.strides[2];\n                        var xCCorner = yC * convInfo.strideWidth - padTop;\n                        for (var wC = 0; wC < filterWidth; ++wC) {\n                            var xC = xCCorner + wC * dilationWidth;\n                            if (xC < 0 || xC >= convInfo.inWidth) {\n                                continue;\n                            }\n                            var wOffset2 = wOffset1 + wC * filter.strides[1];\n                            var xOffset3 = xOffset2 + xC * convInfo.inChannels;\n                            var yOffset4 = yOffset3;\n                            var wOffset3 = wOffset2;\n                            for (var d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                                var xVal = xVals[xOffset3 + d1];\n                                for (var q = 0; q < chMul; ++q) {\n                                    yVals[yOffset4 + q] += xVal * wVals[wOffset3 + q];\n                                }\n                                yOffset4 += chMul;\n                                wOffset3 += chMul;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return y.toTensor();\n    };\n    MathBackendCPU.prototype.depthwiseConv2DDerInput = function (dy, filter, convInfo) {\n        cpu_util_1.assertNotComplex([dy, filter], 'depthwiseConv2DDerInput');\n        var dx = ops.buffer(convInfo.inShape, 'float32');\n        var dxValues = dx.values;\n        var _a = dx.strides, dxS0 = _a[0], dxS1 = _a[1], dxS2 = _a[2];\n        var dyValues = this.readSync(dy.dataId);\n        var _b = dy.strides, dyS0 = _b[0], dyS1 = _b[1], dyS2 = _b[2];\n        var fltValues = this.readSync(filter.dataId);\n        var _c = filter.strides, fltS0 = _c[0], fltS1 = _c[1], fltS2 = _c[2];\n        var batchSize = convInfo.batchSize, filterHeight = convInfo.filterHeight, filterWidth = convInfo.filterWidth, inChannels = convInfo.inChannels, inHeight = convInfo.inHeight, inWidth = convInfo.inWidth, outChannels = convInfo.outChannels, outHeight = convInfo.outHeight, outWidth = convInfo.outWidth, strideHeight = convInfo.strideHeight, strideWidth = convInfo.strideWidth;\n        var topPad = filterHeight - 1 - convInfo.padInfo.top;\n        var leftPad = filterWidth - 1 - convInfo.padInfo.left;\n        var chMul = outChannels / inChannels;\n        for (var b = 0; b < batchSize; ++b) {\n            for (var d1 = 0; d1 < inChannels; ++d1) {\n                for (var xR = 0; xR < inHeight; ++xR) {\n                    var xRCorner = xR - topPad;\n                    var xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n                    var yRMax = Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n                    for (var xC = 0; xC < inWidth; ++xC) {\n                        var xCCorner = xC - leftPad;\n                        var xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n                        var yCMax = Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n                        var dotProd = 0;\n                        for (var yR = xRMin; yR < yRMax; ++yR) {\n                            var wR = yR * strideHeight - xRCorner;\n                            for (var yC = xCMin; yC < yCMax; ++yC) {\n                                var wC = yC * strideWidth - xCCorner;\n                                var dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n                                var fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                                    fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n                                for (var dm = 0; dm < chMul; ++dm) {\n                                    var d2 = d1 * chMul + dm;\n                                    var pixel = dyValues[dyOffset + d2];\n                                    var weight = fltValues[fltOffset + dm];\n                                    dotProd += pixel * weight;\n                                }\n                            }\n                        }\n                        dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.depthwiseConv2DDerFilter = function (x, dy, convInfo) {\n        cpu_util_1.assertNotComplex([x, dy], 'depthwiseConv2DDerFilter');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dW = ops.buffer(convInfo.filterShape, 'float32');\n        var leftPad = convInfo.padInfo.left;\n        var topPad = convInfo.padInfo.top;\n        var chMul = convInfo.outChannels / convInfo.inChannels;\n        var xBuf = this.bufferSync(x);\n        var dyBuf = this.bufferSync(dy);\n        for (var wR = 0; wR < filterHeight; ++wR) {\n            var yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n            var yRMax = Math.min(convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n            for (var wC = 0; wC < filterWidth; ++wC) {\n                var yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n                var yCMax = Math.min(convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n                for (var d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                    var d1 = Math.trunc(d2 / chMul);\n                    var dm = d2 % chMul;\n                    var dotProd = 0;\n                    for (var b = 0; b < convInfo.batchSize; ++b) {\n                        for (var yR = yRMin; yR < yRMax; ++yR) {\n                            var xR = wR + yR * strideHeight - topPad;\n                            for (var yC = yCMin; yC < yCMax; ++yC) {\n                                var xC = wC + yC * strideWidth - leftPad;\n                                dotProd += xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n                            }\n                        }\n                    }\n                    dW.set(dotProd, wR, wC, d1, dm);\n                }\n            }\n        }\n        return dW.toTensor();\n    };\n    MathBackendCPU.prototype.tile = function (x, reps) {\n        cpu_util_1.assertNotComplex(x, 'tile');\n        return tile_impl_1.tile(this.bufferSync(x), reps);\n    };\n    MathBackendCPU.prototype.pad = function (x, paddings, constantValue) {\n        cpu_util_1.assertNotComplex(x, 'pad');\n        var outShape = paddings.map(function (p, i) { return p[0] /* beforePad */ + x.shape[i] + p[1]; } /* afterPad */);\n        var start = paddings.map(function (p) { return p[0]; });\n        var xBuffer = this.bufferSync(x);\n        var buffer = ops.buffer(outShape, x.dtype);\n        if (constantValue !== 0) {\n            buffer.values.fill(constantValue);\n        }\n        for (var i = 0; i < x.size; i++) {\n            var coords = xBuffer.indexToLoc(i);\n            var outCoords = coords.map(function (c, i) { return c + start[i]; });\n            buffer.set.apply(buffer, [xBuffer.get.apply(xBuffer, coords)].concat(outCoords));\n        }\n        return buffer.toTensor();\n    };\n    MathBackendCPU.prototype.transpose = function (x, perm) {\n        cpu_util_1.assertNotComplex(x, 'transpose');\n        var newShape = new Array(x.rank);\n        for (var i = 0; i < newShape.length; i++) {\n            newShape[i] = x.shape[perm[i]];\n        }\n        var values = this.readSync(x.dataId);\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = this.bufferSync(x);\n        for (var i = 0; i < x.size; ++i) {\n            var loc = xBuf.indexToLoc(i);\n            // Permute location.\n            var newLoc = new Array(loc.length);\n            for (var i_1 = 0; i_1 < newLoc.length; i_1++) {\n                newLoc[i_1] = loc[perm[i_1]];\n            }\n            var newIndex = result.locToIndex(newLoc);\n            result.values[newIndex] = values[i];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.gather = function (x, indices, axis) {\n        cpu_util_1.assertNotComplex([x, indices], 'gather');\n        var newShape = x.shape.slice();\n        var indicesValues = this.readSync(indices.dataId);\n        newShape[axis] = indicesValues.length;\n        var result = ops_1.buffer(newShape, x.dtype);\n        var xBuf = this.bufferSync(x);\n        for (var i = 0; i < result.size; ++i) {\n            var newLoc = result.indexToLoc(i);\n            var originalLoc = newLoc.slice();\n            originalLoc[axis] = indicesValues[newLoc[axis]];\n            var originalIndex = xBuf.locToIndex(originalLoc);\n            result.values[i] = xBuf.values[originalIndex];\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.batchToSpaceND = function (x, blockShape, crops) {\n        cpu_util_1.assertNotComplex([x], 'batchToSpaceND');\n        var prod = blockShape.reduce(function (a, b) { return a * b; });\n        var reshaped = array_ops_util.getReshaped(x.shape, blockShape, prod);\n        var permuted = array_ops_util.getPermuted(reshaped.length, blockShape.length);\n        var reshapedPermuted = array_ops_util.getReshapedPermuted(x.shape, blockShape, prod);\n        var sliceBeginCoords = array_ops_util.getSliceBeginCoords(crops, blockShape.length);\n        var sliceSize = array_ops_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n        return x.reshape(reshaped)\n            .transpose(permuted)\n            .reshape(reshapedPermuted)\n            .slice(sliceBeginCoords, sliceSize);\n    };\n    MathBackendCPU.prototype.spaceToBatchND = function (x, blockShape, paddings) {\n        cpu_util_1.assertNotComplex([x], 'spaceToBatchND');\n        var prod = blockShape.reduce(function (a, b) { return a * b; });\n        var completePaddings = [[0, 0]];\n        completePaddings.push.apply(completePaddings, paddings);\n        for (var i = 1 + blockShape.length; i < x.shape.length; ++i) {\n            completePaddings.push([0, 0]);\n        }\n        var paddedX = x.pad(completePaddings);\n        var reshapedPaddedShape = array_ops_util.getReshaped(paddedX.shape, blockShape, prod, false);\n        var permutedReshapedPaddedPermutation = array_ops_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n        var flattenShape = array_ops_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n        return paddedX.reshape(reshapedPaddedShape)\n            .transpose(permutedReshapedPaddedPermutation)\n            .reshape(flattenShape);\n    };\n    MathBackendCPU.prototype.pool = function (x, convInfo, poolType) {\n        cpu_util_1.assertNotComplex(x, 'pool');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var initialValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n            Number.POSITIVE_INFINITY);\n        var xValues = this.readSync(x.dataId);\n        var output = ops.buffer(convInfo.outShape, x.dtype);\n        var outputVals = output.values;\n        var outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3];\n        var outputRowStrides = convInfo.outShape[2] * convInfo.outShape[3];\n        var outputColStrides = convInfo.outShape[3];\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            var outputBatchOffset = b * outputBatchStrides;\n            var inputBatchOffset = b * x.strides[0];\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n                    var outputRowOffset = outputBatchOffset + yR * outputRowStrides;\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = Math.max(0, xCCorner);\n                        var xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n                        var minMaxValue = initialValue;\n                        var avgValue = 0;\n                        var count = 0;\n                        for (var xR = xRMin; xR < xRMax; xR += dilationHeight) {\n                            var xROffset = inputBatchOffset + xR * x.strides[1];\n                            for (var xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                                var xCOffset = xROffset + xC * x.strides[2];\n                                var pixel = xValues[xCOffset + d];\n                                if ((poolType === 'max' && pixel > minMaxValue)) {\n                                    minMaxValue = pixel;\n                                }\n                                else if (poolType === 'avg') {\n                                    avgValue += pixel;\n                                    count++;\n                                }\n                            }\n                            if (isNaN(minMaxValue)) {\n                                break;\n                            }\n                        }\n                        var outputOffset = outputRowOffset + yC * outputColStrides + d;\n                        outputVals[outputOffset] =\n                            poolType === 'avg' ? avgValue / count : minMaxValue;\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.maxPool = function (x, convInfo) {\n        return this.pool(x, convInfo, 'max');\n    };\n    MathBackendCPU.prototype.maxPoolPositions = function (x, convInfo) {\n        var maxPositions = ops.buffer(convInfo.outShape, 'int32');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var xBuf = this.bufferSync(x);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var yR = 0; yR < convInfo.outHeight; ++yR) {\n                    var xRCorner = yR * strideHeight - padTop;\n                    var xRMin = xRCorner;\n                    while (xRMin < 0) {\n                        xRMin += dilationHeight;\n                    }\n                    // const xRMin = Math.max(0, xRCorner);\n                    var xRMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n                    for (var yC = 0; yC < convInfo.outWidth; ++yC) {\n                        var xCCorner = yC * strideWidth - padLeft;\n                        var xCMin = xCCorner;\n                        while (xCMin < 0) {\n                            xCMin += dilationWidth;\n                        }\n                        var xCMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n                        var maxValue = Number.NEGATIVE_INFINITY;\n                        var maxPosition = -1;\n                        for (var xR = xRMin; xR < xRMax; xR += dilationHeight) {\n                            var wR = xR - xRCorner;\n                            for (var xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                                var wC = xC - xCCorner;\n                                var pixel = xBuf.get(b, xR, xC, d);\n                                if (pixel > maxValue) {\n                                    maxValue = pixel;\n                                    maxPosition = wR * effectiveFilterWidth + wC;\n                                }\n                            }\n                        }\n                        maxPositions.set(maxPosition, b, yR, yC, d);\n                    }\n                }\n            }\n        }\n        return maxPositions.toTensor();\n    };\n    MathBackendCPU.prototype.maxPoolBackprop = function (dy, x, y, convInfo) {\n        cpu_util_1.assertNotComplex([x, y], 'maxPoolBackprop');\n        var maxPositions = this.maxPoolPositions(x, convInfo);\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var maxPosBuf = this.bufferSync(maxPositions);\n        var dyBuf = this.bufferSync(dy);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        // Shader code begins.\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var maxPos = effectiveFilterHeight * effectiveFilterWidth -\n                                    1 - maxPosBuf.get(b, dyR, dyC, d);\n                                var curPos = wR * effectiveFilterWidth + wC;\n                                var mask = maxPos === curPos ? 1 : 0;\n                                if (mask === 0) {\n                                    continue;\n                                }\n                                var pixel = dyBuf.get(b, dyR, dyC, d);\n                                dotProd += pixel * mask;\n                            }\n                        }\n                        dx.set(dotProd, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.avgPoolBackprop = function (dy, x, convInfo) {\n        cpu_util_1.assertNotComplex([dy, x], 'avgPoolBackprop');\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var avgMultiplier = 1 / (filterHeight * filterWidth);\n        var dyBuf = this.bufferSync(dy);\n        for (var b = 0; b < convInfo.batchSize; ++b) {\n            for (var d = 0; d < convInfo.inChannels; ++d) {\n                for (var dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n                    for (var dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n                        // Shader code begins.\n                        var dyRCorner = dxR - padTop;\n                        var dyCCorner = dxC - padLeft;\n                        var dotProd = 0;\n                        for (var wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n                            var dyR = (dyRCorner + wR) / strideHeight;\n                            if (dyR < 0 || dyR >= convInfo.outHeight ||\n                                Math.floor(dyR) !== dyR) {\n                                continue;\n                            }\n                            for (var wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                                var dyC = (dyCCorner + wC) / strideWidth;\n                                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                                    Math.floor(dyC) !== dyC) {\n                                    continue;\n                                }\n                                var pixel = dyBuf.get(b, dyR, dyC, d);\n                                dotProd += pixel;\n                            }\n                        }\n                        dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.pool3d = function (x, convInfo, poolType) {\n        cpu_util_1.assertNotComplex(x, 'pool3d');\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = convInfo.padInfo.front;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var initialValue = (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n            Number.POSITIVE_INFINITY);\n        var xValues = this.readSync(x.dataId);\n        var output = ops.buffer(convInfo.outShape, x.dtype);\n        var outputVals = output.values;\n        var outputBatchStrides = convInfo.outShape[1] * convInfo.outShape[2] *\n            convInfo.outShape[3] * convInfo.outShape[4];\n        var outputDepthStrides = convInfo.outShape[2] * convInfo.outShape[3] * convInfo.outShape[4];\n        var outputRowStrides = convInfo.outShape[3] * convInfo.outShape[4];\n        var outputColStrides = convInfo.outShape[4];\n        for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n            var outputBatchOffset = batch * outputBatchStrides;\n            var inputBatchOffset = batch * x.strides[0];\n            for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n                for (var yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n                    var xDepthCorner = yDepth * strideDepth - padFront;\n                    var xDepthMin = xDepthCorner;\n                    while (xDepthMin < 0) {\n                        xDepthMin += dilationDepth;\n                    }\n                    var xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n                    var outputDepthOffset = outputBatchOffset + yDepth * outputDepthStrides;\n                    for (var yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n                        var xRowCorner = yRow * strideHeight - padTop;\n                        var xRowMin = xRowCorner;\n                        while (xRowMin < 0) {\n                            xRowMin += dilationHeight;\n                        }\n                        var xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n                        var outputRowOffset = outputDepthOffset + yRow * outputRowStrides;\n                        for (var yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n                            var xColCorner = yCol * strideWidth - padLeft;\n                            var xColMin = xColCorner;\n                            while (xColMin < 0) {\n                                xColMin += dilationWidth;\n                            }\n                            var xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n                            // Shader code begins\n                            var outputColOffset = outputRowOffset + yCol * outputColStrides;\n                            var minMaxValue = initialValue;\n                            var avgValue = 0;\n                            var count = 0;\n                            for (var xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n                                var xDepthOffset = inputBatchOffset + xDepth * x.strides[1];\n                                for (var xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                                    var xRowOffset = xDepthOffset + xRow * x.strides[2];\n                                    for (var xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                                        var xColOffset = xRowOffset + xCol * x.strides[3];\n                                        var pixel = xValues[xColOffset + channel];\n                                        if ((poolType === 'max' && pixel > minMaxValue)) {\n                                            minMaxValue = pixel;\n                                        }\n                                        else if (poolType === 'avg') {\n                                            avgValue += pixel;\n                                            count++;\n                                        }\n                                        if (isNaN(minMaxValue)) {\n                                            break;\n                                        }\n                                    }\n                                    if (isNaN(minMaxValue)) {\n                                        break;\n                                    }\n                                }\n                                if (isNaN(minMaxValue)) {\n                                    break;\n                                }\n                            }\n                            var outputOffset = outputColOffset + channel;\n                            outputVals[outputOffset] =\n                                poolType === 'avg' ? avgValue / count : minMaxValue;\n                        }\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.avgPool3d = function (x, convInfo) {\n        cpu_util_1.assertNotComplex(x, 'avgPool3d');\n        return this.pool3d(x, convInfo, 'avg').toFloat();\n    };\n    MathBackendCPU.prototype.avgPool3dBackprop = function (dy, x, convInfo) {\n        cpu_util_1.assertNotComplex([dy, x], 'avgPool3dBackprop');\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var filterDepth = convInfo.filterDepth;\n        var filterHeight = convInfo.filterHeight;\n        var filterWidth = convInfo.filterWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n        var dyBuf = this.bufferSync(dy);\n        for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n            for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n                for (var dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n                    for (var dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n                        for (var dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n                            // Shader code begins.\n                            var dyDepthCorner = dxDepth - padFront;\n                            var dyRowCorner = dxRow - padTop;\n                            var dyColCorner = dxCol - padLeft;\n                            var dotProd = 0;\n                            for (var wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n                                var dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n                                if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                                    Math.floor(dyDepth) !== dyDepth) {\n                                    continue;\n                                }\n                                for (var wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                                    var dyRow = (dyRowCorner + wRow) / strideHeight;\n                                    if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                                        Math.floor(dyRow) !== dyRow) {\n                                        continue;\n                                    }\n                                    for (var wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                                        var dyCol = (dyColCorner + wCol) / strideWidth;\n                                        if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                                            Math.floor(dyCol) !== dyCol) {\n                                            continue;\n                                        }\n                                        var pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                        dotProd += pixel;\n                                    }\n                                }\n                            }\n                            dx.set(dotProd * avgMultiplier, batch, dxDepth, dxRow, dxCol, channel);\n                        }\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.maxPool3d = function (x, convInfo) {\n        cpu_util_1.assertNotComplex(x, 'maxPool3d');\n        return this.pool3d(x, convInfo, 'max').toFloat();\n    };\n    MathBackendCPU.prototype.maxPool3dPositions = function (x, convInfo) {\n        var maxPositions = ops.buffer(convInfo.outShape, 'int32');\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = convInfo.padInfo.front;\n        var padTop = convInfo.padInfo.top;\n        var padLeft = convInfo.padInfo.left;\n        var xBuf = this.bufferSync(x);\n        for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n            for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n                for (var yDepth = 0; yDepth < convInfo.outDepth; ++yDepth) {\n                    var xDepthCorner = yDepth * strideDepth - padFront;\n                    var xDepthMin = xDepthCorner;\n                    while (xDepthMin < 0) {\n                        xDepthMin += dilationDepth;\n                    }\n                    var xDepthMax = Math.min(convInfo.inDepth, effectiveFilterDepth + xDepthCorner);\n                    for (var yRow = 0; yRow < convInfo.outHeight; ++yRow) {\n                        var xRowCorner = yRow * strideHeight - padTop;\n                        var xRowMin = xRowCorner;\n                        while (xRowMin < 0) {\n                            xRowMin += dilationHeight;\n                        }\n                        var xRowMax = Math.min(convInfo.inHeight, effectiveFilterHeight + xRowCorner);\n                        for (var yCol = 0; yCol < convInfo.outWidth; ++yCol) {\n                            var xColCorner = yCol * strideWidth - padLeft;\n                            var xColMin = xColCorner;\n                            while (xColMin < 0) {\n                                xColMin += dilationWidth;\n                            }\n                            var xColMax = Math.min(convInfo.inWidth, effectiveFilterWidth + xColCorner);\n                            // Shader code begins\n                            var maxValue = Number.NEGATIVE_INFINITY;\n                            var maxPosition = -1;\n                            for (var xDepth = xDepthMin; xDepth < xDepthMax; xDepth += dilationDepth) {\n                                var wDepth = xDepth - xDepthCorner;\n                                for (var xRow = xRowMin; xRow < xRowMax; xRow += dilationHeight) {\n                                    var wRow = xRow - xRowCorner;\n                                    for (var xCol = xColMin; xCol < xColMax; xCol += dilationWidth) {\n                                        var wCol = xCol - xColCorner;\n                                        var pixel = xBuf.get(batch, xDepth, xRow, xCol, channel);\n                                        if (pixel >= maxValue) {\n                                            maxValue = pixel;\n                                            maxPosition = wDepth * effectiveFilterHeight *\n                                                effectiveFilterWidth +\n                                                wRow * effectiveFilterHeight + wCol;\n                                        }\n                                    }\n                                }\n                            }\n                            maxPositions.set(maxPosition, batch, yDepth, yRow, yCol, channel);\n                        }\n                    }\n                }\n            }\n        }\n        return maxPositions.toTensor();\n    };\n    MathBackendCPU.prototype.maxPool3dBackprop = function (dy, x, y, convInfo) {\n        cpu_util_1.assertNotComplex([x, y], 'maxPool3dBackprop');\n        var maxPositions = this.maxPool3dPositions(x, convInfo);\n        var strideDepth = convInfo.strideDepth;\n        var strideHeight = convInfo.strideHeight;\n        var strideWidth = convInfo.strideWidth;\n        var dilationDepth = convInfo.dilationDepth;\n        var dilationHeight = convInfo.dilationHeight;\n        var dilationWidth = convInfo.dilationWidth;\n        var effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        var effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        var effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        var padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        var padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        var padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        var dx = ops.buffer(x.shape, 'float32');\n        var maxPosBuf = this.bufferSync(maxPositions);\n        var dyBuf = this.bufferSync(dy);\n        for (var batch = 0; batch < convInfo.batchSize; ++batch) {\n            for (var channel = 0; channel < convInfo.inChannels; ++channel) {\n                for (var dxDepth = 0; dxDepth < convInfo.inDepth; ++dxDepth) {\n                    for (var dxRow = 0; dxRow < convInfo.inHeight; ++dxRow) {\n                        for (var dxCol = 0; dxCol < convInfo.inWidth; ++dxCol) {\n                            // Shader code begins\n                            var dyDepthCorner = dxDepth - padFront;\n                            var dyRowCorner = dxRow - padTop;\n                            var dyColCorner = dxCol - padLeft;\n                            var dotProd = 0;\n                            for (var wDepth = 0; wDepth < effectiveFilterDepth; wDepth += dilationDepth) {\n                                var dyDepth = (dyDepthCorner + wDepth) / strideDepth;\n                                if (dyDepth < 0 || dyDepth >= convInfo.outDepth ||\n                                    Math.floor(dyDepth) !== dyDepth) {\n                                    continue;\n                                }\n                                for (var wRow = 0; wRow < effectiveFilterHeight; wRow += dilationHeight) {\n                                    var dyRow = (dyRowCorner + wRow) / strideHeight;\n                                    if (dyRow < 0 || dyRow >= convInfo.outHeight ||\n                                        Math.floor(dyRow) !== dyRow) {\n                                        continue;\n                                    }\n                                    for (var wCol = 0; wCol < effectiveFilterWidth; wCol += dilationWidth) {\n                                        var dyCol = (dyColCorner + wCol) / strideWidth;\n                                        if (dyCol < 0 || dyCol >= convInfo.outWidth ||\n                                            Math.floor(dyCol) !== dyCol) {\n                                            continue;\n                                        }\n                                        var maxPos = effectiveFilterDepth *\n                                            effectiveFilterHeight * effectiveFilterWidth -\n                                            1 -\n                                            maxPosBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                        var curPos = wDepth * effectiveFilterHeight * effectiveFilterWidth +\n                                            wRow * effectiveFilterWidth + wCol;\n                                        var mask = maxPos === curPos ? 1 : 0;\n                                        if (mask === 0) {\n                                            continue;\n                                        }\n                                        var pixel = dyBuf.get(batch, dyDepth, dyRow, dyCol, channel);\n                                        dotProd += pixel * mask;\n                                    }\n                                }\n                            }\n                            dx.set(dotProd, batch, dxDepth, dxRow, dxCol, channel);\n                        }\n                    }\n                }\n            }\n        }\n        return dx.toTensor();\n    };\n    MathBackendCPU.prototype.cast = function (x, dtype) {\n        return backend_util.castTensor(x, dtype, this);\n    };\n    MathBackendCPU.prototype.reshape = function (x, shape) {\n        return backend_util.reshapeTensor(x, shape);\n    };\n    MathBackendCPU.prototype.avgPool = function (x, convInfo) {\n        cpu_util_1.assertNotComplex(x, 'avgPool');\n        return this.pool(x, convInfo, 'avg').toFloat();\n    };\n    MathBackendCPU.prototype.resizeBilinear = function (x, newHeight, newWidth, alignCorners) {\n        cpu_util_1.assertNotComplex(x, 'resizeBilinear');\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var xValues = this.readSync(x.dataId);\n        var result = new Float32Array(util.sizeFromShape([batch, newHeight, newWidth, numChannels]));\n        var effectiveInputSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        var effectiveOutputSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        var outputIdx = 0;\n        var effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n        var effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n        for (var b = 0; b < batch; b++) {\n            for (var r = 0; r < newHeight; r++) {\n                var sourceFracRow = effectiveRowSizeRatio * r;\n                var sourceRowFloor = Math.floor(sourceFracRow);\n                var rowFrac = sourceFracRow - sourceRowFloor;\n                var sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n                var topRowOffset = b * x.strides[0] + sourceRowFloor * x.strides[1];\n                var botRowOffset = b * x.strides[0] + sourceRowCeil * x.strides[1];\n                for (var c = 0; c < newWidth; c++) {\n                    var sourceFracCol = effectiveColSizeRatio * c;\n                    var sourceColFloor = Math.floor(sourceFracCol);\n                    var colFrac = sourceFracCol - sourceColFloor;\n                    var sourceColCeil = Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n                    var topLeftOffest = topRowOffset + sourceColFloor * x.strides[2];\n                    var botLeftOffset = botRowOffset + sourceColFloor * x.strides[2];\n                    var topRightOffset = topRowOffset + sourceColCeil * x.strides[2];\n                    var botRightOffest = botRowOffset + sourceColCeil * x.strides[2];\n                    for (var d = 0; d < numChannels; d++) {\n                        // Begin shader.\n                        // Compute the fractional index of the source.\n                        var topLeft = xValues[topLeftOffest + d];\n                        var bottomLeft = xValues[botLeftOffset + d];\n                        var topRight = xValues[topRightOffset + d];\n                        var bottomRight = xValues[botRightOffest + d];\n                        var top_1 = topLeft + (topRight - topLeft) * colFrac;\n                        var bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n                        var newValue = top_1 + (bottom - top_1) * rowFrac;\n                        result[outputIdx++] = newValue;\n                    }\n                }\n            }\n        }\n        return ops.tensor(result, [batch, newHeight, newWidth, numChannels]);\n    };\n    MathBackendCPU.prototype.resizeBilinearBackprop = function (dy, x, alignCorners) {\n        cpu_util_1.assertNotComplex([dy, x], 'resizeBilinearBackprop');\n        var _a = x.shape, batch = _a[0], xHeight = _a[1], xWidth = _a[2], depth = _a[3];\n        var _b = dy.shape, yHeight = _b[1], yWidth = _b[2];\n        var output = new Float32Array(batch * xHeight * xWidth * depth);\n        // In the backwards pass, we want to find the pixels that were generated\n        // for each pixel in the input image the forward pass and add the\n        // corresponding coefficient from dy to the gradient (with some\n        // interpolation).\n        var effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        var effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        var heightScale = effectiveXSize[0] / effectiveYSize[0];\n        var widthScale = effectiveXSize[1] / effectiveYSize[1];\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/3039375c86a5bbc9610c7725dcaa95d635f87ba2/tensorflow/core/kernels/resize_bilinear_op.cc#L275\n        var dyValues = this.readSync(dy.dataId);\n        var offset = 0;\n        for (var b = 0; b < batch; b++) {\n            var bOffset = b * x.strides[0];\n            for (var r = 0; r < yHeight; r++) {\n                var dxR = r * heightScale;\n                var topDxRIndex = Math.floor(dxR);\n                var bottomDxRIndex = Math.min(Math.ceil(dxR), xHeight - 1);\n                var topDxROffset = bOffset + topDxRIndex * x.strides[1];\n                var bottomDxROffset = bOffset + bottomDxRIndex * x.strides[1];\n                var dxRLerp = dxR - topDxRIndex;\n                var inverseDxRLerp = 1.0 - dxRLerp;\n                for (var c = 0; c < yWidth; c++) {\n                    var dxC = c * widthScale;\n                    var leftDxCIndex = Math.floor(dxC);\n                    var rightDxCIndex = Math.min(Math.ceil(dxC), xWidth - 1);\n                    var dxCLerp = dxC - leftDxCIndex;\n                    var inverseDxCLerp = 1.0 - dxCLerp;\n                    var topLeftRCOffset = topDxROffset + leftDxCIndex * x.strides[2];\n                    var topRightRCOffset = topDxROffset + rightDxCIndex * x.strides[2];\n                    var bottomLeftRCOffset = bottomDxROffset + leftDxCIndex * x.strides[2];\n                    var bottomRightRCOffset = bottomDxROffset + rightDxCIndex * x.strides[2];\n                    var inverseDxRLerpTimesInverseDxCLerp = inverseDxRLerp * inverseDxCLerp;\n                    var inverseDxRLerpTimesDxCLerp = inverseDxRLerp * dxCLerp;\n                    var dxRLerpTimesInverseDxCLerp = dxRLerp * inverseDxCLerp;\n                    var dxRLerpTimesDxCLerp = dxRLerp * dxCLerp;\n                    for (var d = 0; d < depth; d++) {\n                        var dyVal = dyValues[offset++];\n                        output[topLeftRCOffset + d] +=\n                            dyVal * inverseDxRLerpTimesInverseDxCLerp;\n                        output[topRightRCOffset + d] += dyVal * inverseDxRLerpTimesDxCLerp;\n                        output[bottomLeftRCOffset + d] +=\n                            dyVal * dxRLerpTimesInverseDxCLerp;\n                        output[bottomRightRCOffset + d] += dyVal * dxRLerpTimesDxCLerp;\n                    }\n                }\n            }\n        }\n        return ops.tensor4d(output, [batch, xWidth, xHeight, depth], x.dtype);\n    };\n    MathBackendCPU.prototype.resizeNearestNeighbor = function (x, newHeight, newWidth, alignCorners) {\n        cpu_util_1.assertNotComplex(x, 'resizeNearestNeighbor');\n        var _a = x.shape, batch = _a[0], oldHeight = _a[1], oldWidth = _a[2], numChannels = _a[3];\n        var xValues = this.readSync(x.dataId);\n        var output = new Float32Array(batch * newHeight * newWidth * numChannels);\n        var effectiveInputSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        var effectiveOutputSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        var effectiveRowSizeRatio = effectiveInputSize[0] / effectiveOutputSize[0];\n        var effectiveColSizeRatio = effectiveInputSize[1] / effectiveOutputSize[1];\n        var outputOffset = 0;\n        for (var b = 0; b < batch; b++) {\n            var batchOffset = b * x.strides[0];\n            for (var r = 0; r < newHeight; r++) {\n                var sourceFracRow = effectiveRowSizeRatio * r;\n                var sourceNearestRow = Math.min(oldHeight - 1, alignCorners ? Math.round(sourceFracRow) :\n                    Math.floor(sourceFracRow));\n                var rowOffset = batchOffset + sourceNearestRow * x.strides[1];\n                for (var c = 0; c < newWidth; c++) {\n                    var sourceFracCol = effectiveColSizeRatio * c;\n                    var sourceNearestCol = Math.min(oldWidth - 1, alignCorners ? Math.round(sourceFracCol) :\n                        Math.floor(sourceFracCol));\n                    var colOffset = rowOffset + sourceNearestCol * x.strides[2];\n                    for (var d = 0; d < numChannels; d++) {\n                        // Begin shader.\n                        // Compute the fractional index of the source.\n                        var newVal = xValues[colOffset + d];\n                        output[outputOffset++] = newVal;\n                    }\n                }\n            }\n        }\n        return ops.tensor(output, [batch, newHeight, newWidth, numChannels], x.dtype);\n    };\n    MathBackendCPU.prototype.resizeNearestNeighborBackprop = function (dy, x, alignCorners) {\n        cpu_util_1.assertNotComplex([dy, x], 'resizeNearestNeighborBackprop');\n        var _a = x.shape, batch = _a[0], xHeight = _a[1], xWidth = _a[2], depth = _a[3];\n        var _b = dy.shape, yHeight = _b[1], yWidth = _b[2];\n        var output = new Float32Array(batch * xHeight * xWidth * depth);\n        var dyValues = this.readSync(dy.dataId);\n        // In the backwards pass, we want to find the pixels that were generated\n        // for each pixel in the input image the forward pass\n        var effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        var effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        var heightScale = effectiveXSize[0] / effectiveYSize[0];\n        var widthScale = effectiveXSize[1] / effectiveYSize[1];\n        var invHeightScale = 1 / heightScale;\n        var invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        var winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        var winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        // Loop over the output space.\n        for (var b = 0; b < batch; b++) {\n            var batchOffset = b * x.strides[0];\n            for (var r = 0; r < xHeight; r++) {\n                var rowOffset = batchOffset + r * x.strides[1];\n                // Compute bounds for where in dy we will look\n                var startRLerp = Math.floor(r * invHeightScale);\n                var startDyR = Math.floor(startRLerp - (winHeight / 2));\n                for (var c = 0; c < xWidth; c++) {\n                    var colOffset = rowOffset + c * x.strides[2];\n                    // Compute bounds for where in dy we will look\n                    var startCLerp = Math.floor(c * invWidthScale);\n                    var startDyC = Math.floor(startCLerp - (winWidth / 2));\n                    for (var d = 0; d < depth; d++) {\n                        var accum = 0;\n                        // loop over dy\n                        for (var dyRIndex = 0; dyRIndex < winHeight; dyRIndex++) {\n                            var dyR = dyRIndex + startDyR;\n                            // Guard against the window exceeding the bounds of dy\n                            if (dyR < 0 || dyR >= yHeight) {\n                                continue;\n                            }\n                            var dyROffset = batchOffset + dyR * dy.strides[1];\n                            var sourceFracRow = dyR * heightScale;\n                            var sourceNearestRow = Math.min(xHeight - 1, alignCorners ? Math.round(sourceFracRow) :\n                                Math.floor(sourceFracRow));\n                            if (r !== sourceNearestRow) {\n                                continue;\n                            }\n                            for (var dyCIndex = 0; dyCIndex < winWidth; dyCIndex++) {\n                                var dyC = dyCIndex + startDyC;\n                                // Guard against the window exceeding the bounds of dy\n                                if (dyC < 0 || dyC >= yWidth) {\n                                    continue;\n                                }\n                                var dyCOffset = dyROffset + dyC * dy.strides[2];\n                                var sourceFracCol = dyC * widthScale;\n                                var sourceNearestCol = Math.min(xWidth - 1, alignCorners ? Math.round(sourceFracCol) :\n                                    Math.floor(sourceFracCol));\n                                if (c === sourceNearestCol) {\n                                    accum += dyValues[dyCOffset + d];\n                                }\n                            }\n                        }\n                        output[colOffset + d] = accum;\n                    }\n                }\n            }\n        }\n        return ops.tensor4d(output, x.shape, x.dtype);\n    };\n    MathBackendCPU.prototype.batchNormalization = function (x, mean, variance, varianceEpsilon, scale, offset) {\n        cpu_util_1.assertNotComplex([x, mean, variance, scale, offset], 'batchNorm');\n        var xVals = this.readSync(x.dataId);\n        var mVals = this.readSync(mean.dataId);\n        var varVals = this.readSync(variance.dataId);\n        var sVals = scale ? this.readSync(scale.dataId) :\n            new Float32Array([1]);\n        var offVals = offset ? this.readSync(offset.dataId) :\n            new Float32Array([0]);\n        var outVals = new Float32Array(xVals.length);\n        var offValsLength = offVals.length;\n        var sValsLength = sVals.length;\n        var varValsLength = varVals.length;\n        var mValsLength = mVals.length;\n        var offi = 0;\n        var mi = 0;\n        var si = 0;\n        var vi = 0;\n        for (var i = 0; i < xVals.length; ++i) {\n            outVals[i] = offVals[offi++] +\n                (xVals[i] - mVals[mi++]) * sVals[si++] /\n                    Math.sqrt(varVals[vi++] + varianceEpsilon);\n            if (offi >= offValsLength) {\n                offi = 0;\n            }\n            if (mi >= mValsLength) {\n                mi = 0;\n            }\n            if (si >= sValsLength) {\n                si = 0;\n            }\n            if (vi >= varValsLength) {\n                vi = 0;\n            }\n        }\n        return ops_1.tensor4d(outVals, x.shape);\n    };\n    MathBackendCPU.prototype.localResponseNormalization4D = function (x, depthRadius, bias, alpha, beta) {\n        cpu_util_1.assertNotComplex(x, 'localResponseNormalization4D');\n        var channels = x.shape[3];\n        var maxD = channels - 1;\n        var xValues = this.readSync(x.dataId);\n        var size = x.size;\n        var result = new Float32Array(size);\n        function sumAcrossChannels(offset) {\n            var currentChannel = offset % channels;\n            var beginSumOffset = offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n            var endSumOffset = offset - currentChannel +\n                Math.min(currentChannel + depthRadius, maxD);\n            var sum = 0.0;\n            for (; beginSumOffset <= endSumOffset; beginSumOffset++) {\n                var z = xValues[beginSumOffset];\n                sum += z * z;\n            }\n            return sum;\n        }\n        for (var offset = 0; offset < size; offset++) {\n            var sum = sumAcrossChannels(offset);\n            var val = xValues[offset] * Math.pow(bias + alpha * sum, -beta);\n            result[offset] = val;\n        }\n        return ops.tensor4d(result, x.shape);\n    };\n    MathBackendCPU.prototype.LRNGrad = function (dy, inputImage, outputImage, depthRadius, bias, alpha, beta) {\n        cpu_util_1.assertNotComplex(dy, 'LRNGrad');\n        var channels = dy.shape[3];\n        var dyValues = this.readSync(dy.dataId);\n        var inputImageValues = this.readSync(inputImage.dataId);\n        var outputImageValues = this.readSync(outputImage.dataId);\n        var result = new Float32Array(dy.size);\n        var size = dy.size;\n        for (var offset = 0; offset < size; offset++) {\n            var currentChannel = offset % channels;\n            var depthBegin = (offset - currentChannel) + Math.max(0, currentChannel - depthRadius);\n            var depthEnd = (offset - currentChannel) +\n                Math.min(channels, currentChannel + depthRadius + 1);\n            var norm = 0;\n            for (var k = depthBegin; k < depthEnd; k++) {\n                norm += Math.pow(inputImageValues[k], 2);\n            }\n            norm = alpha * norm + bias;\n            for (var k = depthBegin; k < depthEnd; k++) {\n                var dyi = -2 * alpha * beta * inputImageValues[k] *\n                    outputImageValues[offset] / norm;\n                if (offset === k) {\n                    dyi += Math.pow(norm, -beta);\n                }\n                dyi *= dyValues[offset];\n                result[k] += dyi;\n            }\n        }\n        return ops.tensor4d(result, dy.shape);\n    };\n    MathBackendCPU.prototype.multinomial = function (logits, normalized, numSamples, seed) {\n        cpu_util_1.assertNotComplex(logits, 'multinomial');\n        var probabilities = normalized ? logits : ops.softmax(logits);\n        var batchSize = probabilities.shape[0];\n        var numEvents = probabilities.shape[1];\n        var res = ops.zeros([batchSize, numSamples], 'int32');\n        var resVals = this.readSync(res.dataId);\n        var probVals = this.readSync(probabilities.dataId);\n        for (var b = 0; b < batchSize; ++b) {\n            var offset = b * numEvents;\n            // The cdf won't include the last event. It will be implicit if no other\n            // event happened.\n            var cdf = new Float32Array(numEvents - 1);\n            cdf[0] = probVals[offset];\n            for (var event_1 = 1; event_1 < cdf.length; ++event_1) {\n                cdf[event_1] = cdf[event_1 - 1] + probVals[offset + event_1];\n            }\n            var random = seedrandom.alea(seed.toString());\n            var outOffset = b * numSamples;\n            for (var sampleId = 0; sampleId < numSamples; ++sampleId) {\n                var r = random();\n                // Assume last event happened by default.\n                resVals[outOffset + sampleId] = cdf.length;\n                for (var event_2 = 0; event_2 < cdf.length; event_2++) {\n                    if (r < cdf[event_2]) {\n                        resVals[outOffset + sampleId] = event_2;\n                        break;\n                    }\n                }\n            }\n        }\n        return res;\n    };\n    MathBackendCPU.prototype.oneHot = function (indices, depth, onValue, offValue) {\n        cpu_util_1.assertNotComplex(indices, 'oneHot');\n        var res = new Float32Array(indices.size * depth);\n        res.fill(offValue);\n        var indicesVal = this.readSync(indices.dataId);\n        for (var event_3 = 0; event_3 < indices.size; ++event_3) {\n            if (indicesVal[event_3] >= 0 && indicesVal[event_3] < depth) {\n                res[event_3 * depth + indicesVal[event_3]] = onValue;\n            }\n        }\n        return ops.tensor2d(res, [indices.size, depth], 'int32');\n    };\n    MathBackendCPU.prototype.nonMaxSuppression = function (boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n        cpu_util_1.assertNotComplex(boxes, 'nonMaxSuppression');\n        var boxesVals = this.readSync(boxes.dataId);\n        var scoresVals = this.readSync(scores.dataId);\n        return non_max_suppression_impl_1.nonMaxSuppressionImpl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    };\n    MathBackendCPU.prototype.fft = function (x) {\n        return this.fftBatch(x, false);\n    };\n    MathBackendCPU.prototype.ifft = function (x) {\n        return this.fftBatch(x, true);\n    };\n    /**\n     * Calculate FFT of inner most elements of batch tensor.\n     */\n    MathBackendCPU.prototype.fftBatch = function (x, inverse) {\n        var batch = x.shape[0];\n        var innerDim = x.shape[1];\n        // Collects real and imaginary values separately.\n        var realResult = ops.buffer(x.shape, 'float32');\n        var imagResult = ops.buffer(x.shape, 'float32');\n        var real = ops.real(x).as2D(batch, innerDim);\n        var imag = ops.imag(x).as2D(batch, innerDim);\n        for (var b = 0; b < batch; b++) {\n            // TODO: Support slice ops for complex type.\n            var r = real.slice([b, 0], [1, innerDim]);\n            var i = imag.slice([b, 0], [1, innerDim]);\n            var input = ops.complex(r, i);\n            // Run FFT by batch element.\n            var res = this.readSync(this.fftImpl(input, inverse).dataId);\n            for (var d = 0; d < innerDim; d++) {\n                var c = complex_util.getComplexWithIndex(res, d);\n                realResult.values[b * innerDim + d] = c.real;\n                imagResult.values[b * innerDim + d] = c.imag;\n            }\n        }\n        var t = ops.complex(realResult.toTensor(), imagResult.toTensor());\n        return t.as2D(batch, innerDim);\n    };\n    MathBackendCPU.prototype.fftImpl = function (x, inverse) {\n        var x1D = x.as1D();\n        var n = x1D.size;\n        if (this.isExponentOf2(n)) {\n            var result = this.fftRadix2(x1D, n, inverse).as2D(x.shape[0], x.shape[1]);\n            if (inverse) {\n                result = ops.complex(ops.real(result).div(ops_1.scalar(n)), ops.imag(result).div(ops_1.scalar(n)));\n            }\n            return result;\n        }\n        else {\n            var data = this.readSync(x.dataId);\n            var rawOutput = this.fourierTransformByMatmul(data, n, inverse);\n            var output = complex_util.splitRealAndImagArrays(rawOutput);\n            return ops.complex(output.real, output.imag).as2D(x.shape[0], x.shape[1]);\n        }\n    };\n    MathBackendCPU.prototype.isExponentOf2 = function (size) {\n        return (size & size - 1) === 0;\n    };\n    // FFT using Cooley-Tukey algorithm on radix 2 dimensional input.\n    MathBackendCPU.prototype.fftRadix2 = function (input, size, inverse) {\n        if (size === 1) {\n            return input;\n        }\n        var data = this.readSync(input.dataId);\n        var half = size / 2;\n        var evenComplex = complex_util.complexWithEvenIndex(data);\n        var evenTensor = ops.complex(evenComplex.real, evenComplex.imag).as1D();\n        var oddComplex = complex_util.complexWithOddIndex(data);\n        var oddTensor = ops.complex(oddComplex.real, oddComplex.imag).as1D();\n        // Recursive call for half part of original input.\n        evenTensor = this.fftRadix2(evenTensor, half, inverse);\n        oddTensor = this.fftRadix2(oddTensor, half, inverse);\n        var e = complex_util.exponents(size, inverse);\n        var exponent = ops.complex(e.real, e.imag).mul(oddTensor);\n        var addPart = evenTensor.add(exponent);\n        var subPart = evenTensor.sub(exponent);\n        var realTensor = ops.real(addPart).concat(ops.real(subPart));\n        var imagTensor = ops.imag(addPart).concat(ops.imag(subPart));\n        return ops.complex(realTensor, imagTensor).as1D();\n    };\n    // Calculate fourier transform by multplying sinusoid matrix.\n    MathBackendCPU.prototype.fourierTransformByMatmul = function (data, size, inverse) {\n        var ret = new Float32Array(size * 2);\n        // TODO: Use matmul instead once it supports complex64 type.\n        for (var r = 0; r < size; r++) {\n            var real_2 = 0.0;\n            var imag_2 = 0.0;\n            for (var c = 0; c < size; c++) {\n                var e = complex_util.exponent(r * c, size, inverse);\n                var term = complex_util.getComplexWithIndex(data, c);\n                real_2 += term.real * e.real - term.imag * e.imag;\n                imag_2 += term.real * e.imag + term.imag * e.real;\n            }\n            if (inverse) {\n                real_2 /= size;\n                imag_2 /= size;\n            }\n            complex_util.assignToTypedArray(ret, real_2, imag_2, r);\n        }\n        return ret;\n    };\n    MathBackendCPU.prototype.depthToSpace = function (x, blockSize, dataFormat) {\n        util.assert(dataFormat === 'NHWC', function () { return \"Only NHWC dataFormat supported on CPU for depthToSpace. Got \" + dataFormat; });\n        util.assert(blockSize > 1, function () {\n            return \"blockSize should be > 1 for depthToSpace, but was: \" + blockSize;\n        });\n        var batchSize = x.shape[0];\n        var inputHeight = x.shape[1];\n        var inputWidth = x.shape[2];\n        var inputDepth = x.shape[3];\n        var outputHeight = inputHeight * blockSize;\n        var outputWidth = inputWidth * blockSize;\n        var outputDepth = inputDepth / (blockSize * blockSize);\n        var xValues = this.readSync(x.dataId);\n        var result = new Float32Array(batchSize * outputHeight * outputWidth * outputDepth);\n        var outputIdx = 0;\n        for (var b = 0; b < batchSize; ++b) {\n            for (var h = 0; h < outputHeight; ++h) {\n                var inH = Math.floor(h / blockSize);\n                var offsetH = (h % blockSize);\n                for (var w = 0; w < outputWidth; ++w) {\n                    var inW = Math.floor(w / blockSize);\n                    var offsetW = (w % blockSize);\n                    var offsetD = (offsetH * blockSize + offsetW) * outputDepth;\n                    for (var d = 0; d < outputDepth; ++d) {\n                        var inD = d + offsetD;\n                        var inputIdx = inD + inputDepth * (inW + inputWidth * (inH + inputHeight * b));\n                        result[outputIdx++] = xValues[inputIdx];\n                    }\n                }\n            }\n        }\n        return ops.tensor4d(result, [batchSize, outputHeight, outputWidth, outputDepth]);\n    };\n    MathBackendCPU.prototype.broadcastedBinaryOp = function (a, b, dtype, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var result = ops.buffer(newShape, dtype);\n        var aVals = this.readSync(a.dataId);\n        var bVals = this.readSync(b.dataId);\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var resVals = result.values;\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (var i = 0; i < resVals.length; ++i) {\n                resVals[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n            }\n        }\n        else {\n            var aBuf = this.bufferSync(a);\n            var bBuf = this.bufferSync(b);\n            var _loop_2 = function (i) {\n                var loc = result.indexToLoc(i);\n                var aLoc = loc.slice(-a.rank);\n                aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n                var aIndex = aBuf.locToIndex(aLoc);\n                var bLoc = loc.slice(-b.rank);\n                bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n                var bIndex = bBuf.locToIndex(bLoc);\n                resVals[i] = op(aVals[aIndex], bVals[bIndex]);\n            };\n            for (var i = 0; i < resVals.length; ++i) {\n                _loop_2(i);\n            }\n        }\n        return result.toTensor();\n    };\n    MathBackendCPU.prototype.broadcastedBinaryComplexOp = function (a, b, op) {\n        var newShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        var realResult = ops.buffer(newShape, 'float32');\n        var imagResult = ops.buffer(newShape, 'float32');\n        var aVals = this.readSync(a.dataId);\n        var bVals = this.readSync(b.dataId);\n        var aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n        var bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n        var realVals = realResult.values;\n        var imagVals = imagResult.values;\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (var i = 0; i < realVals.length; i++) {\n                var aIdx = i % aVals.length;\n                var bIdx = i % bVals.length;\n                var result = op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2], bVals[bIdx * 2 + 1]);\n                realVals[i] = result.real;\n                imagVals[i] = result.imag;\n            }\n        }\n        else {\n            var aRealBuf = this.bufferSync(this.data.get(a.dataId).complexTensors.real);\n            var bRealBuf = this.bufferSync(this.data.get(b.dataId).complexTensors.real);\n            var _loop_3 = function (i) {\n                var loc = realResult.indexToLoc(i);\n                var aLoc = loc.slice(-a.rank);\n                aBroadcastDims.forEach(function (d) { return aLoc[d] = 0; });\n                var aIndex = aRealBuf.locToIndex(aLoc);\n                var bLoc = loc.slice(-b.rank);\n                bBroadcastDims.forEach(function (d) { return bLoc[d] = 0; });\n                var bIndex = bRealBuf.locToIndex(bLoc);\n                var opResult = op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2], bVals[bIndex * 2 + 1]);\n                realVals[i] = opResult.real;\n                imagVals[i] = opResult.imag;\n            };\n            for (var i = 0; i < realVals.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return this.complex(realResult.toTensor(), imagResult.toTensor());\n    };\n    MathBackendCPU.prototype.split = function (x, sizeSplits, axis) {\n        return split_shared_1.split(x, sizeSplits, axis);\n    };\n    MathBackendCPU.prototype.dispose = function () { };\n    MathBackendCPU.prototype.floatPrecision = function () {\n        return 32;\n    };\n    /** Returns the smallest representable number.  */\n    MathBackendCPU.prototype.epsilon = function () {\n        return backend_1.EPSILON_FLOAT32;\n    };\n    MathBackendCPU.prototype.cropAndResize = function (images, boxes, boxIndex, cropSize, method, extrapolationValue) {\n        var _a = images.shape, batch = _a[0], imageHeight = _a[1], imageWidth = _a[2], numChannels = _a[3];\n        var numBoxes = boxes.shape[0];\n        var cropHeight = cropSize[0], cropWidth = cropSize[1];\n        var output = ops.buffer([numBoxes, cropHeight, cropWidth, numChannels], 'float32');\n        var boxVals = this.readSync(boxes.dataId);\n        var boxIndVals = this.readSync(boxIndex.dataId);\n        var imageVals = this.readSync(images.dataId);\n        var inStride = images.strides; // to calculate flat indexes into image\n        var outStride = output.strides; // to calculate flat indexes into output\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc\n        for (var b = 0; b < numBoxes; b++) {\n            var startInd = b * 4;\n            var y1 = boxVals[startInd];\n            var x1 = boxVals[startInd + 1];\n            var y2 = boxVals[startInd + 2];\n            var x2 = boxVals[startInd + 3];\n            var bInd = boxIndVals[b];\n            if (bInd >= batch) {\n                continue;\n            }\n            var heightScale = (cropHeight > 1) ?\n                (y2 - y1) * (imageHeight - 1) / (cropHeight - 1) :\n                0;\n            var widthScale = (cropWidth > 1) ? (x2 - x1) * (imageWidth - 1) / (cropWidth - 1) : 0;\n            for (var y = 0; y < cropHeight; y++) {\n                var yInd = (cropHeight > 1) ?\n                    y1 * (imageHeight - 1) + y * (heightScale) :\n                    0.5 * (y1 + y2) * (imageHeight - 1);\n                if (yInd < 0 || yInd > imageHeight - 1) {\n                    for (var x = 0; x < cropWidth; x++) {\n                        for (var c = 0; c < numChannels; c++) {\n                            var ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                            output.values[ind] = extrapolationValue;\n                        }\n                    }\n                    continue;\n                }\n                if (method === 'bilinear') {\n                    var topInd = Math.floor(yInd);\n                    var bottomInd = Math.ceil(yInd);\n                    var yLerp = yInd - topInd;\n                    for (var x = 0; x < cropWidth; x++) {\n                        var xInd = (cropWidth > 1) ?\n                            x1 * (imageWidth - 1) + x * widthScale :\n                            0.5 * (x1 + x2) * (imageWidth - 1);\n                        if (xInd < 0 || xInd > imageWidth - 1) {\n                            for (var c = 0; c < numChannels; c++) {\n                                var ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                                output.values[ind] = extrapolationValue;\n                            }\n                            continue;\n                        }\n                        var leftInd = Math.floor(xInd);\n                        var rightInd = Math.ceil(xInd);\n                        var xLerp = xInd - leftInd;\n                        for (var c = 0; c < numChannels; c++) {\n                            var ind = c + leftInd * inStride[2] + topInd * inStride[1] +\n                                bInd * inStride[0];\n                            var topLeft = imageVals[ind];\n                            ind = c + rightInd * inStride[2] + topInd * inStride[1] +\n                                bInd * inStride[0];\n                            var topRight = imageVals[ind];\n                            ind = c + leftInd * inStride[2] + bottomInd * inStride[1] +\n                                bInd * inStride[0];\n                            var bottomLeft = imageVals[ind];\n                            ind = c + rightInd * inStride[2] + bottomInd * inStride[1] +\n                                bInd * inStride[0];\n                            var bottomRight = imageVals[ind];\n                            var top_2 = topLeft + (topRight - topLeft) * xLerp;\n                            var bottom = bottomLeft + (bottomRight - bottomLeft) * xLerp;\n                            ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                            output.values[ind] = top_2 + ((bottom - top_2) * yLerp);\n                        }\n                    }\n                }\n                else { // method == \"nearest\"\n                    for (var x = 0; x < cropWidth; ++x) {\n                        var xInd = (cropWidth > 1) ?\n                            x1 * (imageWidth - 1) + x * widthScale :\n                            0.5 * (x1 + x2) * (imageWidth - 1);\n                        if (xInd < 0 || xInd > imageWidth - 1) {\n                            for (var c = 0; c < numChannels; c++) {\n                                var ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                                output.values[ind] = extrapolationValue;\n                            }\n                            continue;\n                        }\n                        var closestX = Math.round(xInd);\n                        var closestY = Math.round(yInd);\n                        for (var c = 0; c < numChannels; c++) {\n                            var inInd = c + closestX * inStride[2] +\n                                closestY * inStride[1] + bInd * inStride[0];\n                            var outInd = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                            output.values[outInd] = imageVals[inInd];\n                        }\n                    }\n                }\n            }\n        }\n        return output.toTensor();\n    };\n    MathBackendCPU.prototype.sparseToDense = function (sparseIndices, sparseValues, outputShape, defaultValue) {\n        var _a = scatter_nd_util.calculateShapes(sparseValues, sparseIndices, outputShape), sliceRank = _a.sliceRank, numUpdates = _a.numUpdates, sliceSize = _a.sliceSize, strides = _a.strides, outputSize = _a.outputSize;\n        var sumDupeIndices = false;\n        return this.scatter(sparseIndices, sparseValues, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices);\n    };\n    MathBackendCPU.prototype.gatherND = function (x, indices) {\n        var indicesShape = indices.shape;\n        var sliceRank = indicesShape[indicesShape.length - 1];\n        var _a = gather_nd_util.prepareAndValidate(x, indices), resultShape = _a[0], numSlices = _a[1], sliceSize = _a[2], strides = _a[3];\n        if (numSlices === 0) {\n            return ops_1.tensor([], resultShape, x.dtype);\n        }\n        var buffer = new tensor_1.TensorBuffer([numSlices, sliceSize], x.dtype);\n        var indicesData = this.readSync(indices.dataId);\n        var xData = this.readSync(x.dataId);\n        for (var i = 0; i < numSlices; i++) {\n            var index = [];\n            var flattenIndex = 0;\n            for (var j = 0; j < sliceRank; j++) {\n                var dim = indicesData[i * sliceRank + j];\n                flattenIndex += dim * strides[j];\n                index.push(dim);\n            }\n            if (flattenIndex < 0 || flattenIndex >= x.size / sliceSize) {\n                throw new Error(\"Invalid indices: \" + index + \" does not index into \" + x.shape);\n            }\n            for (var k = 0; k < sliceSize; k++) {\n                buffer.values[i * sliceSize + k] = xData[flattenIndex * sliceSize + k];\n            }\n        }\n        return buffer.toTensor().reshape(resultShape);\n    };\n    MathBackendCPU.prototype.scatterND = function (indices, updates, shape) {\n        var _a = scatter_nd_util.calculateShapes(updates, indices, shape), sliceRank = _a.sliceRank, numUpdates = _a.numUpdates, sliceSize = _a.sliceSize, strides = _a.strides, outputSize = _a.outputSize;\n        var defaultValue = ops_1.scalar(0);\n        var sumDupeIndices = true;\n        return this.scatter(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices);\n    };\n    MathBackendCPU.prototype.fill = function (shape, value, dtype) {\n        dtype = dtype || util_1.inferDtype(value);\n        var values = util_1.getArrayFromDType(dtype, util_1.sizeFromShape(shape));\n        values.fill(value);\n        return engine_1.ENGINE.makeTensor(values, shape, dtype, this);\n    };\n    MathBackendCPU.prototype.onesLike = function (x) {\n        if (x.dtype === 'string') {\n            throw new Error('onesLike is not supported for string tensors');\n        }\n        else {\n            return this.fill(x.shape, 1, x.dtype);\n        }\n    };\n    MathBackendCPU.prototype.zerosLike = function (x) {\n        var values = util_1.getArrayFromDType(x.dtype, util_1.sizeFromShape(x.shape));\n        return this.makeOutput(values, x.shape, x.dtype);\n    };\n    MathBackendCPU.prototype.linspace = function (start, stop, num) {\n        return backend_util.linspaceImpl(start, stop, num);\n    };\n    MathBackendCPU.prototype.scatter = function (indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n        var flattenShape = [outputSize / sliceSize, sliceSize];\n        var indicesData = this.readSync(indices.dataId);\n        var updatesData = this.readSync(updates.dataId);\n        if (outputSize === 0) {\n            return ops_1.tensor([], shape, updates.dtype);\n        }\n        var buffer = new tensor_1.TensorBuffer(flattenShape, updates.dtype);\n        buffer.values.fill(this.readSync(defaultValue.dataId)[0]);\n        for (var i = 0; i < numUpdates; i++) {\n            var index = [];\n            var flattenIndex = 0;\n            for (var j = 0; j < sliceRank; j++) {\n                var dim = indicesData[i * sliceRank + j];\n                index.push(dim);\n                flattenIndex += dim * strides[j];\n            }\n            if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n                throw new Error(\"Invalid indices: \" + index + \" does not index into \" + shape);\n            }\n            for (var k = 0; k < sliceSize; k++) {\n                if (sumDupeIndices) {\n                    buffer.values[flattenIndex * sliceSize + k] +=\n                        updatesData[i * sliceSize + k];\n                }\n                else {\n                    buffer.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n                        updatesData[0] :\n                        updatesData[i * sliceSize + k];\n                }\n            }\n        }\n        return buffer.toTensor().reshape(shape);\n    };\n    return MathBackendCPU;\n}(backend_1.KernelBackend));\nexports.MathBackendCPU = MathBackendCPU;\nengine_1.ENGINE.registerBackend('cpu', function () { return new MathBackendCPU(); }, 1 /* priority */);\n//# sourceMappingURL=backend_cpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction square_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'square');\n    var grad = function (dy, saved) {\n        var x = saved[0];\n        return { x: function () { return dy.mul(x.toFloat().mul(2)); } };\n    };\n    var kernelName = 'Square';\n    var attrs = {};\n    var inputsToSave = [$x];\n    var outputsToSave = [];\n    return engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        save([$x]);\n        return backend.square($x);\n    }, { x: $x }, grad, kernelName, attrs, inputsToSave, outputsToSave);\n}\nexports.square = operation_1.op({ square_: square_ });\n//# sourceMappingURL=square.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar broadcast_util_1 = require(\"./broadcast_util\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\nvar unary_ops_1 = require(\"./unary_ops\");\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'batchNorm');\n    var $mean = tensor_util_env_1.convertToTensor(mean, 'mean', 'batchNorm');\n    var $variance = tensor_util_env_1.convertToTensor(variance, 'variance', 'batchNorm');\n    var $scale;\n    if (scale != null) {\n        $scale = tensor_util_env_1.convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    var $offset;\n    if (offset != null) {\n        $offset = tensor_util_env_1.convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 2, function () { return \"Error in batchNorm3D: x must be rank 3 but got rank \" +\n        ($x.rank + \".\"); });\n    util.assert($mean.rank === 2 || $mean.rank === 1, function () { return \"Error in batchNorm2D: mean must be rank 2 or rank 1 but \" +\n        (\"got rank \" + $mean.rank + \".\"); });\n    util.assert($variance.rank === 2 || $variance.rank === 1, function () { return \"Error in batchNorm2D: variance must be rank 2 or rank 1 \" +\n        (\"but got rank \" + $variance.rank + \".\"); });\n    if ($scale != null) {\n        util.assert($scale.rank === 2 || $scale.rank === 1, function () { return \"Error in batchNorm2D: scale must be rank 2 or rank 1 \" +\n            (\"but got rank \" + $scale.rank + \".\"); });\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 2 || $offset.rank === 1, function () { return \"Error in batchNorm2D: offset must be rank 2 or rank 1 \" +\n            (\"but got rank \" + $offset.rank + \".\"); });\n    }\n    return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'batchNorm');\n    var $mean = tensor_util_env_1.convertToTensor(mean, 'mean', 'batchNorm');\n    var $variance = tensor_util_env_1.convertToTensor(variance, 'variance', 'batchNorm');\n    var $scale;\n    if (scale != null) {\n        $scale = tensor_util_env_1.convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    var $offset;\n    if (offset != null) {\n        $offset = tensor_util_env_1.convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 3, function () { return \"Error in batchNorm3D: x must be rank 3 but got rank \" +\n        ($x.rank + \".\"); });\n    util.assert($mean.rank === 3 || $mean.rank === 1, function () { return \"Error in batchNorm3D: mean must be rank 3 or rank 1 but \" +\n        (\"got rank \" + $mean.rank + \".\"); });\n    util.assert($variance.rank === 3 || $variance.rank === 1, function () { return \"Error in batchNorm3D: variance must be rank 3 or rank 1 \" +\n        (\"but got rank \" + $variance.rank + \".\"); });\n    if ($scale != null) {\n        util.assert($scale.rank === 3 || $scale.rank === 1, function () { return \"Error in batchNorm3D: scale must be rank 3 or rank 1 \" +\n            (\"but got rank \" + $scale.rank + \".\"); });\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 3 || $offset.rank === 1, function () { return \"Error in batchNorm3D: offset must be rank 3 or rank 1 \" +\n            (\"but got rank \" + $offset.rank + \".\"); });\n    }\n    return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'batchNorm');\n    var $mean = tensor_util_env_1.convertToTensor(mean, 'mean', 'batchNorm');\n    var $variance = tensor_util_env_1.convertToTensor(variance, 'variance', 'batchNorm');\n    var $scale;\n    if (scale != null) {\n        $scale = tensor_util_env_1.convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    var $offset;\n    if (offset != null) {\n        $offset = tensor_util_env_1.convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 4, function () { return \"Error in batchNorm4D: x must be rank 4 but got rank \" +\n        ($x.rank + \".\"); });\n    util.assert($mean.rank === 4 || $mean.rank === 1, function () { return \"Error in batchNorm4D: mean must be rank 4 or rank 1 but \" +\n        (\"got rank \" + $mean.rank + \".\"); });\n    util.assert($variance.rank === 4 || $variance.rank === 1, function () { return \"Error in batchNorm4D: variance must be rank 4 or rank 1 \" +\n        (\"but got rank \" + $variance.rank + \".\"); });\n    if ($scale != null) {\n        util.assert($scale.rank === 4 || $scale.rank === 1, function () { return \"Error in batchNorm4D: scale must be rank 4 or rank 1 \" +\n            (\"but got rank \" + $scale.rank + \".\"); });\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 4 || $offset.rank === 1, function () { return \"Error in batchNorm4D: offset must be rank 4 or rank 1 \" +\n            (\"but got rank \" + $offset.rank + \".\"); });\n    }\n    return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n/**\n * @deprecated Please use `tf.batchNorm` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization_(x, mean, variance, varianceEpsilon, scale, offset) {\n    if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n    warnDeprecation();\n    return batchNorm_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'batchNorm');\n    var $mean = tensor_util_env_1.convertToTensor(mean, 'mean', 'batchNorm');\n    var $variance = tensor_util_env_1.convertToTensor(variance, 'variance', 'batchNorm');\n    var $scale;\n    if (scale != null) {\n        $scale = tensor_util_env_1.convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    var $offset;\n    if (offset != null) {\n        $offset = tensor_util_env_1.convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($mean.rank === $variance.rank, function () { return 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.'; });\n    util.assert($offset == null || $mean.rank === $offset.rank, function () { return 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.'; });\n    util.assert($scale == null || $mean.rank === $scale.rank, function () { return 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.'; });\n    var x4D;\n    if ($x.rank === 0 || $x.rank === 1) {\n        x4D = $x.as4D(1, 1, 1, $x.size);\n    }\n    else if ($x.rank === 2) {\n        x4D = $x.as4D(1, 1, $x.shape[0], $x.shape[1]);\n    }\n    else if ($x.rank === 3) {\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    else {\n        x4D = $x;\n    }\n    var der = function (dy, saved) {\n        var _a = saved, $x = _a[0], $mean = _a[1], $variance = _a[2], $scale = _a[3];\n        var scaleValue = $scale == null ? tensor_ops_1.scalar(1) : $scale;\n        var reductionAxes = broadcast_util_1.getReductionAxes($mean.shape, x4D.shape);\n        var tileShape = [];\n        if ($mean.rank === 1) {\n            for (var i = 0; i < x4D.shape.length - 1; ++i) {\n                tileShape.push(x4D.shape[i]);\n            }\n            tileShape.push(1);\n        }\n        var xMinusMean = $x.sub($mean);\n        var dyTimesScaleValue = dy.mul(scaleValue);\n        var oneOverSqrtVariance = unary_ops_1.rsqrt($variance.add(tensor_ops_1.scalar(varianceEpsilon)));\n        var minusHalfRCube = oneOverSqrtVariance.mul(oneOverSqrtVariance)\n            .mul(oneOverSqrtVariance)\n            .mul(tensor_ops_1.scalar(-0.5));\n        var derX = function () {\n            if ($mean.rank === 1) {\n                return dy\n                    .mul(array_ops_1.tile(oneOverSqrtVariance.as4D(1, 1, 1, $mean.shape[0]), tileShape))\n                    .mul(scaleValue)\n                    .reshape($x.shape);\n            }\n            else {\n                return dy.mul(oneOverSqrtVariance).mul(scaleValue).reshape($x.shape);\n            }\n        };\n        var derMean = function () {\n            var meanDer = oneOverSqrtVariance.mul(tensor_ops_1.scalar(-1)).mul(dyTimesScaleValue);\n            if ($mean.rank === 1) {\n                meanDer = meanDer.sum(reductionAxes);\n            }\n            return meanDer.reshape($mean.shape);\n        };\n        var derVariance = function () {\n            var varianceDer = minusHalfRCube.mul(xMinusMean).mul(dyTimesScaleValue);\n            if ($mean.rank === 1) {\n                varianceDer = varianceDer.sum(reductionAxes);\n            }\n            return varianceDer.reshape($mean.shape);\n        };\n        var derScale = function () {\n            var xMinusMean2TimesRsqrt = xMinusMean.mul(oneOverSqrtVariance);\n            var scaleDer = dy.mul(xMinusMean2TimesRsqrt);\n            if ($mean.rank === 1) {\n                scaleDer = scaleDer.sum(reductionAxes);\n            }\n            return scaleDer.reshape($mean.shape);\n        };\n        var derOffset = function () {\n            var offsetDer = dy;\n            if ($mean.rank === 1) {\n                offsetDer = offsetDer.sum(reductionAxes);\n            }\n            return offsetDer.reshape($mean.shape);\n        };\n        return {\n            x: derX,\n            mean: derMean,\n            variance: derVariance,\n            scale: derScale,\n            offset: derOffset\n        };\n    };\n    var inputsToSave = [$x, $mean, $variance, $scale];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.batchNormalization(x4D, batchnormReshape4D($mean), batchnormReshape4D($variance), varianceEpsilon, batchnormReshape4D($scale), batchnormReshape4D($offset));\n        save([$x, $mean, $variance, $scale]);\n        return res;\n    }, { x: $x, mean: $mean, variance: $variance, scale: $scale, offset: $offset }, der, 'BatchNormalization', { varianceEpsilon: varianceEpsilon }, inputsToSave);\n    return res.reshape($x.shape);\n}\nfunction batchnormReshape4D(x) {\n    if (x == null) {\n        return null;\n    }\n    if (x.rank === 0) {\n        return x.as1D();\n    }\n    else if (x.rank === 1) {\n        return x;\n    }\n    else if (x.rank === 2) {\n        return x.as4D(1, 1, x.shape[0], x.shape[1]);\n    }\n    else if (x.rank === 3) {\n        return x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n    }\n    return x;\n}\n/**\n * @deprecated Please use `tf.batchNorm2d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization2d_(x, mean, variance, varianceEpsilon, scale, offset) {\n    if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n    warnDeprecation();\n    return batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n/**\n * @deprecated Please use `tf.batchNorm3d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization3d_(x, mean, variance, varianceEpsilon, scale, offset) {\n    if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n    warnDeprecation();\n    return batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n/**\n * @deprecated Please use `tf.batchNorm4d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization4d_(x, mean, variance, varianceEpsilon, scale, offset) {\n    if (varianceEpsilon === void 0) { varianceEpsilon = .001; }\n    warnDeprecation();\n    return batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\nfunction warnDeprecation() {\n    globals_1.deprecationWarn('tf.batchNormalization() is going away. ' +\n        'Use tf.batchNorm() instead, and note the positional argument change ' +\n        'of scale, offset, and varianceEpsilon');\n}\nexports.batchNormalization2d = operation_1.op({ batchNormalization2d_: batchNormalization2d_ });\nexports.batchNormalization3d = operation_1.op({ batchNormalization3d_: batchNormalization3d_ });\nexports.batchNormalization4d = operation_1.op({ batchNormalization4d_: batchNormalization4d_ });\nexports.batchNormalization = operation_1.op({ batchNormalization_: batchNormalization_ });\nexports.batchNorm = operation_1.op({ batchNorm_: batchNorm_ });\nexports.batchNorm2d = operation_1.op({ batchNorm2d_: batchNorm2d_ });\nexports.batchNorm3d = operation_1.op({ batchNorm3d_: batchNorm3d_ });\nexports.batchNorm4d = operation_1.op({ batchNorm4d_: batchNorm4d_ });\n//# sourceMappingURL=batchnorm.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar segment_ops_1 = require(\"./segment_ops\");\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction booleanMaskAsync_(tensor, mask, axis) {\n    return __awaiter(this, void 0, void 0, function () {\n        var $tensor, $mask, axisFrom, maskDim, tensorShape, leadingSize, i, targetTensorShape, reshapedTensor, reshapedMask, positivePositions, indices, res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    $tensor = tensor_util_env_1.convertToTensor(tensor, 'tensor', 'boolMask');\n                    $mask = tensor_util_env_1.convertToTensor(mask, 'mask', 'boolMask', 'bool');\n                    axisFrom = axis == null ? 0 : axis;\n                    maskDim = $mask.rank;\n                    tensorShape = $tensor.shape;\n                    util.assert(maskDim > 0, function () { return 'mask cannot be scalar'; });\n                    util.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, \"mask's shape must match the first K dimensions of tensor's shape,\");\n                    leadingSize = 1;\n                    for (i = axisFrom; i < axisFrom + maskDim; i++) {\n                        leadingSize *= tensorShape[i];\n                    }\n                    targetTensorShape = tensorShape.slice(0, axisFrom)\n                        .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n                    reshapedTensor = $tensor.reshape(targetTensorShape);\n                    reshapedMask = $mask.reshape([-1]);\n                    return [4 /*yield*/, logical_ops_1.whereAsync(reshapedMask)];\n                case 1:\n                    positivePositions = _a.sent();\n                    indices = positivePositions.squeeze([1]);\n                    res = segment_ops_1.gather(reshapedTensor, indices, axisFrom);\n                    // Ensure no memory leak.\n                    if (tensor !== $tensor) {\n                        $tensor.dispose();\n                    }\n                    if (mask !== $mask) {\n                        $mask.dispose();\n                    }\n                    indices.dispose();\n                    reshapedTensor.dispose();\n                    reshapedMask.dispose();\n                    positivePositions.dispose();\n                    return [2 /*return*/, res];\n            }\n        });\n    });\n}\nexports.booleanMaskAsync = booleanMaskAsync_;\n//# sourceMappingURL=boolean_mask.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 1, function () { return \"Error in reverse1D: x must be rank 1 but got rank \" + $x.rank + \".\"; });\n    return exports.reverse($x, 0);\n}\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x, axis) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 2, function () { return \"Error in reverse2D: x must be rank 2 but got rank \" + $x.rank + \".\"; });\n    return exports.reverse($x, axis);\n}\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x, axis) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 3, function () { return \"Error in reverse3D: x must be rank 3 but got rank \" + $x.rank + \".\"; });\n    return exports.reverse($x, axis);\n}\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x, axis) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 4, function () { return \"Error in reverse4D: x must be rank 4 but got rank \" + $x.rank + \".\"; });\n    return exports.reverse($x, axis);\n}\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction reverse_(x, axis) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'reverse');\n    if ($x.rank === 0) {\n        return $x.clone();\n    }\n    var axes = util.parseAxisParam(axis, $x.shape);\n    var grad = function (dy) {\n        return { $x: function () { return dy.reverse(axes); } };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.reverse($x, axes); }, { $x: $x }, grad);\n    return res.reshapeAs($x);\n}\nexports.reverse = operation_1.op({ reverse_: reverse_ });\nexports.reverse1d = operation_1.op({ reverse1d_: reverse1d_ });\nexports.reverse2d = operation_1.op({ reverse2d_: reverse2d_ });\nexports.reverse3d = operation_1.op({ reverse3d_: reverse3d_ });\nexports.reverse4d = operation_1.op({ reverse4d_: reverse4d_ });\n//# sourceMappingURL=reverse.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar conv_util = require(\"./conv_util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction maxPoolImpl_(x, filterSize, strides, dilations, pad, dimRoundingMode) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'maxPool');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in maxPool: input must be rank 4 but got rank \" + x4D.rank + \".\"; });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in maxPool: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in maxPool: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return $x.clone();\n    }\n    var grad = function (dy, saved) {\n        var x4D = saved[0], y = saved[1];\n        return {\n            x: function () { return maxPoolBackprop(dy, x4D, y, filterSize, strides, dilations, pad); }\n        };\n    };\n    var inputsToSave = [x4D];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.maxPool(x4D, convInfo);\n        save([x4D, y]);\n        return y;\n    }, { x: x4D }, grad, 'MaxPool', convInfo, inputsToSave);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    return maxPoolImpl_(x, filterSize, strides, 1, pad, dimRoundingMode);\n}\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction avgPoolImpl_(x, filterSize, strides, dilations, pad, dimRoundingMode) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'avgPool', 'float32');\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in avgPool: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in avgPool: x must be rank 4 but got rank \" + x4D.rank + \".\"; });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in avgPool: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool2DInfo(x4D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return $x.clone();\n    }\n    var grad = function (dy) {\n        return {\n            x: function () { return avgPoolBackprop(dy, x4D, filterSize, strides, dilations, pad); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.avgPool(x4D, convInfo); }, { x: x4D }, grad, 'AvgPool', convInfo);\n    res = res.cast($x.dtype);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    return avgPoolImpl_(x, filterSize, strides, 1, pad, dimRoundingMode);\n}\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction pool_(input, windowShape, poolingType, pad, dilations, strides) {\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    if (strides == null) {\n        strides = 1;\n    }\n    if (pad === 0) {\n        pad = 'valid';\n    }\n    var $x = tensor_util_env_1.convertToTensor(input, 'x', 'maxPool');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in pool: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    var convInfo = conv_util.computePool2DInfo(x4D.shape, windowShape, strides, dilations, pad);\n    var dilation = [convInfo.dilationHeight, convInfo.dilationWidth];\n    // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n    // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n    var basePadding;\n    if (pad === 'same') {\n        basePadding = withSpaceToBatchBasePaddings([convInfo.filterHeight, convInfo.filterWidth], dilation);\n    }\n    else {\n        basePadding = [[0, 0], [0, 0]];\n    }\n    var isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n    var _a = requiredSpaceToBatchPaddings([convInfo.inHeight, convInfo.inWidth], dilation, basePadding), adjustedPadding = _a[0], adjustedCrops = _a[1];\n    var convertedPad = isDilationOne ? pad : 'valid';\n    var convertedX = isDilationOne ? x4D : array_ops_1.spaceToBatchND(x4D, dilation, adjustedPadding);\n    var forwardOp = poolingType === 'avg' ?\n        function () { return avgPoolImpl_(convertedX, windowShape, strides, 1 /* dilation */, convertedPad); } :\n        function () { return maxPoolImpl_(convertedX, windowShape, strides, 1 /* dilation */, convertedPad); };\n    var y = forwardOp();\n    var res = isDilationOne ? y : array_ops_1.batchToSpaceND(y, dilation, adjustedCrops);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes the backprop of a 2D max pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The original input image, of rank 4, of shape\n *     [batchSize, height, width, channels].\n * @param output The original output image, of rank 4, of shape\n *     [batchSize, outHeight, outWidth, channels].\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction maxPoolBackprop(dy, input, output, filterSize, strides, dilations, pad, dimRoundingMode) {\n    var $dy = tensor_util_env_1.convertToTensor(dy, 'dy', 'maxPoolBackprop');\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'maxPoolBackprop');\n    var $output = tensor_util_env_1.convertToTensor(output, 'output', 'maxPoolBackprop');\n    util.assert($input.rank === $dy.rank, function () { return \"Rank of input (\" + $input.rank + \") does not match rank of dy \" +\n        (\"(\" + $dy.rank + \")\"); });\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n        return 'Error in maxPoolBackProp: Either strides or dilations must be 1. ' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\");\n    });\n    util.assert($dy.rank === 4, function () { return \"Error in maxPoolBackprop: dy must be rank 4 but got rank \" +\n        ($dy.rank + \".\"); });\n    util.assert($input.rank === 4, function () { return \"Error in maxPoolBackprop: input must be rank 4 but got rank \" +\n        ($input.rank + \".\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in maxPoolBackprop: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool2DInfo($input.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.maxPoolBackprop($dy, $input, $output, convInfo); }, { $dy: $dy, $input: $input });\n    return res;\n}\n/**\n * Computes the backprop of an 2D avg pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The input image, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\nfunction avgPoolBackprop(dy, input, filterSize, strides, dilations, pad) {\n    var $dy = tensor_util_env_1.convertToTensor(dy, 'dy', 'avgPoolBackprop');\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'avgPoolBackprop');\n    util.assert($input.rank === $dy.rank, function () { return \"Rank of input (\" + $input.rank + \") does not match rank of dy (\" + $dy.rank + \")\"; });\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n        return 'Error in avgPoolBackprop: Either strides or dilations must be 1. ' +\n            (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\");\n    });\n    var input4D = $input;\n    var dy4D = $dy;\n    var reshapedTo4D = false;\n    if ($input.rank === 3) {\n        reshapedTo4D = true;\n        input4D = $input.as4D(1, $input.shape[0], $input.shape[1], $input.shape[2]);\n        dy4D = $dy.as4D(1, $dy.shape[0], $dy.shape[1], $dy.shape[2]);\n    }\n    util.assert(dy4D.rank === 4, function () { return \"Error in avgPoolBackprop: dy must be rank 4 but got rank \" +\n        (dy4D.rank + \".\"); });\n    util.assert(input4D.rank === 4, function () { return \"Error in avgPoolBackprop: input must be rank 4 but got rank \" +\n        (input4D.rank + \".\"); });\n    var convInfo = conv_util.computePool2DInfo(input4D.shape, filterSize, strides, dilations, pad);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.avgPoolBackprop(dy4D, input4D, convInfo); }, { dy4D: dy4D, input4D: input4D });\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(inputShape, blockShape, basePadding) {\n    var padStart = basePadding.map(function (b) { return b[0]; });\n    var origPadEnd = basePadding.map(function (b) { return b[1]; });\n    var fullInputShape = inputShape.concat(padStart, origPadEnd);\n    var padEndExtra = blockShape.map(function (b, i) { return (b - fullInputShape[i] % b) % b; });\n    var padEnd = origPadEnd.map(function (s, i) { return s + padEndExtra[i]; });\n    var paddings = blockShape.map(function (_, i) { return [padStart[i], padEnd[i]]; });\n    var crops = blockShape.map(function (_, i) { return [0, padEndExtra[i]]; });\n    return [paddings, crops];\n}\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(filterShape, dilation) {\n    // Spatial dimensions of the filters and the upsampled filters in which we\n    // introduce (rate - 1) zeros between consecutive filter values.\n    var dilatedFilterShape = filterShape.map(function (s, i) {\n        return s + (s - 1) * (dilation[i] - 1);\n    });\n    var padExtraShape = dilatedFilterShape.map(function (s) { return s - 1; });\n    // When padding is odd, we pad more at end, following the same\n    // convention as conv2d.\n    var padExtraStart = padExtraShape.map(function (s) { return Math.floor(s / 2); });\n    var padExtraEnd = padExtraShape.map(function (s, i) { return s - padExtraStart[i]; });\n    return padExtraShape.map(function (_, i) {\n        return [padExtraStart[i], padExtraEnd[i]];\n    });\n}\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates:\n *     `[dilationDepth, dilationHeight, dilationWidth]`\n *     in which we sample input values across the depth, height and width\n *     dimensions in dilated pooling.\n *     Defaults to `[1, 1, 1]`. If `dilations` is a single number,\n *     then `dilationDepth == dilationHeight == dilationWidth`.\n *     If it is greater than 1, then all values of `strides` must be 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction avgPool3d_(x, filterSize, strides, pad, dimRoundingMode, dataFormat, dilations) {\n    if (dataFormat === void 0) { dataFormat = 'NDHWC'; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'avgPool3d', 'float32');\n    var x5D = $x;\n    var reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = $x.as5D(1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]);\n    }\n    if (dilations == null) {\n        dilations = [1, 1, 1];\n    }\n    util.assert(x5D.rank === 5, function () { return \"Error in avgPool3d: x must be rank 5 but got rank \" + x5D.rank + \".\"; });\n    util.assert(dataFormat === 'NDHWC', function () { return \"Error in avgPool3d: Only NDHWC is currently supported, \" +\n        (\"but got dataFormat of \" + dataFormat); });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in avgPool3d: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in avgPool3d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool3DInfo(x5D.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    var grad = function (dy) {\n        return {\n            x: function () { return avgPool3dBackprop(dy, x5D, filterSize, strides, dilations, pad, dimRoundingMode); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.avgPool3d(x5D, convInfo); }, { x: x5D }, grad);\n    res = res.cast(x5D.dtype);\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\n/**\n * Computes the backprop of a 3d avg pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates:\n *     `[dilationDepth, dilationHeight, dilationWidth]`\n *     in which we sample input values across the depth, height and width\n *     dimensions in dilated pooling.\n *     Defaults to `[1, 1, 1]`. If `dilations` is a single number,\n *     then `dilationDepth == dilationHeight == dilationWidth`.\n *     If it is greater than 1, then all values of `strides` must be 1.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction avgPool3dBackprop(dy, input, filterSize, strides, dilations, pad, dimRoundingMode) {\n    var $dy = tensor_util_env_1.convertToTensor(dy, 'dy', 'avgPool3dBackprop');\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'avgPool3dBackprop');\n    var dy5D = $dy;\n    var input5D = $input;\n    var reshapedTo5D = false;\n    if ($input.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = $dy.as5D(1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]);\n        input5D = $input.as5D(1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]);\n    }\n    util.assert(dy5D.rank === 5, function () { return \"Error in avgPool3dBackprop: dy must be rank 5 but got rank \" +\n        (dy5D.rank + \".\"); });\n    util.assert(input5D.rank === 5, function () { return \"Error in avgPool3dBackprop: input must be rank 5 but got rank \" +\n        (input5D.rank + \".\"); });\n    if (dilations == null) {\n        dilations = [1, 1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in avgPool3dBackprop: Either strides or dilations ' +\n        (\"must be 1. Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in maxPool3dBackprop: pad must be an integer when \" +\n            (\"using, dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool3DInfo(input5D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.avgPool3dBackprop(dy5D, input5D, convInfo); }, { dy5D: dy5D, input5D: input5D });\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates:\n *     `[dilationDepth, dilationHeight, dilationWidth]`\n *     in which we sample input values across the depth, height and width\n *     dimensions in dilated pooling.\n *     Defaults to `[1, 1, 1]`. If `dilations` is a single number,\n *     then `dilationDepth == dilationHeight == dilationWidth`.\n *     If it is greater than 1, then all values of `strides` must be 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction maxPool3d_(x, filterSize, strides, pad, dimRoundingMode, dataFormat, dilations) {\n    if (dataFormat === void 0) { dataFormat = 'NDHWC'; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'maxPool3d');\n    var x5D = $x;\n    var reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = $x.as5D(1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]);\n    }\n    if (dilations == null) {\n        dilations = [1, 1, 1];\n    }\n    util.assert(x5D.rank === 5, function () { return \"Error in maxPool3d: x must be rank 5 but got rank \" + x5D.rank + \".\"; });\n    util.assert(dataFormat === 'NDHWC', function () { return \"Error in maxPool3d: Only NDHWC is currently supported, \" +\n        (\"but got dataFormat of \" + dataFormat); });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in maxPool3d: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in maxPool3d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool3DInfo(x5D.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    var grad = function (dy, saved) {\n        var x5D = saved[0], y = saved[1];\n        return {\n            x: function () { return maxPool3dBackprop(dy, x5D, y, filterSize, strides, dilations, pad, dimRoundingMode); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.maxPool3d(x5D, convInfo);\n        save([x5D, y]);\n        return y;\n    }, { x: x5D }, grad);\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\n/**\n * Computes the backprop of a 3d max pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank 4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param output The original output image, of rank 5 of shape\n *     [batchSize, outDepth, outHeight, outWidth, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates:\n *     `[dilationDepth, dilationHeight, dilationWidth]`\n *     in which we sample input values across the depth, height and width\n *     dimensions in dilated pooling.\n *     Defaults to `[1, 1, 1]`. If `dilations` is a single number,\n *     then `dilationDepth == dilationHeight == dilationWidth`.\n *     If it is greater than 1, then all values of `strides` must be 1.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction maxPool3dBackprop(dy, input, output, filterSize, strides, dilations, pad, dimRoundingMode) {\n    var $dy = tensor_util_env_1.convertToTensor(dy, 'dy', 'maxPool3dBackprop');\n    var $input = tensor_util_env_1.convertToTensor(input, 'input', 'maxPool3dBackprop');\n    var $output = tensor_util_env_1.convertToTensor(output, 'output', 'maxPool3dBackprop');\n    var dy5D = $dy;\n    var input5D = $input;\n    var output5D = $output;\n    var reshapedTo5D = false;\n    if ($input.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = $dy.as5D(1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]);\n        input5D = $input.as5D(1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]);\n        output5D = $output.as5D(1, $output.shape[0], $output.shape[1], $output.shape[2], $output.shape[3]);\n    }\n    util.assert(dy5D.rank === 5, function () { return \"Error in maxPool3dBackprop: dy must be rank 5 but got rank \" +\n        (dy5D.rank + \".\"); });\n    util.assert(input5D.rank === 5, function () { return \"Error in maxPool3dBackprop: input must be rank 5 but got rank \" +\n        (input5D.rank + \".\"); });\n    util.assert(output5D.rank === 5, function () { return \"Error in maxPool3dBackprop: output must be rank 5 but got rank \" +\n        (output5D.rank + \".\"); });\n    if (dilations == null) {\n        dilations = [1, 1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in maxPool3dBackprop: Either strides or dilations ' +\n        (\"must be 1. Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in maxPool3dBackprop: pad must be an integer when \" +\n            (\"using, dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computePool3DInfo(input5D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.maxPool3dBackprop(dy5D, input5D, output5D, convInfo); }, { dy5D: dy5D, input5D: input5D });\n    if (reshapedTo5D) {\n        return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]);\n    }\n    return res;\n}\nexports.maxPool = operation_1.op({ maxPool_: maxPool_ });\nexports.avgPool = operation_1.op({ avgPool_: avgPool_ });\nexports.pool = operation_1.op({ pool_: pool_ });\nexports.maxPool3d = operation_1.op({ maxPool3d_: maxPool3d_ });\nexports.avgPool3d = operation_1.op({ avgPool3d_: avgPool3d_ });\n//# sourceMappingURL=pool.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction transpose_(x, perm) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'transpose');\n    if (perm == null) {\n        perm = $x.shape.map(function (s, i) { return i; }).reverse();\n    }\n    util.assert($x.rank === perm.length, function () { return \"Error in transpose: rank of input \" + $x.rank + \" \" +\n        (\"must match length of perm \" + perm + \".\"); });\n    perm.forEach(function (axis) {\n        util.assert(axis >= 0 && axis < $x.rank, function () { return \"All entries in 'perm' must be between 0 and \" + ($x.rank - 1) +\n            (\" but got \" + perm); });\n    });\n    if ($x.rank <= 1) {\n        return $x.clone();\n    }\n    var der = function (dy) {\n        var undoPerm = axis_util.getUndoAxesPermutation(perm);\n        return { x: function () { return dy.transpose(undoPerm); } };\n    };\n    var attrs = { perm: perm };\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.transpose($x, perm); }, { x: $x }, der, 'Transpose', attrs);\n}\nexports.transpose = operation_1.op({ transpose_: transpose_ });\n//# sourceMappingURL=transpose.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction localResponseNormalization_(x, depthRadius, bias, alpha, beta) {\n    if (depthRadius === void 0) { depthRadius = 5; }\n    if (bias === void 0) { bias = 1; }\n    if (alpha === void 0) { alpha = 1; }\n    if (beta === void 0) { beta = 0.5; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'localResponseNormalization');\n    util.assert($x.rank === 4 || $x.rank === 3, function () { return \"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \" + $x.rank + \".\"; });\n    util.assert(util.isInt(depthRadius), function () { return \"Error in localResponseNormalization: depthRadius must be an \" +\n        (\"integer but got depthRadius \" + depthRadius + \".\"); });\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    var backward = function (dy, saved) {\n        var x4D = saved[0], y = saved[1];\n        return {\n            x4D: function () { return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.LRNGrad(dy, x4D, y, depthRadius, bias, alpha, beta); }, {}); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.localResponseNormalization4D(x4D, depthRadius, bias, alpha, beta);\n        save([x4D, y]);\n        return y;\n    }, { x4D: x4D }, backward);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    else {\n        return res;\n    }\n}\nexports.localResponseNormalization = operation_1.op({ localResponseNormalization_: localResponseNormalization_ });\n//# sourceMappingURL=lrn.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n */\n/** @doc {heading: 'Operations', subheading: 'RNN'} */\nfunction multiRNNCell_(lstmCells, data, c, h) {\n    var $data = tensor_util_env_1.convertToTensor(data, 'data', 'multiRNNCell');\n    var $c = tensor_util_env_1.convertToTensorArray(c, 'c', 'multiRNNCell');\n    var $h = tensor_util_env_1.convertToTensorArray(h, 'h', 'multiRNNCell');\n    var input = $data;\n    var newStates = [];\n    for (var i = 0; i < lstmCells.length; i++) {\n        var output = lstmCells[i](input, $c[i], $h[i]);\n        newStates.push(output[0]);\n        newStates.push(output[1]);\n        input = output[1];\n    }\n    var newC = [];\n    var newH = [];\n    for (var i = 0; i < newStates.length; i += 2) {\n        newC.push(newStates[i]);\n        newH.push(newStates[i + 1]);\n    }\n    return [newC, newH];\n}\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n */\n/** @doc {heading: 'Operations', subheading: 'RNN'} */\nfunction basicLSTMCell_(forgetBias, lstmKernel, lstmBias, data, c, h) {\n    var $forgetBias = tensor_util_env_1.convertToTensor(forgetBias, 'forgetBias', 'basicLSTMCell');\n    var $lstmKernel = tensor_util_env_1.convertToTensor(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n    var $lstmBias = tensor_util_env_1.convertToTensor(lstmBias, 'lstmBias', 'basicLSTMCell');\n    var $data = tensor_util_env_1.convertToTensor(data, 'data', 'basicLSTMCell');\n    var $c = tensor_util_env_1.convertToTensor(c, 'c', 'basicLSTMCell');\n    var $h = tensor_util_env_1.convertToTensor(h, 'h', 'basicLSTMCell');\n    var combined = $data.concat($h, 1);\n    var weighted = combined.matMul($lstmKernel);\n    var res = weighted.add($lstmBias);\n    // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n    var batchSize = res.shape[0];\n    var sliceCols = res.shape[1] / 4;\n    var sliceSize = [batchSize, sliceCols];\n    var i = res.slice([0, 0], sliceSize);\n    var j = res.slice([0, sliceCols], sliceSize);\n    var f = res.slice([0, sliceCols * 2], sliceSize);\n    var o = res.slice([0, sliceCols * 3], sliceSize);\n    var newC = i.sigmoid().mulStrict(j.tanh()).addStrict($c.mulStrict($forgetBias.add(f).sigmoid()));\n    var newH = newC.tanh().mulStrict(o.sigmoid());\n    return [newC, newH];\n}\nexports.basicLSTMCell = operation_1.op({ basicLSTMCell_: basicLSTMCell_ });\nexports.multiRNNCell = operation_1.op({ multiRNNCell_: multiRNNCell_ });\n//# sourceMappingURL=lstm.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_1 = require(\"../tensor_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n */\n/** @doc {heading: 'Operations', subheading: 'Moving Average'} */\nfunction movingAverage_(v, x, decay, step, zeroDebias) {\n    if (zeroDebias === void 0) { zeroDebias = true; }\n    var $v = tensor_util_env_1.convertToTensor(v, 'v', 'movingAverage');\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'movingAverage');\n    var $decay = tensor_util_env_1.convertToTensor(decay, 'decay', 'movingAverage');\n    tensor_util_1.assertTypesMatch($v, $x);\n    util.assert(util.arraysEqual($v.shape, $x.shape), function () { return 'Shape mismatch in v and x'; });\n    var one = tensor_ops_1.scalar(1);\n    var oneMinusDecay = one.sub($decay);\n    var update = $x.sub($v).mul(oneMinusDecay);\n    if (zeroDebias) {\n        util.assert(step != null, function () { return 'When using zeroDebias: true, step is required.'; });\n        var $step = tensor_util_env_1.convertToTensor(step, 'step', 'movingAverage');\n        update = update.div(one.sub(binary_ops_1.pow($decay, $step)));\n    }\n    return $v.add(update);\n}\nexports.movingAverage = operation_1.op({ movingAverage_: movingAverage_ });\n//# sourceMappingURL=moving_average.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\nvar slice_1 = require(\"./slice\");\nvar slice_util_1 = require(\"./slice_util\");\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction stridedSlice_(x, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    if (beginMask === void 0) { beginMask = 0; }\n    if (endMask === void 0) { endMask = 0; }\n    if (ellipsisMask === void 0) { ellipsisMask = 0; }\n    if (newAxisMask === void 0) { newAxisMask = 0; }\n    if (shrinkAxisMask === void 0) { shrinkAxisMask = 0; }\n    if (strides == null) {\n        strides = new Array(begin.length);\n    }\n    if (ellipsisMask !== 0) {\n        throw new Error('ellipsis mask is not yet supported');\n    }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'stridedSlice');\n    // Expand the dims of x based on the newAxisMask.\n    var expandAxes = slice_util_1.maskToAxes(newAxisMask);\n    var newShape = $x.shape.slice();\n    expandAxes.forEach(function (axis) {\n        begin[axis] = 0;\n        end[axis] = 1;\n        newShape.splice(axis, 0, 1);\n    });\n    $x = $x.reshape(newShape);\n    // Normalize the start, end and strides.\n    for (var axis = 0; axis < $x.rank; axis++) {\n        begin[axis] = slice_util_1.startForAxis(beginMask, begin, strides, $x.shape, axis);\n        end[axis] = slice_util_1.stopForAxis(endMask, end, strides, $x.shape, axis);\n        strides[axis] = strides[axis] || 1;\n    }\n    var shrinkAxes = slice_util_1.maskToAxes(shrinkAxisMask);\n    // Adjust the ends based on the shrink mask.\n    shrinkAxes.forEach(function (axis) {\n        end[axis] = begin[axis] + 1;\n        strides[axis] = 1;\n    });\n    // Figure out the output shape.\n    var size = slice_util_1.computeOutShape(begin, end, strides);\n    // Remove the axes based on shrinkMask.\n    var outShape = size.filter(function (_, axis) { return shrinkAxes.indexOf(axis) === -1; });\n    var nonStrided = strides.every(function (v) { return v === 1; });\n    if (nonStrided) {\n        return slice_1.slice($x, begin, size).reshape(outShape);\n    }\n    var res = engine_1.ENGINE.runKernelFunc(function (backend) { return backend.stridedSlice($x, begin, end, strides); }, { $x: $x });\n    return res.reshape(outShape);\n}\nexports.stridedSlice = operation_1.op({ stridedSlice_: stridedSlice_ });\n//# sourceMappingURL=strided_slice.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n */\n/** @doc {heading: 'Operations', subheading: 'Evaluation'} */\nfunction topk_(x, k, sorted) {\n    if (k === void 0) { k = 1; }\n    if (sorted === void 0) { sorted = true; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'topk');\n    if ($x.rank === 0) {\n        throw new Error('topk() expects the input to be of rank 1 or higher');\n    }\n    var lastDim = $x.shape[$x.shape.length - 1];\n    if (k > lastDim) {\n        throw new Error(\"'k' passed to topk() must be <= the last dimension (\" + lastDim + \") \" +\n            (\"but got \" + k));\n    }\n    var _a = engine_1.ENGINE.runKernelFunc(function (b) { return b.topk($x, k, sorted); }, { $x: $x }), values = _a[0], indices = _a[1];\n    return { values: values, indices: indices };\n}\nexports.topk = operation_1.op({ topk_: topk_ });\n//# sourceMappingURL=topk.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\nvar scatter_nd_util = require(\"./scatter_nd_util\");\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction scatterND_(indices, updates, shape) {\n    var $indices = tensor_util_env_1.convertToTensor(indices, 'indices', 'scatterND', 'int32');\n    var $updates = tensor_util_env_1.convertToTensor(updates, 'updates', 'scatterND');\n    scatter_nd_util.validateInput($updates, $indices, shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.scatterND($indices, $updates, shape); }, { $indices: $indices, $updates: $updates });\n}\nexports.scatterND = operation_1.op({ scatterND_: scatterND_ });\n//# sourceMappingURL=scatter_nd.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar sparse_to_dense = require(\"../ops/sparse_to_dense_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = 0; }\n    var $sparseIndices = tensor_util_env_1.convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n    var $sparseValues = tensor_util_env_1.convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n    var $defaultValue = tensor_util_env_1.convertToTensor(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n    sparse_to_dense.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.sparseToDense($sparseIndices, $sparseValues, outputShape, $defaultValue); }, { $sparseIndices: $sparseIndices, $sparseValues: $sparseValues, $defaultValue: $defaultValue });\n}\nexports.sparseToDense = operation_1.op({ sparseToDense_: sparseToDense_ });\n//# sourceMappingURL=sparse_to_dense.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nfunction validateInput(sparseIndices, sparseValues, outputShape, defaultValues) {\n    if (sparseIndices.dtype !== 'int32') {\n        throw new Error('tf.sparseToDense() expects the indices to be int32 type,' +\n            (\" but the dtype was \" + sparseIndices.dtype + \".\"));\n    }\n    if (sparseIndices.rank > 2) {\n        throw new Error('sparseIndices should be a scalar, vector, or matrix,' +\n            (\" but got shape \" + sparseIndices.shape + \".\"));\n    }\n    var numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n    var numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n    if (outputShape.length !== numDims) {\n        throw new Error('outputShape has incorrect number of elements:,' +\n            (\" \" + outputShape.length + \", should be: \" + numDims + \".\"));\n    }\n    var numValues = sparseValues.size;\n    if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n        throw new Error('sparseValues has incorrect shape ' +\n            (sparseValues.shape + \", should be [] or [\" + numElems + \"]\"));\n    }\n    if (sparseValues.dtype !== defaultValues.dtype) {\n        throw new Error('sparseValues.dtype must match defaultValues.dtype');\n    }\n}\nexports.validateInput = validateInput;\n//# sourceMappingURL=sparse_to_dense_util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction gatherND_(x, indices) {\n    var $indices = tensor_util_env_1.convertToTensor(indices, 'indices', 'gatherND', 'int32');\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'gatherND');\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.gatherND($x, $indices); }, { $x: $x, $indices: $indices });\n}\nexports.gatherND = operation_1.op({ gatherND_: gatherND_ });\n//# sourceMappingURL=gather_nd.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n */\nfunction diag_(x) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'diag').flatten();\n    var outShape = x.shape.concat(x.shape);\n    return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.diag($x); }, { $x: $x })\n        .reshape(outShape);\n}\nexports.diag = operation_1.op({ diag_: diag_ });\n//# sourceMappingURL=diag.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"../tensor\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar dropout_util_1 = require(\"./dropout_util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n */\n/** @doc {heading: 'Operations', subheading: 'Dropout'} */\nfunction dropout_(x, rate, noiseShape, seed) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'dropout');\n    util.assert($x.dtype === 'float32', function () { return \"x has to be a floating point tensor since it's going to be \" +\n        (\"scaled, but got a \" + $x.dtype + \" tensor instead.\"); });\n    util.assert(rate >= 0 && rate < 1, function () { return \"rate must be a float in the range [0, 1), but got \" + rate + \".\"; });\n    if (rate === 0) {\n        return x instanceof tensor_1.Tensor ? $x.clone() : $x;\n    }\n    var $noiseShape = dropout_util_1.getNoiseShape($x, noiseShape);\n    var keepProb = 1 - rate;\n    var multiplier = array_ops_1.randomUniform($noiseShape, 0, 1, 'float32', seed)\n        .add(keepProb)\n        .floor()\n        .div(keepProb);\n    return $x.mul(multiplier);\n}\nexports.dropout = operation_1.op({ dropout_: dropout_ });\n//# sourceMappingURL=dropout.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nfunction getNoiseShape(x, noiseShape) {\n    if (noiseShape == null) {\n        return x.shape.slice();\n    }\n    if (util.arraysEqual(x.shape, noiseShape)) {\n        return noiseShape;\n    }\n    if (x.shape.length === noiseShape.length) {\n        var newDimension = [];\n        for (var i = 0; i < x.shape.length; i++) {\n            if (noiseShape[i] == null && x.shape[i] != null) {\n                newDimension.push(x.shape[i]);\n            }\n            else {\n                newDimension.push(noiseShape[i]);\n            }\n        }\n        return newDimension;\n    }\n    return noiseShape;\n}\nexports.getNoiseShape = getNoiseShape;\n//# sourceMappingURL=dropout_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Evaluation'} */\nfunction inTopKAsync_(predictions, targets, k) {\n    if (k === void 0) { k = 1; }\n    return __awaiter(this, void 0, void 0, function () {\n        var $predictions, $targets, lastDim, predictionsVals, targetsVals, _a, batch, size, precision, b, offset, vals, valAndInd, i, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'inTopK');\n                    $targets = tensor_util_env_1.convertToTensor(targets, 'targets', 'inTopK');\n                    util_1.assert($predictions.rank > 1, function () { return 'inTopK() expects the predictions to be of rank 2 or higher, ' +\n                        (\"but got \" + $predictions.rank); });\n                    util_1.assert($predictions.rank - 1 === $targets.rank, function () { return \"predictions rank should be 1 larger than \" +\n                        \"targets rank, but got predictions rank \" +\n                        ($predictions.rank + \" and targets rank \" + $targets.rank); });\n                    util_1.assertShapesMatch($predictions.shape.slice(0, $predictions.shape.length - 1), $targets.shape, \"predictions's shape should be align with the targets' shape, \" +\n                        'except the last dimension.');\n                    lastDim = $predictions.shape[$predictions.shape.length - 1];\n                    util_1.assert(k > 0 && k <= lastDim, function () { return \"'k' passed to inTopK() must be > 0 && <= the predictions last \" +\n                        (\"dimension (\" + lastDim + \"), but got \" + k); });\n                    return [4 /*yield*/, $predictions.data()];\n                case 1:\n                    predictionsVals = _b.sent();\n                    return [4 /*yield*/, $targets.data()];\n                case 2:\n                    targetsVals = _b.sent();\n                    _a = [predictionsVals.length / lastDim, lastDim], batch = _a[0], size = _a[1];\n                    precision = util_1.getTypedArrayFromDType('bool', batch);\n                    for (b = 0; b < batch; b++) {\n                        offset = b * size;\n                        vals = predictionsVals.subarray(offset, offset + size);\n                        valAndInd = [];\n                        for (i = 0; i < vals.length; i++) {\n                            valAndInd.push({ value: vals[i], index: i });\n                        }\n                        valAndInd.sort(function (a, b) { return b.value - a.value; });\n                        precision[b] = 0;\n                        for (i = 0; i < k; i++) {\n                            if (valAndInd[i].index === targetsVals[b]) {\n                                precision[b] = 1;\n                                break;\n                            }\n                        }\n                    }\n                    if (predictions !== $predictions) {\n                        $predictions.dispose();\n                    }\n                    if (targets !== $targets) {\n                        $targets.dispose();\n                    }\n                    // Output precision has the same shape as targets.\n                    return [2 /*return*/, tensor_ops_1.tensor(precision, $targets.shape, 'bool')];\n            }\n        });\n    });\n}\nexports.inTopKAsync = inTopKAsync_;\n//# sourceMappingURL=in_top_k.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Linear algebra ops.\n */\nvar engine_1 = require(\"../engine\");\nvar globals_1 = require(\"../globals\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar concat_split_1 = require(\"./concat_split\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar norm_1 = require(\"./norm\");\nvar operation_1 = require(\"./operation\");\nvar reduction_ops_1 = require(\"./reduction_ops\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n */\n/**\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction bandPart_(a, numLower, numUpper) {\n    if (numLower % 1 !== 0) {\n        throw new Error(\"bandPart(): numLower must be an integer, got \" + numLower + \".\");\n    }\n    if (numUpper % 1 !== 0) {\n        throw new Error(\"bandPart(): numUpper must be an integer, got \" + numUpper + \".\");\n    }\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'bandPart');\n    if ($a.rank < 2) {\n        throw new Error(\"bandPart(): Rank must be at least 2, got \" + $a.rank + \".\");\n    }\n    var shape = $a.shape, _a = $a.shape.slice(-2), M = _a[0], N = _a[1];\n    if (!(numLower <= M)) {\n        throw new Error(\"bandPart(): numLower (\" + numLower + \")\" +\n            (\" must not be greater than the number of rows (\" + M + \").\"));\n    }\n    if (!(numUpper <= N)) {\n        throw new Error(\"bandPart(): numUpper (\" + numUpper + \")\" +\n            (\" must not be greater than the number of columns (\" + N + \").\"));\n    }\n    if (numLower < 0) {\n        numLower = M;\n    }\n    if (numUpper < 0) {\n        numUpper = N;\n    }\n    var i = tensor_ops_1.range(0, M, 1, 'int32').reshape([-1, 1]), j = tensor_ops_1.range(0, N, 1, 'int32'), ij = binary_ops_1.sub(i, j);\n    var inBand = logical_ops_1.logicalAnd(ij.lessEqual(tensor_ops_1.scalar(+numLower, 'int32')), ij.greaterEqual(tensor_ops_1.scalar(-numUpper, 'int32')));\n    var zero = tensor_ops_1.zeros([M, N], $a.dtype);\n    return array_ops_1.stack(array_ops_1.unstack($a.reshape([-1, M, N])).map(function (mat) { return logical_ops_1.where(inBand, mat, zero); })).reshape(shape);\n}\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n */\n/**\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction gramSchmidt_(xs) {\n    var inputIsTensor2D;\n    if (Array.isArray(xs)) {\n        inputIsTensor2D = false;\n        util_1.assert(xs != null && xs.length > 0, function () { return 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty'; });\n        var dim_1 = xs[0].shape[0];\n        var _loop_1 = function (i) {\n            util_1.assert(xs[i].shape[0] === dim_1, function () {\n                return 'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n                    (\"(\" + xs[i].shape[0] + \" vs. \" + dim_1 + \")\");\n            });\n        };\n        for (var i = 1; i < xs.length; ++i) {\n            _loop_1(i);\n        }\n    }\n    else {\n        inputIsTensor2D = true;\n        xs = concat_split_1.split(xs, xs.shape[0], 0).map(function (x) { return array_ops_1.squeeze(x, [0]); });\n    }\n    util_1.assert(xs.length <= xs[0].shape[0], function () { return \"Gram-Schmidt: Number of vectors (\" + xs.length + \") exceeds \" +\n        (\"number of dimensions (\" + xs[0].shape[0] + \").\"); });\n    var ys = [];\n    var xs1d = xs;\n    var _loop_2 = function (i) {\n        ys.push(engine_1.ENGINE.tidy(function () {\n            var x = xs1d[i];\n            if (i > 0) {\n                for (var j = 0; j < i; ++j) {\n                    var proj = reduction_ops_1.sum(ys[j].mulStrict(x)).mul(ys[j]);\n                    x = x.sub(proj);\n                }\n            }\n            return x.div(norm_1.norm(x, 'euclidean'));\n        }));\n    };\n    for (var i = 0; i < xs.length; ++i) {\n        _loop_2(i);\n    }\n    if (inputIsTensor2D) {\n        return array_ops_1.stack(ys, 0);\n    }\n    else {\n        return ys;\n    }\n}\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n */\n/**\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x, fullMatrices) {\n    if (fullMatrices === void 0) { fullMatrices = false; }\n    if (x.rank < 2) {\n        throw new Error(\"qr() requires input tensor to have a rank >= 2, but got rank \" + x.rank);\n    }\n    else if (x.rank === 2) {\n        return qr2d(x, fullMatrices);\n    }\n    else {\n        // Rank > 2.\n        // TODO(cais): Below we split the input into individual 2D tensors,\n        //   perform QR decomposition on them and then stack the results back\n        //   together. We should explore whether this can be parallelized.\n        var outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n            .reduce(function (value, prev) { return value * prev; });\n        var x2ds = array_ops_1.unstack(x.reshape([\n            outerDimsProd, x.shape[x.shape.length - 2],\n            x.shape[x.shape.length - 1]\n        ]), 0);\n        var q2ds_1 = [];\n        var r2ds_1 = [];\n        x2ds.forEach(function (x2d) {\n            var _a = qr2d(x2d, fullMatrices), q2d = _a[0], r2d = _a[1];\n            q2ds_1.push(q2d);\n            r2ds_1.push(r2d);\n        });\n        var q = array_ops_1.stack(q2ds_1, 0).reshape(x.shape);\n        var r = array_ops_1.stack(r2ds_1, 0).reshape(x.shape);\n        return [q, r];\n    }\n}\nfunction qr2d(x, fullMatrices) {\n    if (fullMatrices === void 0) { fullMatrices = false; }\n    return engine_1.ENGINE.tidy(function () {\n        if (x.shape.length !== 2) {\n            throw new Error(\"qr2d() requires a 2D Tensor, but got a \" + x.shape.length + \"D Tensor.\");\n        }\n        var m = x.shape[0];\n        var n = x.shape[1];\n        var q = array_ops_1.eye(m); // Orthogonal transform so far.\n        var r = x.clone(); // Transformed matrix so far.\n        var one2D = tensor_ops_1.tensor2d([[1]], [1, 1]);\n        var w = one2D.clone();\n        var iters = m >= n ? n : m;\n        var _loop_3 = function (j) {\n            var _a;\n            // This tidy within the for-loop ensures we clean up temporary\n            // tensors as soon as they are no longer needed.\n            var rTemp = r;\n            var wTemp = w;\n            var qTemp = q;\n            _a = engine_1.ENGINE.tidy(function () {\n                // Find H = I - tau * w * w', to put zeros below R(j, j).\n                var rjEnd1 = r.slice([j, j], [m - j, 1]);\n                var normX = rjEnd1.norm();\n                var rjj = r.slice([j, j], [1, 1]);\n                // The sign() function returns 0 on 0, which causes division by zero.\n                var s = tensor_ops_1.tensor2d([[-1]]).where(rjj.greater(0), tensor_ops_1.tensor2d([[1]]));\n                var u1 = rjj.sub(s.mul(normX));\n                var wPre = rjEnd1.div(u1);\n                if (wPre.shape[0] === 1) {\n                    w = one2D.clone();\n                }\n                else {\n                    w = one2D.concat(wPre.slice([1, 0], [wPre.shape[0] - 1, wPre.shape[1]]), 0);\n                }\n                var tau = s.matMul(u1).div(normX).neg();\n                // -- R := HR, Q := QH.\n                var rjEndAll = r.slice([j, 0], [m - j, n]);\n                var tauTimesW = tau.mul(w);\n                if (j === 0) {\n                    r = rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll)));\n                }\n                else {\n                    var rTimesTau = rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll)));\n                    r = r.slice([0, 0], [j, n]).concat(rTimesTau, 0);\n                }\n                var qAllJEnd = q.slice([0, j], [m, q.shape[1] - j]);\n                if (j === 0) {\n                    q = qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose()));\n                }\n                else {\n                    var qTimesTau = qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose()));\n                    q = q.slice([0, 0], [m, j]).concat(qTimesTau, 1);\n                }\n                return [w, r, q];\n            }), w = _a[0], r = _a[1], q = _a[2];\n            globals_1.dispose([rTemp, wTemp, qTemp]);\n        };\n        for (var j = 0; j < iters; ++j) {\n            _loop_3(j);\n        }\n        if (!fullMatrices && m > n) {\n            q = q.slice([0, 0], [m, n]);\n            r = r.slice([0, 0], [n, n]);\n        }\n        return [q, r];\n    });\n}\nexports.bandPart = operation_1.op({ bandPart_: bandPart_ });\nexports.gramSchmidt = operation_1.op({ gramSchmidt_: gramSchmidt_ });\nexports.qr = operation_1.op({ qr_: qr_ });\n//# sourceMappingURL=linalg_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar non_max_suppression_impl_1 = require(\"../backends/non_max_suppression_impl\");\nvar engine_1 = require(\"../engine\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\n/**\n * Bilinear resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction resizeBilinear_(images, size, alignCorners) {\n    if (alignCorners === void 0) { alignCorners = false; }\n    var $images = tensor_util_env_1.convertToTensor(images, 'images', 'resizeBilinear');\n    util.assert($images.rank === 3 || $images.rank === 4, function () { return \"Error in resizeBilinear: x must be rank 3 or 4, but got \" +\n        (\"rank \" + $images.rank + \".\"); });\n    util.assert(size.length === 2, function () { return \"Error in resizeBilinear: new shape must 2D, but got shape \" +\n        (size + \".\"); });\n    var batchImages = $images;\n    var reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages =\n            $images.as4D(1, $images.shape[0], $images.shape[1], $images.shape[2]);\n    }\n    var newHeight = size[0], newWidth = size[1];\n    var forward = function (backend, save) {\n        save([batchImages]);\n        return backend.resizeBilinear(batchImages, newHeight, newWidth, alignCorners);\n    };\n    var backward = function (dy, saved) {\n        return {\n            x: function () { return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.resizeBilinearBackprop(dy, saved[0], alignCorners); }, {}); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(forward, { x: batchImages }, backward, 'ResizeBilinear', { alignCorners: alignCorners, newHeight: newHeight, newWidth: newWidth });\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction resizeNearestNeighbor_(images, size, alignCorners) {\n    if (alignCorners === void 0) { alignCorners = false; }\n    var $images = tensor_util_env_1.convertToTensor(images, 'images', 'resizeNearestNeighbor');\n    util.assert($images.rank === 3 || $images.rank === 4, function () { return \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" +\n        (\"rank \" + $images.rank + \".\"); });\n    util.assert(size.length === 2, function () {\n        return \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" +\n            (size + \".\");\n    });\n    util.assert($images.dtype === 'float32' || $images.dtype === 'int32', function () { return '`images` must have `int32` or `float32` as dtype'; });\n    var batchImages = $images;\n    var reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages =\n            $images.as4D(1, $images.shape[0], $images.shape[1], $images.shape[2]);\n    }\n    var newHeight = size[0], newWidth = size[1];\n    var forward = function (backend, save) {\n        save([batchImages]);\n        return backend.resizeNearestNeighbor(batchImages, newHeight, newWidth, alignCorners);\n    };\n    var backward = function (dy, saved) {\n        return {\n            batchImages: function () { return engine_1.ENGINE.runKernelFunc(function (backend) { return backend.resizeNearestNeighborBackprop(dy, saved[0], alignCorners); }, {}); }\n        };\n    };\n    var res = engine_1.ENGINE.runKernelFunc(forward, { batchImages: batchImages }, backward);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union)\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    if (iouThreshold === void 0) { iouThreshold = 0.5; }\n    if (scoreThreshold === void 0) { scoreThreshold = Number.NEGATIVE_INFINITY; }\n    var $boxes = tensor_util_env_1.convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    var $scores = tensor_util_env_1.convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    var inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    var attrs = { maxOutputSize: maxOutputSize, iouThreshold: iouThreshold, scoreThreshold: scoreThreshold };\n    return engine_1.ENGINE.runKernelFunc(function (b) { return b.nonMaxSuppression($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold); }, { boxes: $boxes, scores: $scores }, null /* grad */, 'NonMaxSuppressionV3', attrs);\n}\n/** This is the async version of `nonMaxSuppression` */\nfunction nonMaxSuppressionAsync_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    if (iouThreshold === void 0) { iouThreshold = 0.5; }\n    if (scoreThreshold === void 0) { scoreThreshold = Number.NEGATIVE_INFINITY; }\n    return __awaiter(this, void 0, void 0, function () {\n        var $boxes, $scores, inputs, boxesAndScores, boxesVals, scoresVals, res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    $boxes = tensor_util_env_1.convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n                    $scores = tensor_util_env_1.convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n                    inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n                    maxOutputSize = inputs.maxOutputSize;\n                    iouThreshold = inputs.iouThreshold;\n                    scoreThreshold = inputs.scoreThreshold;\n                    return [4 /*yield*/, Promise.all([$boxes.data(), $scores.data()])];\n                case 1:\n                    boxesAndScores = _a.sent();\n                    boxesVals = boxesAndScores[0];\n                    scoresVals = boxesAndScores[1];\n                    res = non_max_suppression_impl_1.nonMaxSuppressionImpl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n                    if ($boxes !== boxes) {\n                        $boxes.dispose();\n                    }\n                    if ($scores !== scores) {\n                        $scores.dispose();\n                    }\n                    return [2 /*return*/, res];\n            }\n        });\n    });\n}\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    if (iouThreshold == null) {\n        iouThreshold = 0.5;\n    }\n    if (scoreThreshold == null) {\n        scoreThreshold = Number.NEGATIVE_INFINITY;\n    }\n    var numBoxes = boxes.shape[0];\n    maxOutputSize = Math.min(maxOutputSize, numBoxes);\n    util.assert(0 <= iouThreshold && iouThreshold <= 1, function () { return \"iouThreshold must be in [0, 1], but was '\" + iouThreshold + \"'\"; });\n    util.assert(boxes.rank === 2, function () { return \"boxes must be a 2D tensor, but was of rank '\" + boxes.rank + \"'\"; });\n    util.assert(boxes.shape[1] === 4, function () {\n        return \"boxes must have 4 columns, but 2nd dimension was \" + boxes.shape[1];\n    });\n    util.assert(scores.rank === 1, function () { return 'scores must be a 1D tensor'; });\n    util.assert(scores.shape[0] === numBoxes, function () { return \"scores has incompatible shape with boxes. Expected \" + numBoxes + \", \" +\n        (\"but was \" + scores.shape[0]); });\n    return { maxOutputSize: maxOutputSize, iouThreshold: iouThreshold, scoreThreshold: scoreThreshold };\n}\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by crop_size.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction cropAndResize_(image, boxes, boxInd, cropSize, method, extrapolationValue) {\n    var $image = tensor_util_env_1.convertToTensor(image, 'image', 'cropAndResize');\n    var $boxes = tensor_util_env_1.convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n    var $boxInd = tensor_util_env_1.convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n    method = method || 'bilinear';\n    extrapolationValue = extrapolationValue || 0;\n    var numBoxes = $boxes.shape[0];\n    util.assert($image.rank === 4, function () { return 'Error in cropAndResize: image must be rank 4,' +\n        (\"but got rank \" + $image.rank + \".\"); });\n    util.assert($boxes.rank === 2 && $boxes.shape[1] === 4, function () { return \"Error in cropAndResize: boxes must be have size [\" + numBoxes + \",4] \" +\n        (\"but had shape \" + $boxes.shape + \".\"); });\n    util.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, function () { return \"Error in cropAndResize: boxInd must be have size [\" + numBoxes + \"] \" +\n        (\"but had shape \" + $boxes.shape + \".\"); });\n    util.assert(cropSize.length === 2, function () { return \"Error in cropAndResize: cropSize must be of length 2, but got \" +\n        (\"length \" + cropSize.length + \".\"); });\n    util.assert(cropSize[0] >= 1 && cropSize[1] >= 1, function () { return \"cropSize must be atleast [1,1], but was \" + cropSize; });\n    util.assert(method === 'bilinear' || method === 'nearest', function () { return \"method must be bilinear or nearest, but was \" + method; });\n    var forward = function (backend, save) {\n        return backend.cropAndResize($image, $boxes, $boxInd, cropSize, method, extrapolationValue);\n    };\n    var res = engine_1.ENGINE.runKernelFunc(forward, { images: $image, boxes: $boxes, boxInd: $boxInd }, null /* der */, 'CropAndResize', { method: method, extrapolationValue: extrapolationValue, cropSize: cropSize });\n    return res;\n}\nexports.resizeBilinear = operation_1.op({ resizeBilinear_: resizeBilinear_ });\nexports.resizeNearestNeighbor = operation_1.op({ resizeNearestNeighbor_: resizeNearestNeighbor_ });\nexports.nonMaxSuppression = operation_1.op({ nonMaxSuppression_: nonMaxSuppression_ });\nexports.nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\nexports.cropAndResize = operation_1.op({ cropAndResize_: cropAndResize_ });\n//# sourceMappingURL=image_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar conv_1 = require(\"../ops/conv\");\nvar conv_util = require(\"../ops/conv_util\");\nvar operation_1 = require(\"../ops/operation\");\nvar tensor_util_1 = require(\"../tensor_util\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar broadcast_util = require(\"./broadcast_util\");\nvar conv_2 = require(\"./conv\");\nvar fused_util_1 = require(\"./fused_util\");\nvar matmul_1 = require(\"./matmul\");\nvar relu_ops_1 = require(\"./relu_ops\");\n// Returns gradient for fused activation.\nvar getFusedDyActivation = function (dy, y, activation) {\n    if (activation == null || activation === 'linear') {\n        return dy;\n    }\n    if (activation === 'relu') {\n        return dy.mul(y.step());\n    }\n    throw new Error(\"Gradient for activation \" + activation + \" has not been \" +\n        \"implemented yet.\");\n};\n// Returns gradient for fused bias.\nvar getFusedBiasGradient = function (bias, dyActivation) {\n    var res = dyActivation;\n    var reduceAxes = broadcast_util.getReductionAxes(bias.shape, dyActivation.shape);\n    if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n    }\n    return res.reshape(bias.shape);\n};\nvar applyActivation = function (x, activation, preluActivationWeights) {\n    if (activation === 'linear') {\n        return x;\n    }\n    else if (activation === 'relu') {\n        return relu_ops_1.relu(x);\n    }\n    else if (activation === 'elu') {\n        return relu_ops_1.elu(x);\n    }\n    else if (activation === 'relu6') {\n        return relu_ops_1.relu6(x);\n    }\n    else if (activation === 'prelu') {\n        return relu_ops_1.prelu(x, preluActivationWeights);\n    }\n    throw new Error(\"Unknown fused activation \" + activation + \".\");\n};\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n */\nfunction fusedMatMul_(_a) {\n    var _b;\n    var a = _a.a, b = _a.b, _c = _a.transposeA, transposeA = _c === void 0 ? false : _c, _d = _a.transposeB, transposeB = _d === void 0 ? false : _d, bias = _a.bias, _e = _a.activation, activation = _e === void 0 ? 'linear' : _e, preluActivationWeights = _a.preluActivationWeights;\n    if (fused_util_1.shouldFuse(engine_1.ENGINE.state.gradientDepth, activation) === false) {\n        var result = matmul_1.matMul(a, b, transposeA, transposeB);\n        if (bias != null) {\n            result = binary_ops_1.add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights);\n    }\n    var $a = tensor_util_env_1.convertToTensor(a, 'a', 'fused matMul');\n    var $b = tensor_util_env_1.convertToTensor(b, 'b', 'fused matMul');\n    _b = tensor_util_1.makeTypesMatch($a, $b), $a = _b[0], $b = _b[1];\n    var innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    var innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n    var outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    var outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n    var outerDimsA = $a.shape.slice(0, -2);\n    var outerDimsB = $b.shape.slice(0, -2);\n    var batchDimA = util.sizeFromShape(outerDimsA);\n    var batchDimB = util.sizeFromShape(outerDimsB);\n    util.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, function () {\n        return \"Error in fused matMul: inputs must have the same rank of at least \" +\n            (\"2, got ranks \" + $a.rank + \" and \" + $b.rank + \".\");\n    });\n    util.assert(util.arraysEqual(outerDimsA, outerDimsB), function () { return \"Error in fused matMul: outer dimensions (\" + outerDimsA + \") and (\" +\n        (outerDimsB + \") of Tensors with shapes \" + $a.shape + \" and \") +\n        ($b.shape + \" must match.\"); });\n    util.assert(innerShapeA === innerShapeB, function () { return \"Error in fused matMul: inner shapes (\" + innerShapeA + \") and (\" +\n        (innerShapeB + \") of Tensors with shapes \" + $a.shape + \" and \") +\n        ($b.shape + \" and transposeA=\" + transposeA) +\n        (\" and transposeB=\" + transposeB + \" must match.\"); });\n    var outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n    var a3D = transposeA ? $a.as3D(batchDimA, innerShapeA, outerShapeA) :\n        $a.as3D(batchDimA, outerShapeA, innerShapeA);\n    var b3D = transposeB ? $b.as3D(batchDimB, outerShapeB, innerShapeB) :\n        $b.as3D(batchDimB, innerShapeB, outerShapeB);\n    var $bias;\n    if (bias != null) {\n        $bias = tensor_util_env_1.convertToTensor(bias, 'bias', 'fused matMul');\n        $bias = tensor_util_1.makeTypesMatch($bias, $a)[0];\n        broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n    var $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = tensor_util_env_1.convertToTensor(preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n    var grad = function (dy, saved) {\n        var a3D = saved[0], b3D = saved[1], y = saved[2];\n        var dyActivation = getFusedDyActivation(dy, y, activation);\n        var biasGradient = {};\n        if (bias != null) {\n            biasGradient = { $bias: function () { return getFusedBiasGradient($bias, dyActivation); } };\n        }\n        if (!transposeA && !transposeB) {\n            return Object.assign({\n                $a: function () { return dyActivation.matMul(b3D, false, true); },\n                $b: function () { return a3D.matMul(dyActivation, true, false); }\n            }, biasGradient);\n        }\n        else if (!transposeA && transposeB) {\n            return Object.assign({\n                $a: function () { return dyActivation.matMul(b3D, false, false); },\n                $b: function () { return dyActivation.matMul(a3D, true, false); }\n            }, biasGradient);\n        }\n        else if (transposeA && !transposeB) {\n            return Object.assign({\n                $a: function () { return b3D.matMul(dyActivation, false, true); },\n                $b: function () { return a3D.matMul(dyActivation, false, false); }\n            }, biasGradient);\n        }\n        else {\n            return Object.assign({\n                $a: function () { return b3D.matMul(dyActivation, true, true); },\n                $b: function () { return dyActivation.matMul(a3D, true, true); }\n            }, biasGradient);\n        }\n    };\n    var inputs = { $a: a3D, $b: b3D };\n    if (bias != null) {\n        inputs.$bias = $bias;\n    }\n    if (preluActivationWeights != null) {\n        inputs.$preluActivationWeights = $preluActivationWeights;\n    }\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var y = backend.fusedBatchMatMul({\n            a: a3D,\n            b: b3D,\n            transposeA: transposeA,\n            transposeB: transposeB,\n            bias: $bias,\n            activation: activation,\n            preluActivationWeights: $preluActivationWeights\n        });\n        save([a3D, b3D, y]);\n        return y;\n    }, inputs, grad);\n    return res.reshape(outShape);\n}\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n */\nfunction fusedConv2d_(_a) {\n    var x = _a.x, filter = _a.filter, strides = _a.strides, pad = _a.pad, _b = _a.dataFormat, dataFormat = _b === void 0 ? 'NHWC' : _b, _c = _a.dilations, dilations = _c === void 0 ? [1, 1] : _c, dimRoundingMode = _a.dimRoundingMode, bias = _a.bias, _d = _a.activation, activation = _d === void 0 ? 'linear' : _d, preluActivationWeights = _a.preluActivationWeights;\n    activation = activation || 'linear';\n    if (fused_util_1.shouldFuse(engine_1.ENGINE.state.gradientDepth, activation) === false) {\n        var result = conv_2.conv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = binary_ops_1.add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights);\n    }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'conv2d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'conv2d');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in fused conv2d: input must be rank 4, but got rank \" +\n        (x4D.rank + \".\"); });\n    util.assert($filter.rank === 4, function () { return \"Error in fused conv2d: filter must be rank 4, but got rank \" +\n        ($filter.rank + \".\"); });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in fused conv2d: pad must be an integer when using, \" +\n            (\"dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    util.assert(x4D.shape[3] === $filter.shape[2], function () { return \"Error in conv2d: depth of input (\" + x4D.shape[3] + \") must match \" +\n        (\"input depth for filter \" + $filter.shape[2] + \".\"); });\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () { return 'Error in conv2D: Either strides or dilations must be 1. ' +\n        (\"Got strides \" + strides + \" and dilations '\" + dilations + \"'\"); });\n    util.assert(dataFormat === 'NHWC', function () { return \"Error in conv2d: got dataFormat of \" + dataFormat + \" but only NHWC is currently supported.\"; });\n    var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n    var $bias;\n    if (bias != null) {\n        $bias = tensor_util_env_1.convertToTensor(bias, 'bias', 'fused conv2d');\n        $bias = tensor_util_1.makeTypesMatch($bias, $x)[0];\n        broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    var $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = tensor_util_env_1.convertToTensor(preluActivationWeights, 'prelu weights', 'fused conv2d');\n    }\n    var grad = function (dy, saved) {\n        var _a = saved, $filter = _a[0], x4D = _a[1], y = _a[2];\n        var dyActivation = getFusedDyActivation(dy, y, activation);\n        util.assert(conv_util.tupleValuesAreOne(dilations), function () { return 'Error in gradient of fused conv2D: ' +\n            \"dilation rates greater than 1 \" +\n            (\"are not yet supported in gradients. Got dilations '\" + dilations + \"'\"); });\n        var biasGradient = {};\n        if (bias != null) {\n            biasGradient = { bias: function () { return getFusedBiasGradient($bias, dyActivation); } };\n        }\n        return Object.assign({\n            x: function () {\n                return conv_1.conv2dDerInput(x4D.shape, dyActivation, $filter, strides, pad);\n            },\n            filter: function () {\n                return conv_1.conv2dDerFilter(x4D, dyActivation, $filter.shape, strides, pad);\n            }\n        }, biasGradient);\n    };\n    var inputs = { x: x4D, filter: $filter };\n    if (bias != null) {\n        inputs.bias = $bias;\n    }\n    if (preluActivationWeights != null) {\n        inputs.preluActivationWeights = $preluActivationWeights;\n    }\n    var inputsToSave = [$filter, x4D];\n    var outputsToSave = [true]; // Save the only output.\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.fusedConv2d({\n            input: x4D,\n            filter: $filter,\n            convInfo: convInfo,\n            bias: $bias,\n            activation: activation,\n            preluActivationWeights: $preluActivationWeights\n        });\n        save([$filter, x4D, res]);\n        return res;\n    }, inputs, grad, 'FusedConv2D', { convInfo: convInfo, activation: activation }, inputsToSave, outputsToSave);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n */\nfunction fusedDepthwiseConv2d_(_a) {\n    var x = _a.x, filter = _a.filter, strides = _a.strides, pad = _a.pad, _b = _a.dataFormat, dataFormat = _b === void 0 ? 'NHWC' : _b, _c = _a.dilations, dilations = _c === void 0 ? [1, 1] : _c, dimRoundingMode = _a.dimRoundingMode, bias = _a.bias, _d = _a.activation, activation = _d === void 0 ? 'linear' : _d, preluActivationWeights = _a.preluActivationWeights;\n    if (fused_util_1.shouldFuse(engine_1.ENGINE.state.gradientDepth, activation) === false) {\n        var result = conv_2.depthwiseConv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = binary_ops_1.add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights);\n    }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'depthwiseConv2d');\n    var $filter = tensor_util_env_1.convertToTensor(filter, 'filter', 'depthwiseConv2d');\n    var x4D = $x;\n    var reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n    }\n    util.assert(x4D.rank === 4, function () { return \"Error in fused depthwiseConv2d: input must be rank 4, but got \" +\n        (\"rank \" + x4D.rank + \".\"); });\n    util.assert($filter.rank === 4, function () { return \"Error in fused depthwiseConv2d: filter must be rank 4, \" +\n        (\"but got rank \" + $filter.rank + \".\"); });\n    util.assert(x4D.shape[3] === $filter.shape[2], function () { return \"Error in fused depthwiseConv2d: number of input channels \" +\n        (\"(\" + x4D.shape[3] + \") must match the inChannels dimension in \") +\n        (\"filter \" + $filter.shape[2] + \".\"); });\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), function () {\n        return 'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n            (\"be 1. Got strides \" + strides + \" and dilations '\" + dilations + \"'\");\n    });\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), function () { return \"Error in fused depthwiseConv2d: pad must be an integer when \" +\n            (\"using dimRoundingMode \" + dimRoundingMode + \" but got pad \" + pad + \".\"); });\n    }\n    var convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    var $bias;\n    if (bias != null) {\n        $bias = tensor_util_env_1.convertToTensor(bias, 'bias', 'fused conv2d');\n        $bias = tensor_util_1.makeTypesMatch($bias, $x)[0];\n        broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    var $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = tensor_util_env_1.convertToTensor(preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n    }\n    var grad = function (dy, saved) {\n        util.assert(conv_util.tupleValuesAreOne(dilations), function () { return 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            \"greater than 1 are not yet supported. Got dilations \" +\n            (\"'\" + dilations + \"'\"); });\n        var $filter = saved[0], x4D = saved[1], y = saved[2];\n        var dyActivation = getFusedDyActivation(dy, y, activation);\n        var biasGradient = {};\n        if (bias != null) {\n            biasGradient = { bias: function () { return getFusedBiasGradient($bias, dyActivation); } };\n        }\n        return Object.assign({\n            x: function () { return conv_1.depthwiseConv2dDerInput(x4D.shape, dyActivation, $filter, convInfo); },\n            filter: function () { return conv_1.depthwiseConv2dDerFilter(x4D, dyActivation, $filter.shape, convInfo); },\n        }, biasGradient);\n    };\n    var inputs = { x: x4D, filter: $filter };\n    if (bias != null) {\n        inputs.bias = $bias;\n    }\n    if (preluActivationWeights != null) {\n        inputs.preluActivationWeights = $preluActivationWeights;\n    }\n    var inputsToSave = [$filter, x4D];\n    var outputsToSave = [true];\n    var res = engine_1.ENGINE.runKernelFunc(function (backend, save) {\n        var res = backend.fusedDepthwiseConv2D({\n            input: x4D,\n            filter: $filter,\n            convInfo: convInfo,\n            bias: $bias,\n            activation: activation,\n            preluActivationWeights: $preluActivationWeights\n        });\n        save([$filter, x4D, res]);\n        return res;\n    }, inputs, grad, 'FusedDepthwiseConv2D', { convInfo: convInfo, activation: activation }, inputsToSave, outputsToSave);\n    if (reshapedTo4D) {\n        return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n    }\n    return res;\n}\nexports.matMul = operation_1.op({ fusedMatMul_: fusedMatMul_ });\nexports.conv2d = operation_1.op({ fusedConv2d_: fusedConv2d_ });\nexports.depthwiseConv2d = operation_1.op({ fusedDepthwiseConv2d_: fusedDepthwiseConv2d_ });\n//# sourceMappingURL=fused_ops.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Whether we should call fused ops.\nexports.shouldFuse = function (gradientDepth, activation) {\n    var gradientMode = gradientDepth > 0;\n    return !gradientMode || activation === 'linear';\n};\n//# sourceMappingURL=fused_util.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nrequire(\"./square\");\n//# sourceMappingURL=all_kernels.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar kernel_registry_1 = require(\"../../kernel_registry\");\nvar cpu_util_1 = require(\"./cpu_util\");\nkernel_registry_1.registerKernel({\n    kernelName: 'Square',\n    backendName: 'cpu',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend;\n        var x = inputs.x;\n        var cpuBackend = backend;\n        cpu_util_1.assertNotComplex(x, 'square');\n        var values = cpuBackend.data.get(x.dataId).values;\n        var newValues = new Float32Array(values.length);\n        for (var i = 0; i < values.length; ++i) {\n            var value = values[i];\n            newValues[i] = value * value;\n        }\n        var dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n        return { dataId: dataId, shape: x.shape, dtype: x.dtype };\n    }\n});\n//# sourceMappingURL=square.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nrequire(\"./square\");\nrequire(\"./fromPixels\");\n//# sourceMappingURL=all_kernels.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar kernel_registry_1 = require(\"../../kernel_registry\");\nvar unaryop_gpu_1 = require(\"./unaryop_gpu\");\nkernel_registry_1.registerKernel({\n    kernelName: 'Square',\n    backendName: 'webgl',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend;\n        var x = inputs.x;\n        var webglBackend = backend;\n        var program = new unaryop_gpu_1.UnaryOpProgram(x.shape, unaryop_gpu_1.SQUARE);\n        return webglBackend.runWebGLProgram(program, [x], x.dtype);\n    }\n});\n//# sourceMappingURL=square.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar kernel_registry_1 = require(\"../../kernel_registry\");\nvar from_pixels_gpu_1 = require(\"./from_pixels_gpu\");\nvar from_pixels_packed_gpu_1 = require(\"./from_pixels_packed_gpu\");\nvar tex_util_1 = require(\"./tex_util\");\nkernel_registry_1.registerKernel({\n    kernelName: 'FromPixels',\n    backendName: 'webgl',\n    kernelFunc: fromPixels,\n});\nvar fromPixels2DContext;\nfunction fromPixels(args) {\n    var inputs = args.inputs, backend = args.backend, attrs = args.attrs;\n    var pixels = inputs.pixels;\n    var numChannels = attrs.numChannels;\n    var isVideo = typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement;\n    var isImage = typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement;\n    var _a = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height], width = _a[0], height = _a[1];\n    var texShape = [height, width];\n    var outShape = [height, width, numChannels];\n    if (isImage || isVideo) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        pixels = fromPixels2DContext.canvas;\n    }\n    var tempPixelHandle = backend.makeTensorInfo(texShape, 'int32');\n    // This is a byte texture with pixels.\n    backend.texData.get(tempPixelHandle.dataId).usage = tex_util_1.TextureUsage.PIXELS;\n    backend.gpgpu.uploadPixelDataToTexture(backend.getTexture(tempPixelHandle.dataId), pixels);\n    var program = environment_1.env().getBool('WEBGL_PACK') ?\n        new from_pixels_packed_gpu_1.FromPixelsPackedProgram(outShape) :\n        new from_pixels_gpu_1.FromPixelsProgram(outShape);\n    var res = backend.runWebGLProgram(program, [tempPixelHandle], 'int32');\n    backend.disposeData(tempPixelHandle.dataId);\n    return res;\n}\n//# sourceMappingURL=fromPixels.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar FromPixelsProgram = /** @class */ (function () {\n    function FromPixelsProgram(outputShape) {\n        this.variableNames = ['A'];\n        var glsl = glsl_version_1.getGlslDifferences();\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\" + width + \".0, \" + height + \".0);\\n\\n        vec4 values = \" + glsl.texture2D + \"(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \";\n    }\n    return FromPixelsProgram;\n}());\nexports.FromPixelsProgram = FromPixelsProgram;\n//# sourceMappingURL=from_pixels_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar glsl_version_1 = require(\"./glsl_version\");\nvar FromPixelsPackedProgram = /** @class */ (function () {\n    function FromPixelsPackedProgram(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        var glsl = glsl_version_1.getGlslDifferences();\n        var height = outputShape[0], width = outputShape[1];\n        this.outputShape = outputShape;\n        this.userCode = \"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) /\\n                       vec2(\" + width + \".0, \" + height + \".0);\\n            vec4 values = \" + glsl.texture2D + \"(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        \" + glsl.output + \" = result;\\n      }\\n    \";\n    }\n    return FromPixelsPackedProgram;\n}());\nexports.FromPixelsPackedProgram = FromPixelsPackedProgram;\n//# sourceMappingURL=from_pixels_packed_gpu.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar PlatformBrowser = /** @class */ (function () {\n    function PlatformBrowser() {\n    }\n    PlatformBrowser.prototype.fetch = function (path, init) {\n        return fetch(path, init);\n    };\n    PlatformBrowser.prototype.now = function () {\n        return performance.now();\n    };\n    PlatformBrowser.prototype.encode = function (text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(\"Browser's encoder only supports utf-8, but got \" + encoding);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    };\n    PlatformBrowser.prototype.decode = function (bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    };\n    return PlatformBrowser;\n}());\nexports.PlatformBrowser = PlatformBrowser;\nif (environment_1.env().get('IS_BROWSER')) {\n    environment_1.env().setPlatform('browser', new PlatformBrowser());\n}\n//# sourceMappingURL=platform_browser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar environment_1 = require(\"../environment\");\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nexports.getNodeFetch = {\n    // tslint:disable-next-line:no-require-imports\n    importFetch: function () { return require('node-fetch'); }\n};\nvar systemFetch;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nfunction resetSystemFetch() {\n    systemFetch = null;\n}\nexports.resetSystemFetch = resetSystemFetch;\nfunction setSystemFetch(fetchFn) {\n    systemFetch = fetchFn;\n}\nexports.setSystemFetch = setSystemFetch;\nfunction getSystemFetch() {\n    return systemFetch;\n}\nexports.getSystemFetch = getSystemFetch;\nvar PlatformNode = /** @class */ (function () {\n    function PlatformNode() {\n        // tslint:disable-next-line:no-require-imports\n        this.util = require('util');\n        // According to the spec, the built-in encoder can do only UTF-8 encoding.\n        // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n        this.textEncoder = new this.util.TextEncoder();\n    }\n    PlatformNode.prototype.fetch = function (path, requestInits) {\n        if (environment_1.env().global.fetch != null) {\n            return environment_1.env().global.fetch(path, requestInits);\n        }\n        if (systemFetch == null) {\n            systemFetch = exports.getNodeFetch.importFetch();\n        }\n        return systemFetch(path, requestInits);\n    };\n    PlatformNode.prototype.now = function () {\n        var time = process.hrtime();\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n    PlatformNode.prototype.encode = function (text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(\"Node built-in encoder only supports utf-8, but got \" + encoding);\n        }\n        return this.textEncoder.encode(text);\n    };\n    PlatformNode.prototype.decode = function (bytes, encoding) {\n        if (bytes.length === 0) {\n            return '';\n        }\n        return new this.util.TextDecoder(encoding).decode(bytes);\n    };\n    return PlatformNode;\n}());\nexports.PlatformNode = PlatformNode;\nif (environment_1.env().get('IS_NODE')) {\n    environment_1.env().setPlatform('node', new PlatformNode());\n}\n//# sourceMappingURL=platform_node.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Importing local_storage and indexed_db is necessary for the routers to be\n// registered.\nrequire(\"./indexed_db\");\nrequire(\"./local_storage\");\nvar browser_files_1 = require(\"./browser_files\");\nexports.browserFiles = browser_files_1.browserFiles;\nvar http_1 = require(\"./http\");\nexports.browserHTTPRequest = http_1.browserHTTPRequest;\nexports.http = http_1.http;\nexports.isHTTPScheme = http_1.isHTTPScheme;\nvar io_utils_1 = require(\"./io_utils\");\nexports.concatenateArrayBuffers = io_utils_1.concatenateArrayBuffers;\nexports.decodeWeights = io_utils_1.decodeWeights;\nexports.encodeWeights = io_utils_1.encodeWeights;\nexports.getModelArtifactsInfoForJSON = io_utils_1.getModelArtifactsInfoForJSON;\nvar passthrough_1 = require(\"./passthrough\");\nexports.fromMemory = passthrough_1.fromMemory;\nexports.withSaveHandler = passthrough_1.withSaveHandler;\nvar router_registry_1 = require(\"./router_registry\");\nexports.getLoadHandlers = router_registry_1.getLoadHandlers;\nexports.getSaveHandlers = router_registry_1.getSaveHandlers;\nexports.registerLoadRouter = router_registry_1.registerLoadRouter;\nexports.registerSaveRouter = router_registry_1.registerSaveRouter;\nvar weights_loader_1 = require(\"./weights_loader\");\nexports.loadWeights = weights_loader_1.loadWeights;\nexports.weightsLoaderFactory = weights_loader_1.weightsLoaderFactory;\nvar model_management_1 = require(\"./model_management\");\nexports.copyModel = model_management_1.copyModel;\nexports.listModels = model_management_1.listModels;\nexports.moveModel = model_management_1.moveModel;\nexports.removeModel = model_management_1.removeModel;\n//# sourceMappingURL=io.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar io_utils_1 = require(\"./io_utils\");\nvar model_management_1 = require(\"./model_management\");\nvar router_registry_1 = require(\"./router_registry\");\nvar DATABASE_NAME = 'tensorflowjs';\nvar DATABASE_VERSION = 1;\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nvar MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nvar INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nfunction deleteDatabase() {\n    return __awaiter(this, void 0, void 0, function () {\n        var idbFactory;\n        return __generator(this, function (_a) {\n            idbFactory = getIndexedDBFactory();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n                    deleteRequest.onsuccess = function () { return resolve(); };\n                    deleteRequest.onerror = function (error) { return reject(error); };\n                })];\n        });\n    });\n}\nexports.deleteDatabase = deleteDatabase;\nfunction getIndexedDBFactory() {\n    if (!environment_1.env().getBool('IS_BROWSER')) {\n        // TODO(cais): Add more info about what IOHandler subtypes are available.\n        //   Maybe point to a doc page on the web and/or automatically determine\n        //   the available IOHandlers and print them in the error message.\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\n            'is not a web browser.');\n    }\n    // tslint:disable-next-line:no-any\n    var theWindow = window;\n    var factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n        theWindow.shimIndexedDB;\n    if (factory == null) {\n        throw new Error('The current browser does not appear to support IndexedDB.');\n    }\n    return factory;\n}\nfunction setUpDatabase(openRequest) {\n    var db = openRequest.result;\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nvar BrowserIndexedDB = /** @class */ (function () {\n    function BrowserIndexedDB(modelPath) {\n        this.indexedDB = getIndexedDBFactory();\n        if (modelPath == null || !modelPath) {\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n    }\n    BrowserIndexedDB.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                // TODO(cais): Support saving GraphDef models.\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n                    throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                        'in binary formats yet.');\n                }\n                return [2 /*return*/, this.databaseAction(this.modelPath, modelArtifacts)];\n            });\n        });\n    };\n    BrowserIndexedDB.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.databaseAction(this.modelPath)];\n            });\n        });\n    };\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n    BrowserIndexedDB.prototype.databaseAction = function (modelPath, modelArtifacts) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\n            openRequest.onsuccess = function () {\n                var db = openRequest.result;\n                if (modelArtifacts == null) {\n                    // Read model out from object store.\n                    var modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n                    var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                    var getRequest_1 = modelStore.get(_this.modelPath);\n                    getRequest_1.onsuccess = function () {\n                        if (getRequest_1.result == null) {\n                            db.close();\n                            return reject(new Error(\"Cannot find model with path '\" + _this.modelPath + \"' \" +\n                                \"in IndexedDB.\"));\n                        }\n                        else {\n                            resolve(getRequest_1.result.modelArtifacts);\n                        }\n                    };\n                    getRequest_1.onerror = function (error) {\n                        db.close();\n                        return reject(getRequest_1.error);\n                    };\n                    modelTx.oncomplete = function () { return db.close(); };\n                }\n                else {\n                    // Put model into object store.\n                    var modelArtifactsInfo_1 = io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts);\n                    // First, put ModelArtifactsInfo into info store.\n                    var infoTx_1 = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    var infoStore_1 = infoTx_1.objectStore(INFO_STORE_NAME);\n                    var putInfoRequest_1 = infoStore_1.put({ modelPath: _this.modelPath, modelArtifactsInfo: modelArtifactsInfo_1 });\n                    var modelTx_1;\n                    putInfoRequest_1.onsuccess = function () {\n                        // Second, put model data into model store.\n                        modelTx_1 = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                        var modelStore = modelTx_1.objectStore(MODEL_STORE_NAME);\n                        var putModelRequest = modelStore.put({\n                            modelPath: _this.modelPath,\n                            modelArtifacts: modelArtifacts,\n                            modelArtifactsInfo: modelArtifactsInfo_1\n                        });\n                        putModelRequest.onsuccess = function () { return resolve({ modelArtifactsInfo: modelArtifactsInfo_1 }); };\n                        putModelRequest.onerror = function (error) {\n                            // If the put-model request fails, roll back the info entry as\n                            // well.\n                            infoStore_1 = infoTx_1.objectStore(INFO_STORE_NAME);\n                            var deleteInfoRequest = infoStore_1.delete(_this.modelPath);\n                            deleteInfoRequest.onsuccess = function () {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                            deleteInfoRequest.onerror = function (error) {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                        };\n                    };\n                    putInfoRequest_1.onerror = function (error) {\n                        db.close();\n                        return reject(putInfoRequest_1.error);\n                    };\n                    infoTx_1.oncomplete = function () {\n                        if (modelTx_1 == null) {\n                            db.close();\n                        }\n                        else {\n                            modelTx_1.oncomplete = function () { return db.close(); };\n                        }\n                    };\n                }\n            };\n            openRequest.onerror = function (error) { return reject(openRequest.error); };\n        });\n    };\n    BrowserIndexedDB.URL_SCHEME = 'indexeddb://';\n    return BrowserIndexedDB;\n}());\nexports.BrowserIndexedDB = BrowserIndexedDB;\nexports.indexedDBRouter = function (url) {\n    if (!environment_1.env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nrouter_registry_1.IORouterRegistry.registerSaveRouter(exports.indexedDBRouter);\nrouter_registry_1.IORouterRegistry.registerLoadRouter(exports.indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nfunction browserIndexedDB(modelPath) {\n    return new BrowserIndexedDB(modelPath);\n}\nexports.browserIndexedDB = browserIndexedDB;\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n        key;\n}\nvar BrowserIndexedDBManager = /** @class */ (function () {\n    function BrowserIndexedDBManager() {\n        this.indexedDB = getIndexedDBFactory();\n    }\n    BrowserIndexedDBManager.prototype.listModels = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n                        openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\n                        openRequest.onsuccess = function () {\n                            var db = openRequest.result;\n                            var tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                            var store = tx.objectStore(INFO_STORE_NAME);\n                            // tslint:disable:max-line-length\n                            // Need to cast `store` as `any` here because TypeScript's DOM\n                            // library does not have the `getAll()` method even though the\n                            // method is supported in the latest version of most mainstream\n                            // browsers:\n                            // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                            // tslint:enable:max-line-length\n                            // tslint:disable-next-line:no-any\n                            var getAllInfoRequest = store.getAll();\n                            getAllInfoRequest.onsuccess = function () {\n                                var out = {};\n                                for (var _i = 0, _a = getAllInfoRequest.result; _i < _a.length; _i++) {\n                                    var item = _a[_i];\n                                    out[item.modelPath] = item.modelArtifactsInfo;\n                                }\n                                resolve(out);\n                            };\n                            getAllInfoRequest.onerror = function (error) {\n                                db.close();\n                                return reject(getAllInfoRequest.error);\n                            };\n                            tx.oncomplete = function () { return db.close(); };\n                        };\n                        openRequest.onerror = function (error) { return reject(openRequest.error); };\n                    })];\n            });\n        });\n    };\n    BrowserIndexedDBManager.prototype.removeModel = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                path = maybeStripScheme(path);\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var openRequest = _this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n                        openRequest.onupgradeneeded = function () { return setUpDatabase(openRequest); };\n                        openRequest.onsuccess = function () {\n                            var db = openRequest.result;\n                            var infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                            var infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                            var getInfoRequest = infoStore.get(path);\n                            var modelTx;\n                            getInfoRequest.onsuccess = function () {\n                                if (getInfoRequest.result == null) {\n                                    db.close();\n                                    return reject(new Error(\"Cannot find model with path '\" + path + \"' \" +\n                                        \"in IndexedDB.\"));\n                                }\n                                else {\n                                    // First, delete the entry in the info store.\n                                    var deleteInfoRequest = infoStore.delete(path);\n                                    var deleteModelData_1 = function () {\n                                        // Second, delete the entry in the model store.\n                                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                                        var modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                                        var deleteModelRequest = modelStore.delete(path);\n                                        deleteModelRequest.onsuccess = function () {\n                                            return resolve(getInfoRequest.result.modelArtifactsInfo);\n                                        };\n                                        deleteModelRequest.onerror = function (error) {\n                                            return reject(getInfoRequest.error);\n                                        };\n                                    };\n                                    // Proceed with deleting model data regardless of whether deletion\n                                    // of info data succeeds or not.\n                                    deleteInfoRequest.onsuccess = deleteModelData_1;\n                                    deleteInfoRequest.onerror = function (error) {\n                                        deleteModelData_1();\n                                        db.close();\n                                        return reject(getInfoRequest.error);\n                                    };\n                                }\n                            };\n                            getInfoRequest.onerror = function (error) {\n                                db.close();\n                                return reject(getInfoRequest.error);\n                            };\n                            infoTx.oncomplete = function () {\n                                if (modelTx == null) {\n                                    db.close();\n                                }\n                                else {\n                                    modelTx.oncomplete = function () { return db.close(); };\n                                }\n                            };\n                        };\n                        openRequest.onerror = function (error) { return reject(openRequest.error); };\n                    })];\n            });\n        });\n    };\n    return BrowserIndexedDBManager;\n}());\nexports.BrowserIndexedDBManager = BrowserIndexedDBManager;\nif (environment_1.env().getBool('IS_BROWSER')) {\n    // Wrap the construction and registration, to guard against browsers that\n    // don't support Local Storage.\n    try {\n        model_management_1.ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=indexed_db.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar util_1 = require(\"../util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar model_management_1 = require(\"./model_management\");\nvar router_registry_1 = require(\"./router_registry\");\nvar PATH_SEPARATOR = '/';\nvar PATH_PREFIX = 'tensorflowjs_models';\nvar INFO_SUFFIX = 'info';\nvar MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nvar WEIGHT_SPECS_SUFFIX = 'weight_specs';\nvar WEIGHT_DATA_SUFFIX = 'weight_data';\nvar MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nfunction purgeLocalStorageArtifacts() {\n    if (!environment_1.env().getBool('IS_BROWSER') ||\n        typeof window.localStorage === 'undefined') {\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\n            'unavailable in the current environment.');\n    }\n    var LS = window.localStorage;\n    var purgedModelPaths = [];\n    for (var i = 0; i < LS.length; ++i) {\n        var key = LS.key(i);\n        var prefix = PATH_PREFIX + PATH_SEPARATOR;\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            LS.removeItem(key);\n            var modelName = getModelPathFromKey(key);\n            if (purgedModelPaths.indexOf(modelName) === -1) {\n                purgedModelPaths.push(modelName);\n            }\n        }\n    }\n    return purgedModelPaths;\n}\nexports.purgeLocalStorageArtifacts = purgeLocalStorageArtifacts;\nfunction getModelKeys(path) {\n    return {\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n        modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n    };\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key) {\n    var items = key.split(PATH_SEPARATOR);\n    if (items.length < 3) {\n        throw new Error(\"Invalid key format: \" + key);\n    }\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n        key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nvar BrowserLocalStorage = /** @class */ (function () {\n    function BrowserLocalStorage(modelPath) {\n        if (!environment_1.env().getBool('IS_BROWSER') ||\n            typeof window.localStorage === 'undefined') {\n            // TODO(cais): Add more info about what IOHandler subtypes are\n            // available.\n            //   Maybe point to a doc page on the web and/or automatically determine\n            //   the available IOHandlers and print them in the error message.\n            throw new Error('The current environment does not support local storage.');\n        }\n        this.LS = window.localStorage;\n        if (modelPath == null || !modelPath) {\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n        this.keys = getModelKeys(this.modelPath);\n    }\n    /**\n     * Save model artifacts to browser local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @param modelArtifacts The model artifacts to be stored.\n     * @returns An instance of SaveResult.\n     */\n    BrowserLocalStorage.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var topology, weightSpecs, modelArtifactsInfo;\n            return __generator(this, function (_a) {\n                if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n                    throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                        'in binary formats yet.');\n                }\n                else {\n                    topology = JSON.stringify(modelArtifacts.modelTopology);\n                    weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n                    modelArtifactsInfo = io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts);\n                    try {\n                        this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                        this.LS.setItem(this.keys.topology, topology);\n                        this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                        this.LS.setItem(this.keys.weightData, io_utils_1.arrayBufferToBase64String(modelArtifacts.weightData));\n                        this.LS.setItem(this.keys.modelMetadata, JSON.stringify({\n                            format: modelArtifacts.format,\n                            generatedBy: modelArtifacts.generatedBy,\n                            convertedBy: modelArtifacts.convertedBy,\n                            userDefinedMetadata: modelArtifacts.userDefinedMetadata\n                        }));\n                        return [2 /*return*/, { modelArtifactsInfo: modelArtifactsInfo }];\n                    }\n                    catch (err) {\n                        // If saving failed, clean up all items saved so far.\n                        this.LS.removeItem(this.keys.info);\n                        this.LS.removeItem(this.keys.topology);\n                        this.LS.removeItem(this.keys.weightSpecs);\n                        this.LS.removeItem(this.keys.weightData);\n                        this.LS.removeItem(this.keys.modelMetadata);\n                        throw new Error(\"Failed to save model '\" + this.modelPath + \"' to local storage: \" +\n                            \"size quota being exceeded is a possible cause of this failure: \" +\n                            (\"modelTopologyBytes=\" + modelArtifactsInfo.modelTopologyBytes + \", \") +\n                            (\"weightSpecsBytes=\" + modelArtifactsInfo.weightSpecsBytes + \", \") +\n                            (\"weightDataBytes=\" + modelArtifactsInfo.weightDataBytes + \".\"));\n                    }\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n    BrowserLocalStorage.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var info, out, topology, weightSpecs, metadataString, metadata, weightDataBase64;\n            return __generator(this, function (_a) {\n                info = JSON.parse(this.LS.getItem(this.keys.info));\n                if (info == null) {\n                    throw new Error(\"In local storage, there is no model with name '\" + this.modelPath + \"'\");\n                }\n                if (info.modelTopologyType !== 'JSON') {\n                    throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\n                        'topology yet.');\n                }\n                out = {};\n                topology = JSON.parse(this.LS.getItem(this.keys.topology));\n                if (topology == null) {\n                    throw new Error(\"In local storage, the topology of model '\" + this.modelPath + \"' \" +\n                        \"is missing.\");\n                }\n                out.modelTopology = topology;\n                weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n                if (weightSpecs == null) {\n                    throw new Error(\"In local storage, the weight specs of model '\" + this.modelPath + \"' \" +\n                        \"are missing.\");\n                }\n                out.weightSpecs = weightSpecs;\n                metadataString = this.LS.getItem(this.keys.modelMetadata);\n                if (metadataString != null) {\n                    metadata = JSON.parse(metadataString);\n                    out.format = metadata['format'];\n                    out.generatedBy = metadata['generatedBy'];\n                    out.convertedBy = metadata['convertedBy'];\n                    out.userDefinedMetadata = metadata['userDefinedMetadata'];\n                }\n                weightDataBase64 = this.LS.getItem(this.keys.weightData);\n                if (weightDataBase64 == null) {\n                    throw new Error(\"In local storage, the binary weight values of model \" +\n                        (\"'\" + this.modelPath + \"' are missing.\"));\n                }\n                out.weightData = io_utils_1.base64StringToArrayBuffer(weightDataBase64);\n                return [2 /*return*/, out];\n            });\n        });\n    };\n    BrowserLocalStorage.URL_SCHEME = 'localstorage://';\n    return BrowserLocalStorage;\n}());\nexports.BrowserLocalStorage = BrowserLocalStorage;\nexports.localStorageRouter = function (url) {\n    if (!environment_1.env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nrouter_registry_1.IORouterRegistry.registerSaveRouter(exports.localStorageRouter);\nrouter_registry_1.IORouterRegistry.registerLoadRouter(exports.localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nfunction browserLocalStorage(modelPath) {\n    return new BrowserLocalStorage(modelPath);\n}\nexports.browserLocalStorage = browserLocalStorage;\nvar BrowserLocalStorageManager = /** @class */ (function () {\n    function BrowserLocalStorageManager() {\n        util_1.assert(environment_1.env().getBool('IS_BROWSER'), function () { return 'Current environment is not a web browser'; });\n        util_1.assert(typeof window.localStorage !== 'undefined', function () { return 'Current browser does not appear to support localStorage'; });\n        this.LS = window.localStorage;\n    }\n    BrowserLocalStorageManager.prototype.listModels = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var out, prefix, suffix, i, key, modelPath;\n            return __generator(this, function (_a) {\n                out = {};\n                prefix = PATH_PREFIX + PATH_SEPARATOR;\n                suffix = PATH_SEPARATOR + INFO_SUFFIX;\n                for (i = 0; i < this.LS.length; ++i) {\n                    key = this.LS.key(i);\n                    if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                        modelPath = getModelPathFromKey(key);\n                        out[modelPath] = JSON.parse(this.LS.getItem(key));\n                    }\n                }\n                return [2 /*return*/, out];\n            });\n        });\n    };\n    BrowserLocalStorageManager.prototype.removeModel = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var keys, info;\n            return __generator(this, function (_a) {\n                path = maybeStripScheme(path);\n                keys = getModelKeys(path);\n                if (this.LS.getItem(keys.info) == null) {\n                    throw new Error(\"Cannot find model at path '\" + path + \"'\");\n                }\n                info = JSON.parse(this.LS.getItem(keys.info));\n                this.LS.removeItem(keys.info);\n                this.LS.removeItem(keys.topology);\n                this.LS.removeItem(keys.weightSpecs);\n                this.LS.removeItem(keys.weightData);\n                return [2 /*return*/, info];\n            });\n        });\n    };\n    return BrowserLocalStorageManager;\n}());\nexports.BrowserLocalStorageManager = BrowserLocalStorageManager;\nif (environment_1.env().getBool('IS_BROWSER')) {\n    // Wrap the construction and registration, to guard against browsers that\n    // don't support Local Storage.\n    try {\n        model_management_1.ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=local_storage.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\nvar environment_1 = require(\"../environment\");\nvar io_utils_1 = require(\"./io_utils\");\nvar router_registry_1 = require(\"./router_registry\");\nvar DEFAULT_FILE_NAME_PREFIX = 'model';\nvar DEFAULT_JSON_EXTENSION_NAME = '.json';\nvar DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\nfunction defer(f) {\n    return new Promise(function (resolve) { return setTimeout(resolve); }).then(f);\n}\nvar BrowserDownloads = /** @class */ (function () {\n    function BrowserDownloads(fileNamePrefix) {\n        if (!environment_1.env().getBool('IS_BROWSER')) {\n            // TODO(cais): Provide info on what IOHandlers are available under the\n            //   current environment.\n            throw new Error('browserDownloads() cannot proceed because the current environment ' +\n                'is not a browser.');\n        }\n        if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n            fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n        }\n        if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n            fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n        }\n        this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n        this.weightDataFileName =\n            fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n    }\n    BrowserDownloads.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weightsURL, weightsManifest, modelTopologyAndWeightManifest, modelTopologyAndWeightManifestURL, jsonAnchor_1, weightDataAnchor_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof (document) === 'undefined') {\n                            throw new Error('Browser downloads are not supported in ' +\n                                'this environment since `document` is not present');\n                        }\n                        weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }));\n                        if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) return [3 /*break*/, 1];\n                        throw new Error('BrowserDownloads.save() does not support saving model topology ' +\n                            'in binary formats yet.');\n                    case 1:\n                        weightsManifest = [{\n                                paths: ['./' + this.weightDataFileName],\n                                weights: modelArtifacts.weightSpecs\n                            }];\n                        modelTopologyAndWeightManifest = {\n                            modelTopology: modelArtifacts.modelTopology,\n                            format: modelArtifacts.format,\n                            generatedBy: modelArtifacts.generatedBy,\n                            convertedBy: modelArtifacts.convertedBy,\n                            weightsManifest: weightsManifest\n                        };\n                        modelTopologyAndWeightManifestURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: 'application/json' }));\n                        jsonAnchor_1 = this.jsonAnchor == null ? document.createElement('a') :\n                            this.jsonAnchor;\n                        jsonAnchor_1.download = this.modelTopologyFileName;\n                        jsonAnchor_1.href = modelTopologyAndWeightManifestURL;\n                        // Trigger downloads by evoking a click event on the download anchors.\n                        // When multiple downloads are started synchronously, Firefox will only\n                        // save the last one.\n                        return [4 /*yield*/, defer(function () { return jsonAnchor_1.dispatchEvent(new MouseEvent('click')); })];\n                    case 2:\n                        // Trigger downloads by evoking a click event on the download anchors.\n                        // When multiple downloads are started synchronously, Firefox will only\n                        // save the last one.\n                        _a.sent();\n                        if (!(modelArtifacts.weightData != null)) return [3 /*break*/, 4];\n                        weightDataAnchor_1 = this.weightDataAnchor == null ?\n                            document.createElement('a') :\n                            this.weightDataAnchor;\n                        weightDataAnchor_1.download = this.weightDataFileName;\n                        weightDataAnchor_1.href = weightsURL;\n                        return [4 /*yield*/, defer(function () { return weightDataAnchor_1.dispatchEvent(new MouseEvent('click')); })];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/, { modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts) }];\n                }\n            });\n        });\n    };\n    BrowserDownloads.URL_SCHEME = 'downloads://';\n    return BrowserDownloads;\n}());\nexports.BrowserDownloads = BrowserDownloads;\nvar BrowserFiles = /** @class */ (function () {\n    function BrowserFiles(files) {\n        if (files == null || files.length < 1) {\n            throw new Error(\"When calling browserFiles, at least 1 file is required, \" +\n                (\"but received \" + files));\n        }\n        this.files = files;\n    }\n    BrowserFiles.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var jsonFile, weightFiles;\n            var _this = this;\n            return __generator(this, function (_a) {\n                jsonFile = this.files[0];\n                weightFiles = this.files.slice(1);\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var jsonReader = new FileReader();\n                        jsonReader.onload = function (event) {\n                            // tslint:disable-next-line:no-any\n                            var modelJSON = JSON.parse(event.target.result);\n                            var modelTopology = modelJSON.modelTopology;\n                            if (modelTopology == null) {\n                                reject(new Error(\"modelTopology field is missing from file \" + jsonFile.name));\n                                return;\n                            }\n                            if (weightFiles.length === 0) {\n                                resolve({ modelTopology: modelTopology });\n                            }\n                            var weightsManifest = modelJSON.weightsManifest;\n                            if (weightsManifest == null) {\n                                reject(new Error(\"weightManifest field is missing from file \" + jsonFile.name));\n                                return;\n                            }\n                            var pathToFile;\n                            try {\n                                pathToFile =\n                                    _this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\n                            }\n                            catch (err) {\n                                reject(err);\n                                return;\n                            }\n                            var weightSpecs = [];\n                            var paths = [];\n                            var perFileBuffers = [];\n                            weightsManifest.forEach(function (weightsGroup) {\n                                weightsGroup.paths.forEach(function (path) {\n                                    paths.push(path);\n                                    perFileBuffers.push(null);\n                                });\n                                weightSpecs.push.apply(weightSpecs, weightsGroup.weights);\n                            });\n                            weightsManifest.forEach(function (weightsGroup) {\n                                weightsGroup.paths.forEach(function (path) {\n                                    var weightFileReader = new FileReader();\n                                    weightFileReader.onload = function (event) {\n                                        // tslint:disable-next-line:no-any\n                                        var weightData = event.target.result;\n                                        var index = paths.indexOf(path);\n                                        perFileBuffers[index] = weightData;\n                                        if (perFileBuffers.indexOf(null) === -1) {\n                                            resolve({\n                                                modelTopology: modelTopology,\n                                                weightSpecs: weightSpecs,\n                                                weightData: io_utils_1.concatenateArrayBuffers(perFileBuffers),\n                                                format: modelJSON.format,\n                                                generatedBy: modelJSON.generatedBy,\n                                                convertedBy: modelJSON.convertedBy,\n                                                userDefinedMetadata: modelJSON.userDefinedMetadata\n                                            });\n                                        }\n                                    };\n                                    weightFileReader.onerror = function (error) {\n                                        return reject(\"Failed to weights data from file of path '\" + path + \"'.\");\n                                    };\n                                    weightFileReader.readAsArrayBuffer(pathToFile[path]);\n                                });\n                            });\n                        };\n                        jsonReader.onerror = function (error) { return reject(\"Failed to read model topology and weights manifest JSON \" +\n                            (\"from file '\" + jsonFile.name + \"'. BrowserFiles supports loading \") +\n                            \"Keras-style tf.Model artifacts only.\"); };\n                        jsonReader.readAsText(jsonFile);\n                    })];\n            });\n        });\n    };\n    /**\n     * Check the compatibility between weights manifest and weight files.\n     */\n    BrowserFiles.prototype.checkManifestAndWeightFiles = function (manifest, files) {\n        var basenames = [];\n        var fileNames = files.map(function (file) { return io_utils_1.basename(file.name); });\n        var pathToFile = {};\n        for (var _i = 0, manifest_1 = manifest; _i < manifest_1.length; _i++) {\n            var group = manifest_1[_i];\n            group.paths.forEach(function (path) {\n                var pathBasename = io_utils_1.basename(path);\n                if (basenames.indexOf(pathBasename) !== -1) {\n                    throw new Error(\"Duplicate file basename found in weights manifest: \" +\n                        (\"'\" + pathBasename + \"'\"));\n                }\n                basenames.push(pathBasename);\n                if (fileNames.indexOf(pathBasename) === -1) {\n                    throw new Error(\"Weight file with basename '\" + pathBasename + \"' is not provided.\");\n                }\n                else {\n                    pathToFile[path] = files[fileNames.indexOf(pathBasename)];\n                }\n            });\n        }\n        if (basenames.length !== files.length) {\n            throw new Error(\"Mismatch in the number of files in weights manifest \" +\n                (\"(\" + basenames.length + \") and the number of weight files provided \") +\n                (\"(\" + files.length + \").\"));\n        }\n        return pathToFile;\n    };\n    return BrowserFiles;\n}());\nexports.browserDownloadsRouter = function (url) {\n    if (!environment_1.env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n            return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nrouter_registry_1.IORouterRegistry.registerSaveRouter(exports.browserDownloadsRouter);\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserDownloads(fileNamePrefix) {\n    if (fileNamePrefix === void 0) { fileNamePrefix = 'model'; }\n    return new BrowserDownloads(fileNamePrefix);\n}\nexports.browserDownloads = browserDownloads;\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserFiles(files) {\n    return new BrowserFiles(files);\n}\nexports.browserFiles = browserFiles;\n//# sourceMappingURL=browser_files.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\nvar environment_1 = require(\"../environment\");\nvar util_1 = require(\"../util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar router_registry_1 = require(\"./router_registry\");\nvar weights_loader_1 = require(\"./weights_loader\");\nvar OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nvar JSON_TYPE = 'application/json';\nvar HTTPRequest = /** @class */ (function () {\n    function HTTPRequest(path, loadOptions) {\n        this.DEFAULT_METHOD = 'POST';\n        if (loadOptions == null) {\n            loadOptions = {};\n        }\n        this.weightPathPrefix = loadOptions.weightPathPrefix;\n        this.onProgress = loadOptions.onProgress;\n        if (loadOptions.fetchFunc != null) {\n            util_1.assert(typeof loadOptions.fetchFunc === 'function', function () { return 'Must pass a function that matches the signature of ' +\n                '`fetch` (see ' +\n                'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)'; });\n            this.fetch = loadOptions.fetchFunc;\n        }\n        else {\n            this.fetch = environment_1.env().platform.fetch;\n        }\n        util_1.assert(path != null && path.length > 0, function () { return 'URL path for http must not be null, undefined or ' +\n            'empty.'; });\n        if (Array.isArray(path)) {\n            util_1.assert(path.length === 2, function () { return 'URL paths for http must have a length of 2, ' +\n                (\"(actual length is \" + path.length + \").\"); });\n        }\n        this.path = path;\n        if (loadOptions.requestInit != null &&\n            loadOptions.requestInit.body != null) {\n            throw new Error('requestInit is expected to have no pre-existing body, but has one.');\n        }\n        this.requestInit = loadOptions.requestInit || {};\n    }\n    HTTPRequest.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var init, weightsManifest, modelTopologyAndWeightManifest, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n                            throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' +\n                                'in binary formats yet.');\n                        }\n                        init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);\n                        init.body = new FormData();\n                        weightsManifest = [{\n                                paths: ['./model.weights.bin'],\n                                weights: modelArtifacts.weightSpecs,\n                            }];\n                        modelTopologyAndWeightManifest = {\n                            modelTopology: modelArtifacts.modelTopology,\n                            format: modelArtifacts.format,\n                            generatedBy: modelArtifacts.generatedBy,\n                            convertedBy: modelArtifacts.convertedBy,\n                            userDefinedMetadata: modelArtifacts.userDefinedMetadata,\n                            weightsManifest: weightsManifest\n                        };\n                        init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: JSON_TYPE }), 'model.json');\n                        if (modelArtifacts.weightData != null) {\n                            init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], { type: OCTET_STREAM_MIME_TYPE }), 'model.weights.bin');\n                        }\n                        return [4 /*yield*/, this.fetch(this.path, init)];\n                    case 1:\n                        response = _a.sent();\n                        if (response.ok) {\n                            return [2 /*return*/, {\n                                    modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts),\n                                    responses: [response],\n                                }];\n                        }\n                        else {\n                            throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \" +\n                                (response.status + \".\"));\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Load model artifacts via HTTP request(s).\n     *\n     * See the documentation to `tf.io.http` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model artifacts (if loading succeeds).\n     */\n    HTTPRequest.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var modelConfigRequest, modelConfig, e_1, message, modelTopology, weightsManifest, generatedBy, convertedBy, format, userDefinedMetadata, weightSpecs, weightData, results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fetch(this.path, this.requestInit)];\n                    case 1:\n                        modelConfigRequest = _a.sent();\n                        if (!modelConfigRequest.ok) {\n                            throw new Error(\"Request to \" + this.path + \" failed with status code \" +\n                                (modelConfigRequest.status + \". Please verify this URL points to \") +\n                                \"the model JSON of the model to load.\");\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, modelConfigRequest.json()];\n                    case 3:\n                        modelConfig = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_1 = _a.sent();\n                        message = \"Failed to parse model JSON of response from \" + this.path + \".\";\n                        // TODO(nsthorat): Remove this after some time when we're comfortable that\n                        // .pb files are mostly gone.\n                        if (this.path.endsWith('.pb')) {\n                            message += ' Your path contains a .pb file extension. ' +\n                                'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n                                'in favor of .json models. You can re-convert your Python ' +\n                                'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n                                'or you can convert your.pb models with the \\'pb2json\\'' +\n                                'NPM script in the tensorflow/tfjs-converter repository.';\n                        }\n                        else {\n                            message += ' Please make sure the server is serving valid ' +\n                                'JSON for this request.';\n                        }\n                        throw new Error(message);\n                    case 5:\n                        modelTopology = modelConfig.modelTopology;\n                        weightsManifest = modelConfig.weightsManifest;\n                        generatedBy = modelConfig.generatedBy;\n                        convertedBy = modelConfig.convertedBy;\n                        format = modelConfig.format;\n                        userDefinedMetadata = modelConfig.userDefinedMetadata;\n                        // We do not allow both modelTopology and weightsManifest to be missing.\n                        if (modelTopology == null && weightsManifest == null) {\n                            throw new Error(\"The JSON from HTTP path \" + this.path + \" contains neither model \" +\n                                \"topology or manifest for weights.\");\n                        }\n                        if (!(weightsManifest != null)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.loadWeights(weightsManifest)];\n                    case 6:\n                        results = _a.sent();\n                        weightSpecs = results[0], weightData = results[1];\n                        _a.label = 7;\n                    case 7: return [2 /*return*/, {\n                            modelTopology: modelTopology,\n                            weightSpecs: weightSpecs,\n                            weightData: weightData,\n                            userDefinedMetadata: userDefinedMetadata,\n                            generatedBy: generatedBy,\n                            convertedBy: convertedBy,\n                            format: format\n                        }];\n                }\n            });\n        });\n    };\n    HTTPRequest.prototype.loadWeights = function (weightsManifest) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weightPath, _a, prefix, suffix, pathPrefix, weightSpecs, _i, weightsManifest_1, entry, fetchURLs, buffers;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n                        _a = parseUrl(weightPath), prefix = _a[0], suffix = _a[1];\n                        pathPrefix = this.weightPathPrefix || prefix;\n                        weightSpecs = [];\n                        for (_i = 0, weightsManifest_1 = weightsManifest; _i < weightsManifest_1.length; _i++) {\n                            entry = weightsManifest_1[_i];\n                            weightSpecs.push.apply(weightSpecs, entry.weights);\n                        }\n                        fetchURLs = [];\n                        weightsManifest.forEach(function (weightsGroup) {\n                            weightsGroup.paths.forEach(function (path) {\n                                fetchURLs.push(pathPrefix + path + suffix);\n                            });\n                        });\n                        return [4 /*yield*/, weights_loader_1.loadWeightsAsArrayBuffer(fetchURLs, {\n                                requestInit: this.requestInit,\n                                fetchFunc: this.fetch,\n                                onProgress: this.onProgress\n                            })];\n                    case 1:\n                        buffers = _b.sent();\n                        return [2 /*return*/, [weightSpecs, io_utils_1.concatenateArrayBuffers(buffers)]];\n                }\n            });\n        });\n    };\n    HTTPRequest.URL_SCHEME_REGEX = /^https?:\\/\\//;\n    return HTTPRequest;\n}());\nexports.HTTPRequest = HTTPRequest;\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nfunction parseUrl(url) {\n    var lastSlash = url.lastIndexOf('/');\n    var lastSearchParam = url.lastIndexOf('?');\n    var prefix = url.substring(0, lastSlash);\n    var suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n    return [prefix + '/', suffix];\n}\nexports.parseUrl = parseUrl;\nfunction isHTTPScheme(url) {\n    return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\nexports.isHTTPScheme = isHTTPScheme;\nexports.httpRouter = function (url, onProgress) {\n    if (typeof fetch === 'undefined') {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n    }\n    else {\n        var isHTTP = true;\n        if (Array.isArray(url)) {\n            isHTTP = url.every(function (urlItem) { return isHTTPScheme(urlItem); });\n        }\n        else {\n            isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n            return http(url, { onProgress: onProgress });\n        }\n    }\n    return null;\n};\nrouter_registry_1.IORouterRegistry.registerSaveRouter(exports.httpRouter);\nrouter_registry_1.IORouterRegistry.registerLoadRouter(exports.httpRouter);\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {method: 'PUT'}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction http(path, loadOptions) {\n    return new HTTPRequest(path, loadOptions);\n}\nexports.http = http;\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nfunction browserHTTPRequest(path, loadOptions) {\n    return http(path, loadOptions);\n}\nexports.browserHTTPRequest = browserHTTPRequest;\n//# sourceMappingURL=http.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nfunction monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n    checkPromises(promises);\n    startFraction = startFraction == null ? 0 : startFraction;\n    endFraction = endFraction == null ? 1 : endFraction;\n    checkFraction(startFraction, endFraction);\n    var resolvedPromise = 0;\n    var registerMonitor = function (promise) {\n        promise.then(function (value) {\n            var fraction = startFraction +\n                ++resolvedPromise / promises.length * (endFraction - startFraction);\n            // pass fraction as parameter to callback function.\n            onProgress(fraction);\n            return value;\n        });\n        return promise;\n    };\n    function checkPromises(promises) {\n        util_1.assert(promises != null && Array.isArray(promises) && promises.length > 0, function () { return 'promises must be a none empty array'; });\n    }\n    function checkFraction(startFraction, endFraction) {\n        util_1.assert(startFraction >= 0 && startFraction <= 1, function () { return \"Progress fraction must be in range [0, 1], but \" +\n            (\"got startFraction \" + startFraction); });\n        util_1.assert(endFraction >= 0 && endFraction <= 1, function () { return \"Progress fraction must be in range [0, 1], but \" +\n            (\"got endFraction \" + endFraction); });\n        util_1.assert(endFraction >= startFraction, function () { return \"startFraction must be no more than endFraction, but \" +\n            (\"got startFraction \" + startFraction + \" and endFraction \") +\n            (\"\" + endFraction); });\n    }\n    return Promise.all(promises.map(registerMonitor));\n}\nexports.monitorPromisesProgress = monitorPromisesProgress;\n//# sourceMappingURL=progress.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PassthroughLoader = /** @class */ (function () {\n    function PassthroughLoader(modelArtifacts) {\n        this.modelArtifacts = modelArtifacts;\n    }\n    PassthroughLoader.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.modelArtifacts];\n            });\n        });\n    };\n    return PassthroughLoader;\n}());\nvar PassthroughSaver = /** @class */ (function () {\n    function PassthroughSaver(saveHandler) {\n        this.saveHandler = saveHandler;\n    }\n    PassthroughSaver.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.saveHandler(modelArtifacts)];\n            });\n        });\n    };\n    return PassthroughSaver;\n}());\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nfunction fromMemory(modelArtifacts, weightSpecs, weightData, trainingConfig) {\n    if (arguments.length === 1) {\n        var isModelArtifacts = modelArtifacts.modelTopology != null ||\n            modelArtifacts.weightSpecs != null;\n        if (isModelArtifacts) {\n            return new PassthroughLoader(modelArtifacts);\n        }\n        else {\n            // Legacy support: with only modelTopology.\n            // TODO(cais): Remove this deprecated API.\n            console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n                'The argument should be of type ModelArtifacts. ' +\n                'The multi-argument signature of tf.io.fromMemory() has been ' +\n                'deprecated and will be removed in a future release.');\n            return new PassthroughLoader({ modelTopology: modelArtifacts });\n        }\n    }\n    else {\n        // Legacy support.\n        // TODO(cais): Remove this deprecated API.\n        console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n            'The argument should be of type ModelArtifacts. ' +\n            'The multi-argument signature of tf.io.fromMemory() has been ' +\n            'deprecated and will be removed in a future release.');\n        return new PassthroughLoader({\n            modelTopology: modelArtifacts,\n            weightSpecs: weightSpecs,\n            weightData: weightData,\n            trainingConfig: trainingConfig\n        });\n    }\n}\nexports.fromMemory = fromMemory;\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nfunction withSaveHandler(saveHandler) {\n    return new PassthroughSaver(saveHandler);\n}\nexports.withSaveHandler = withSaveHandler;\n//# sourceMappingURL=passthrough.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Exports under the tf.math.* namespace.\n */\nvar confusion_matrix_1 = require(\"./ops/confusion_matrix\");\nexports.confusionMatrix = confusion_matrix_1.confusionMatrix;\n//# sourceMappingURL=math.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar operation_1 = require(\"./operation\");\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n */\n/** @doc {heading: 'Operations', subheading: 'Evaluation'} */\nfunction confusionMatrix_(labels, predictions, numClasses) {\n    var $labels = tensor_util_env_1.convertToTensor(labels, 'labels', 'confusionMatrix');\n    var $predictions = tensor_util_env_1.convertToTensor(predictions, 'predictions', 'confusionMatrix');\n    util.assert(numClasses == null || numClasses > 0 && Number.isInteger(numClasses), function () { return \"If provided, numClasses must be a positive integer, \" +\n        (\"but got \" + numClasses); });\n    util.assert($labels.rank === 1, function () { return \"Expected the rank of labels to be 1, but got \" + $labels.rank; });\n    util.assert($predictions.rank === 1, function () { return \"Expected the rank of predictions to be 1, \" +\n        (\"but got \" + $predictions.rank); });\n    util.assert($labels.shape[0] === $predictions.shape[0], function () { return \"Mismatch in the number of examples: \" +\n        ($labels.shape[0] + \" vs. \" + $predictions.shape[0] + \". \") +\n        \"Labels and predictions should have the same number of elements.\"; });\n    util.assert(numClasses > 0 && Number.isInteger(numClasses), function () { return \"numClasses is required to be a positive integer, but got \" +\n        (\"\" + numClasses); });\n    // TODO(cais): In the future, if oneHot supports tensors inputs for\n    //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n    var oneHotLabels = array_ops_1.oneHot($labels.asType('int32'), numClasses);\n    var oneHotPredictions = array_ops_1.oneHot($predictions.asType('int32'), numClasses);\n    return oneHotLabels.transpose().matMul(oneHotPredictions).asType('int32');\n}\nexports.confusionMatrix_ = confusionMatrix_;\nexports.confusionMatrix = operation_1.op({ confusionMatrix_: confusionMatrix_ });\n//# sourceMappingURL=confusion_matrix.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"../engine\");\nvar kernel_registry_1 = require(\"../kernel_registry\");\nvar tensor_1 = require(\"../tensor\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\nvar fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n */\n/** @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true} */\nfunction fromPixels_(pixels, numChannels) {\n    if (numChannels === void 0) { numChannels = 3; }\n    // Sanity checks.\n    if (numChannels > 4) {\n        throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n    }\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    var isPixelData = false;\n    var isImageData = false;\n    var isVideo = false;\n    var isImage = false;\n    var isCanvasLike = false;\n    if (pixels.data instanceof Uint8Array) {\n        isPixelData = true;\n    }\n    else if (typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n        isImageData = true;\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement) {\n        isVideo = true;\n    }\n    else if (typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement) {\n        isImage = true;\n        // tslint:disable-next-line: no-any\n    }\n    else if (pixels.getContext != null) {\n        isCanvasLike = true;\n    }\n    else {\n        throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' +\n            \"HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData \" +\n            \"in browser, or OffscreenCanvas, ImageData in webworker\" +\n            \" or {data: Uint32Array, width: number, height: number}, \" +\n            (\"but was \" + pixels.constructor.name));\n    }\n    if (isVideo) {\n        var HAVE_CURRENT_DATA_READY_STATE = 2;\n        if (isVideo &&\n            pixels.readyState <\n                HAVE_CURRENT_DATA_READY_STATE) {\n            throw new Error('The video element has not loaded data yet. Please wait for ' +\n                '`loadeddata` event on the <video> element.');\n        }\n    }\n    // If the current backend has 'FromPixels' registered, it has a more\n    // efficient way of handling pixel uploads, so we call that.\n    var kernel = kernel_registry_1.getKernel('FromPixels', engine_1.ENGINE.backendName);\n    if (kernel != null) {\n        return engine_1.ENGINE.runKernel('FromPixels', { pixels: pixels }, { numChannels: numChannels });\n    }\n    var _a = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height], width = _a[0], height = _a[1];\n    var vals;\n    if (isCanvasLike) {\n        vals =\n            // tslint:disable-next-line:no-any\n            pixels.getContext('2d').getImageData(0, 0, width, height).data;\n    }\n    else if (isImageData || isPixelData) {\n        vals = pixels.data;\n    }\n    else if (isImage || isVideo) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n    }\n    var values;\n    if (numChannels === 4) {\n        values = new Int32Array(vals);\n    }\n    else {\n        var numPixels = width * height;\n        values = new Int32Array(numPixels * numChannels);\n        for (var i = 0; i < numPixels; i++) {\n            for (var channel = 0; channel < numChannels; ++channel) {\n                values[i * numChannels + channel] = vals[i * 4 + channel];\n            }\n        }\n    }\n    var outShape = [height, width, numChannels];\n    return tensor_ops_1.tensor3d(values, outShape, 'int32');\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 or rank-3 tensor. If rank-2, draws grayscale. If\n *     rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n */\n/** @doc {heading: 'Browser', namespace: 'browser'} */\nfunction toPixels(img, canvas) {\n    return __awaiter(this, void 0, void 0, function () {\n        var $img, _a, height, width, depth, data, minTensor, maxTensor, vals, minVals, maxVals, min, max, multiplier, bytes, i, r, g, b, a, j, ctx, imageData;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    $img = tensor_util_env_1.convertToTensor(img, 'img', 'toPixels');\n                    if (!(img instanceof tensor_1.Tensor)) {\n                        // Assume int32 if user passed a native array.\n                        $img = $img.toInt();\n                    }\n                    if ($img.rank !== 2 && $img.rank !== 3) {\n                        throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \" + $img.rank + \".\");\n                    }\n                    _a = $img.shape.slice(0, 2), height = _a[0], width = _a[1];\n                    depth = $img.rank === 2 ? 1 : $img.shape[2];\n                    if (depth > 4 || depth === 2) {\n                        throw new Error(\"toPixels only supports depth of size \" +\n                            (\"1, 3 or 4 but got \" + depth));\n                    }\n                    return [4 /*yield*/, $img.data()];\n                case 1:\n                    data = _b.sent();\n                    minTensor = $img.min();\n                    maxTensor = $img.max();\n                    return [4 /*yield*/, Promise.all([minTensor.data(), maxTensor.data()])];\n                case 2:\n                    vals = _b.sent();\n                    minVals = vals[0];\n                    maxVals = vals[1];\n                    min = minVals[0];\n                    max = maxVals[0];\n                    minTensor.dispose();\n                    maxTensor.dispose();\n                    if ($img.dtype === 'float32') {\n                        if (min < 0 || max > 1) {\n                            throw new Error(\"Tensor values for a float32 Tensor must be in the \" +\n                                (\"range [0 - 1] but got range [\" + min + \" - \" + max + \"].\"));\n                        }\n                    }\n                    else if ($img.dtype === 'int32') {\n                        if (min < 0 || max > 255) {\n                            throw new Error(\"Tensor values for a int32 Tensor must be in the \" +\n                                (\"range [0 - 255] but got range [\" + min + \" - \" + max + \"].\"));\n                        }\n                    }\n                    else {\n                        throw new Error(\"Unsupported type for toPixels: \" + $img.dtype + \".\" +\n                            \" Please use float32 or int32 tensors.\");\n                    }\n                    multiplier = $img.dtype === 'float32' ? 255 : 1;\n                    bytes = new Uint8ClampedArray(width * height * 4);\n                    for (i = 0; i < height * width; ++i) {\n                        r = void 0, g = void 0, b = void 0, a = void 0;\n                        if (depth === 1) {\n                            r = data[i] * multiplier;\n                            g = data[i] * multiplier;\n                            b = data[i] * multiplier;\n                            a = 255;\n                        }\n                        else if (depth === 3) {\n                            r = data[i * 3] * multiplier;\n                            g = data[i * 3 + 1] * multiplier;\n                            b = data[i * 3 + 2] * multiplier;\n                            a = 255;\n                        }\n                        else if (depth === 4) {\n                            r = data[i * 4] * multiplier;\n                            g = data[i * 4 + 1] * multiplier;\n                            b = data[i * 4 + 2] * multiplier;\n                            a = data[i * 4 + 3] * multiplier;\n                        }\n                        j = i * 4;\n                        bytes[j + 0] = Math.round(r);\n                        bytes[j + 1] = Math.round(g);\n                        bytes[j + 2] = Math.round(b);\n                        bytes[j + 3] = Math.round(a);\n                    }\n                    if (canvas != null) {\n                        canvas.width = width;\n                        canvas.height = height;\n                        ctx = canvas.getContext('2d');\n                        imageData = new ImageData(bytes, width, height);\n                        ctx.putImageData(imageData, 0, 0);\n                    }\n                    if ($img !== img) {\n                        $img.dispose();\n                    }\n                    return [2 /*return*/, bytes];\n            }\n        });\n    });\n}\nexports.toPixels = toPixels;\nexports.fromPixels = operation_1.op({ fromPixels_: fromPixels_ });\n//# sourceMappingURL=browser.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar engine_1 = require(\"./engine\");\nvar tensor_util_env_1 = require(\"./tensor_util_env\");\nvar util_1 = require(\"./util\");\nvar TEST_EPSILON_FLOAT32 = 1e-3;\nexports.TEST_EPSILON_FLOAT16 = 1e-1;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    return expectArraysPredicate(actual, expected, function (a, b) { return areClose(a, b, epsilon); });\n}\nexports.expectArraysClose = expectArraysClose;\nfunction testEpsilon() {\n    return engine_1.ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n        exports.TEST_EPSILON_FLOAT16;\n}\nexports.testEpsilon = testEpsilon;\nfunction expectArraysPredicate(actual, expected, predicate) {\n    var checkClassType = true;\n    if (util_1.isTypedArray(actual) || util_1.isTypedArray(expected)) {\n        checkClassType = false;\n    }\n    if (util_1.isTypedArray(actual) && util_1.isTypedArray(expected)) {\n        checkClassType = true;\n    }\n    if (checkClassType) {\n        var aType = actual.constructor.name;\n        var bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(\"Arrays are of different type. Actual: \" + aType + \". \" +\n                (\"Expected: \" + bType));\n        }\n    }\n    if (Array.isArray(actual) && Array.isArray(expected)) {\n        var actualShape = tensor_util_env_1.inferShape(actual);\n        var expectedShape = tensor_util_env_1.inferShape(expected);\n        if (!util_1.arraysEqual(actualShape, expectedShape)) {\n            throw new Error(\"Arrays have different shapes. \" +\n                (\"Actual: [\" + actualShape + \"]. Expected: [\" + expectedShape + \"]\"));\n        }\n    }\n    var actualFlat = util_1.isTypedArray(actual) ? actual : util_1.flatten(actual);\n    var expectedFlat = util_1.isTypedArray(expected) ?\n        expected :\n        util_1.flatten(expected);\n    if (actualFlat.length !== expectedFlat.length) {\n        throw new Error(\"Arrays have different lengths actual: \" + actualFlat.length + \" vs \" +\n            (\"expected: \" + expectedFlat.length + \".\\n\") +\n            (\"Actual:   \" + actualFlat + \".\\n\") +\n            (\"Expected: \" + expectedFlat + \".\"));\n    }\n    for (var i = 0; i < expectedFlat.length; ++i) {\n        var a = actualFlat[i];\n        var e = expectedFlat[i];\n        if (!predicate(a, e)) {\n            throw new Error(\"Arrays differ: actual[\" + i + \"] = \" + a + \", expected[\" + i + \"] = \" + e + \".\\n\" +\n                (\"Actual:   \" + actualFlat + \".\\n\") +\n                (\"Expected: \" + expectedFlat + \".\"));\n        }\n    }\n}\nfunction expectPromiseToFail(fn, done) {\n    fn().then(function () { return done.fail(); }, function () { return done(); });\n}\nexports.expectPromiseToFail = expectPromiseToFail;\nfunction expectArraysEqual(actual, expected) {\n    var exp = typeof expected === 'string' || typeof expected === 'number' ||\n        typeof expected === 'boolean' ?\n        [expected] :\n        expected;\n    if (util_1.isString(actual) || util_1.isString(actual[0]) ||\n        util_1.isString(expected) || util_1.isString(expected[0])) {\n        // tslint:disable-next-line: triple-equals\n        return expectArraysPredicate(actual, exp, function (a, b) { return a == b; });\n    }\n    return expectArraysPredicate(actual, expected, function (a, b) { return areClose(a, b, 0); });\n}\nexports.expectArraysEqual = expectArraysEqual;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (!isFinite(a) && !isFinite(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    for (var i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(\"Value out of range:\" + actual[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\nfunction expectArrayBuffersEqual(actual, expected) {\n    // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n    // a Float32Array solves this issue.\n    expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\nexports.expectArrayBuffersEqual = expectArrayBuffersEqual;\n//# sourceMappingURL=test_util.js.map","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '2.0.4';\nexport {version};\n","\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gpgpu_util = require(\"./backends/webgl/gpgpu_util\");\nexports.gpgpu_util = gpgpu_util;\nvar webgl_util = require(\"./backends/webgl/webgl_util\");\nexports.webgl_util = webgl_util;\nvar environment_1 = require(\"./environment\");\nvar backend_webgl_1 = require(\"./backends/webgl/backend_webgl\");\nexports.MathBackendWebGL = backend_webgl_1.MathBackendWebGL;\nvar canvas_util_1 = require(\"./backends/webgl/canvas_util\");\nexports.setWebGLContext = canvas_util_1.setWebGLContext;\nvar gpgpu_context_1 = require(\"./backends/webgl/gpgpu_context\");\nexports.GPGPUContext = gpgpu_context_1.GPGPUContext;\n/**\n * Enforce use of half precision textures if available on the platform.\n */\n/** @doc {heading: 'Environment', namespace: 'webgl'} */\nfunction forceHalfFloat() {\n    environment_1.env().set('WEBGL_FORCE_F16_TEXTURES', true);\n}\nexports.forceHalfFloat = forceHalfFloat;\n//# sourceMappingURL=webgl.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// So typings can propagate.\nvar adadelta_optimizer_1 = require(\"./optimizers/adadelta_optimizer\");\nvar adagrad_optimizer_1 = require(\"./optimizers/adagrad_optimizer\");\nvar adam_optimizer_1 = require(\"./optimizers/adam_optimizer\");\nvar adamax_optimizer_1 = require(\"./optimizers/adamax_optimizer\");\nvar momentum_optimizer_1 = require(\"./optimizers/momentum_optimizer\");\nvar optimizer_constructors_1 = require(\"./optimizers/optimizer_constructors\");\nvar rmsprop_optimizer_1 = require(\"./optimizers/rmsprop_optimizer\");\nvar sgd_optimizer_1 = require(\"./optimizers/sgd_optimizer\");\n// tslint:disable-next-line:no-unused-expression\n[momentum_optimizer_1.MomentumOptimizer, sgd_optimizer_1.SGDOptimizer, adadelta_optimizer_1.AdadeltaOptimizer, adagrad_optimizer_1.AdagradOptimizer,\n    rmsprop_optimizer_1.RMSPropOptimizer, adamax_optimizer_1.AdamaxOptimizer, adam_optimizer_1.AdamOptimizer];\nexports.train = {\n    sgd: optimizer_constructors_1.OptimizerConstructors.sgd,\n    momentum: optimizer_constructors_1.OptimizerConstructors.momentum,\n    adadelta: optimizer_constructors_1.OptimizerConstructors.adadelta,\n    adagrad: optimizer_constructors_1.OptimizerConstructors.adagrad,\n    rmsprop: optimizer_constructors_1.OptimizerConstructors.rmsprop,\n    adamax: optimizer_constructors_1.OptimizerConstructors.adamax,\n    adam: optimizer_constructors_1.OptimizerConstructors.adam\n};\n//# sourceMappingURL=train.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar adadelta_optimizer_1 = require(\"./adadelta_optimizer\");\nvar adagrad_optimizer_1 = require(\"./adagrad_optimizer\");\nvar adam_optimizer_1 = require(\"./adam_optimizer\");\nvar adamax_optimizer_1 = require(\"./adamax_optimizer\");\nvar momentum_optimizer_1 = require(\"./momentum_optimizer\");\nvar rmsprop_optimizer_1 = require(\"./rmsprop_optimizer\");\nvar sgd_optimizer_1 = require(\"./sgd_optimizer\");\nvar OptimizerConstructors = /** @class */ (function () {\n    function OptimizerConstructors() {\n    }\n    /**\n     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n     *\n     * ```js\n     * // Fit a quadratic function by learning the coefficients a, b, c.\n     * const xs = tf.tensor1d([0, 1, 2, 3]);\n     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n     *\n     * const a = tf.scalar(Math.random()).variable();\n     * const b = tf.scalar(Math.random()).variable();\n     * const c = tf.scalar(Math.random()).variable();\n     *\n     * // y = a * x^2 + b * x + c.\n     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n     * const loss = (pred, label) => pred.sub(label).square().mean();\n     *\n     * const learningRate = 0.01;\n     * const optimizer = tf.train.sgd(learningRate);\n     *\n     * // Train the model.\n     * for (let i = 0; i < 10; i++) {\n     *   optimizer.minimize(() => loss(f(xs), ys));\n     * }\n     *\n     * // Make predictions.\n     * console.log(\n     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n     * const preds = f(xs).dataSync();\n     * preds.forEach((pred, i) => {\n     *   console.log(`x: ${i}, pred: ${pred}`);\n     * });\n     * ```\n     *\n     * @param learningRate The learning rate to use for the SGD algorithm.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.sgd = function (learningRate) {\n        return new sgd_optimizer_1.SGDOptimizer(learningRate);\n    };\n    /**\n     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n     * descent.\n     *\n     * See\n     * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n     * http://proceedings.mlr.press/v28/sutskever13.pdf)\n     *\n     * @param learningRate The learning rate to use for the Momentum gradient\n     * descent algorithm.\n     * @param momentum The momentum to use for the momentum gradient descent\n     * algorithm.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.momentum = function (learningRate, momentum, useNesterov) {\n        if (useNesterov === void 0) { useNesterov = false; }\n        return new momentum_optimizer_1.MomentumOptimizer(learningRate, momentum, useNesterov);\n    };\n    /**\n     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n     * descent. This implementation uses plain momentum and is not centered\n     * version of RMSProp.\n     *\n     * See\n     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n     *\n     * @param learningRate The learning rate to use for the RMSProp gradient\n     * descent algorithm.\n     * @param decay The discounting factor for the history/coming gradient.\n     * @param momentum The momentum to use for the RMSProp gradient descent\n     * algorithm.\n     * @param epsilon Small value to avoid zero denominator.\n     * @param centered If true, gradients are normalized by the estimated\n     * variance of the gradient.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.rmsprop = function (learningRate, decay, momentum, epsilon, centered) {\n        if (decay === void 0) { decay = .9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = null; }\n        if (centered === void 0) { centered = false; }\n        return new rmsprop_optimizer_1.RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    };\n    /**\n     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adam gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.adam = function (learningRate, beta1, beta2, epsilon) {\n        if (learningRate === void 0) { learningRate = 0.001; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = null; }\n        return new adam_optimizer_1.AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    };\n    /**\n     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n     *\n     * @param learningRate The learning rate to use for the Adadelta gradient\n     * descent algorithm.\n     * @param rho The learning rate decay over each update.\n     * @param epsilon A constant epsilon used to better condition the grad\n     * update.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.adadelta = function (learningRate, rho, epsilon) {\n        if (learningRate === void 0) { learningRate = .001; }\n        if (rho === void 0) { rho = .95; }\n        if (epsilon === void 0) { epsilon = null; }\n        return new adadelta_optimizer_1.AdadeltaOptimizer(learningRate, rho, epsilon);\n    };\n    /**\n     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adamax gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     * @param decay The learning rate decay over each update.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.adamax = function (learningRate, beta1, beta2, epsilon, decay) {\n        if (learningRate === void 0) { learningRate = 0.002; }\n        if (beta1 === void 0) { beta1 = 0.9; }\n        if (beta2 === void 0) { beta2 = 0.999; }\n        if (epsilon === void 0) { epsilon = null; }\n        if (decay === void 0) { decay = 0.0; }\n        return new adamax_optimizer_1.AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    };\n    /**\n     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n     * See\n     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n     * or\n     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n     *\n     * @param learningRate The learning rate to use for the Adagrad gradient\n     * descent algorithm.\n     * @param initialAccumulatorValue Starting value for the accumulators, must be\n     * positive.\n     */\n    /**\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    OptimizerConstructors.adagrad = function (learningRate, initialAccumulatorValue) {\n        if (initialAccumulatorValue === void 0) { initialAccumulatorValue = 0.1; }\n        return new adagrad_optimizer_1.AdagradOptimizer(learningRate, initialAccumulatorValue);\n    };\n    return OptimizerConstructors;\n}());\nexports.OptimizerConstructors = OptimizerConstructors;\n//# sourceMappingURL=optimizer_constructors.js.map","\"use strict\";\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar delayCallback = (function () {\n    if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame;\n    }\n    else if (typeof setImmediate !== 'undefined') {\n        return setImmediate;\n    }\n    return function (f) { return f(); }; // no delays\n})();\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n */\n/** @doc {heading: 'Performance', subheading: 'Timing'} */\nfunction nextFrame() {\n    return new Promise(function (resolve) { return delayCallback(function () { return resolve(); }); });\n}\nexports.nextFrame = nextFrame;\n//# sourceMappingURL=browser_util.js.map","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\n/**\n * Takes the sigmoid of the part heatmap output and generates a 2d one-hot\n * tensor with ones where the part's score has the maximum value.\n *\n * @param partHeatmapScores\n */\nfunction toFlattenedOneHotPartMap(partHeatmapScores: tf.Tensor3D): tf.Tensor2D {\n  const numParts = partHeatmapScores.shape[2];\n  const partMapLocations = partHeatmapScores.argMax(2);\n\n  const partMapFlattened = partMapLocations.reshape([-1]);\n\n  return tf.oneHot(partMapFlattened, numParts) as tf.Tensor2D;\n}\n\nfunction clipByMask2d(image: tf.Tensor2D, mask: tf.Tensor2D): tf.Tensor2D {\n  return image.mul(mask);\n}\n\n/**\n * Takes the sigmoid of the segmentation output, and generates a segmentation\n * mask with a 1 or 0 at each pixel where there is a person or not a person. The\n * segmentation threshold determines the threshold of a score for a pixel for it\n * to be considered part of a person.\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\n * @param segmentationThreshold The minimum that segmentation values must have\n * to be considered part of the person.  Affects the generation of the\n * segmentation mask and the clipping of the colored part image.\n *\n * @returns A segmentation mask with a 1 or 0 at each pixel where there is a\n * person or not a person.\n */\nexport function toMaskTensor(\n    segmentScores: tf.Tensor2D, threshold: number): tf.Tensor2D {\n  return tf.tidy(\n      () =>\n          (segmentScores.greater(tf.scalar(threshold)).toInt() as tf.Tensor2D));\n}\n\n/**\n * Takes the sigmoid of the person and part map output, and returns a 2d tensor\n * of an image with the corresponding value at each pixel corresponding to the\n * part with the highest value. These part ids are clipped by the segmentation\n * mask. Wherever the a pixel is clipped by the segmentation mask, its value\n * will set to -1, indicating that there is no part in that pixel.\n * @param segmentScores A 3d-tensor of the sigmoid of the segmentation output.\n * @param partHeatmapScores A 3d-tensor of the sigmoid of the part heatmap\n * output. The third dimension corresponds to the part.\n *\n * @returns A 2d tensor of an image with the corresponding value at each pixel\n * corresponding to the part with the highest value. These part ids are clipped\n * by the segmentation mask.  It will have values of -1 for pixels that are\n * outside of the body and do not have a corresponding part.\n */\nexport function decodePartSegmentation(\n    segmentationMask: tf.Tensor2D,\n    partHeatmapScores: tf.Tensor3D): tf.Tensor2D {\n  const [partMapHeight, partMapWidth, numParts] = partHeatmapScores.shape;\n  return tf.tidy(() => {\n    const flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\n    const partNumbers = tf.range(0, numParts, 1, 'int32').expandDims(1);\n\n    const partMapFlattened =\n        flattenedMap.matMul(partNumbers as tf.Tensor2D).toInt();\n\n    const partMap = partMapFlattened.reshape([partMapHeight, partMapWidth]);\n\n    const partMapShiftedUpForClipping = partMap.add(tf.scalar(1, 'int32'));\n\n    return clipByMask2d(\n               partMapShiftedUpForClipping as tf.Tensor2D, segmentationMask)\n        .sub(tf.scalar(1, 'int32'));\n  });\n}\n\nexport function decodeOnlyPartSegmentation(partHeatmapScores: tf.Tensor3D):\n    tf.Tensor2D {\n  const [partMapHeight, partMapWidth, numParts] = partHeatmapScores.shape;\n  return tf.tidy(() => {\n    const flattenedMap = toFlattenedOneHotPartMap(partHeatmapScores);\n    const partNumbers = tf.range(0, numParts, 1, 'int32').expandDims(1);\n\n    const partMapFlattened =\n        flattenedMap.matMul(partNumbers as tf.Tensor2D).toInt();\n\n    return partMapFlattened.reshape([partMapHeight, partMapWidth]);\n  });\n}\n","\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfconv from '@tensorflow/tfjs-converter';\nimport * as tf from '@tensorflow/tfjs-core';\nimport {BodyPixOutputStride} from './types';\n\n/**\n * BodyPix supports using various convolution neural network models\n * (e.g. ResNet and MobileNetV1) as its underlying base model.\n * The following BaseModel interface defines a unified interface for\n * creating such BodyPix base models. Currently both MobileNet (in\n * ./mobilenet.ts) and ResNet (in ./resnet.ts) implements the BaseModel\n * interface. New base models that conform to the BaseModel interface can be\n * added to BodyPix.\n */\nexport abstract class BaseModel {\n  constructor(\n      protected readonly model: tfconv.GraphModel,\n      public readonly outputStride: BodyPixOutputStride) {\n    const inputShape =\n        this.model.inputs[0].shape as [number, number, number, number];\n    tf.util.assert(\n        (inputShape[1] === -1) && (inputShape[2] === -1),\n        () => `Input shape [${inputShape[1]}, ${inputShape[2]}] ` +\n            `must both be equal to or -1`);\n  }\n\n  abstract preprocessInput(input: tf.Tensor3D): tf.Tensor3D;\n\n  /**\n   * Predicts intermediate Tensor representations.\n   *\n   * @param input The input RGB image of the base model.\n   * A Tensor of shape: [`inputResolution`, `inputResolution`, 3].\n   *\n   * @return A dictionary of base model's intermediate predictions.\n   * The returned dictionary should contains the following elements:\n   * - heatmapScores: A Tensor3D that represents the keypoint heatmap scores.\n   * - offsets: A Tensor3D that represents the offsets.\n   * - displacementFwd: A Tensor3D that represents the forward displacement.\n   * - displacementBwd: A Tensor3D that represents the backward displacement.\n   * - segmentation: A Tensor3D that represents the segmentation of all\n   * people.\n   * - longOffsets: A Tensor3D that represents the long offsets used for\n   * instance grouping.\n   * - partHeatmaps: A Tensor3D that represents the body part segmentation.\n   */\n  predict(input: tf.Tensor3D): {\n    heatmapScores: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n    segmentation: tf.Tensor3D,\n    partHeatmaps: tf.Tensor3D,\n    longOffsets: tf.Tensor3D,\n    partOffsets: tf.Tensor3D\n  } {\n    return tf.tidy(() => {\n      const asFloat = this.preprocessInput(input.toFloat());\n      const asBatch = asFloat.expandDims(0);\n      const results = this.model.predict(asBatch) as tf.Tensor4D[];\n      const results3d: tf.Tensor3D[] = results.map(y => y.squeeze([0]));\n      const namedResults = this.nameOutputResults(results3d);\n\n      return {\n        heatmapScores: namedResults.heatmap.sigmoid(),\n        offsets: namedResults.offsets,\n        displacementFwd: namedResults.displacementFwd,\n        displacementBwd: namedResults.displacementBwd,\n        segmentation: namedResults.segmentation,\n        partHeatmaps: namedResults.partHeatmaps,\n        longOffsets: namedResults.longOffsets,\n        partOffsets: namedResults.partOffsets\n      };\n    });\n  }\n\n  // Because MobileNet and ResNet predict() methods output a different order for\n  // these values, we have a method that needs to be implemented to order them.\n  abstract nameOutputResults(results: tf.Tensor3D[]): {\n    heatmap: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n    segmentation: tf.Tensor3D,\n    partHeatmaps: tf.Tensor3D,\n    longOffsets: tf.Tensor3D,\n    partOffsets: tf.Tensor3D\n  };\n\n  /**\n   * Releases the CPU and GPU memory allocated by the model.\n   */\n  dispose() {\n    this.model.dispose();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {BaseModel} from './base_model';\n\nexport class MobileNet extends BaseModel {\n  preprocessInput(input: tf.Tensor3D): tf.Tensor3D {\n    // Normalize the pixels [0, 255] to be between [-1, 1].\n    return tf.tidy(() => tf.div(input, 127.5).sub(1.0));\n  }\n\n  nameOutputResults(results: tf.Tensor3D[]) {\n    const [\n      offsets,\n      segmentation,\n      partHeatmaps,\n      longOffsets,\n      heatmap,\n      displacementFwd,\n      displacementBwd,\n      partOffsets,\n  ] = results;\n    return {\n      offsets,\n      segmentation,\n      partHeatmaps,\n      longOffsets,\n      heatmap,\n      displacementFwd,\n      displacementBwd,\n      partOffsets\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport type Tuple<T> = [T, T];\nexport type StringTuple = Tuple<string>;\nexport type NumberTuple = Tuple<number>;\n\nexport const PART_NAMES = [\n  'nose', 'leftEye', 'rightEye', 'leftEar', 'rightEar', 'leftShoulder',\n  'rightShoulder', 'leftElbow', 'rightElbow', 'leftWrist', 'rightWrist',\n  'leftHip', 'rightHip', 'leftKnee', 'rightKnee', 'leftAnkle', 'rightAnkle'\n];\n\nexport const NUM_KEYPOINTS = PART_NAMES.length;\n\nexport interface NumberDict {\n  [jointName: string]: number;\n}\n\nexport const PART_IDS =\n    PART_NAMES.reduce((result: NumberDict, jointName, i): NumberDict => {\n      result[jointName] = i;\n      return result;\n    }, {}) as NumberDict;\n\nconst CONNECTED_PART_NAMES: StringTuple[] = [\n  ['leftHip', 'leftShoulder'], ['leftElbow', 'leftShoulder'],\n  ['leftElbow', 'leftWrist'], ['leftHip', 'leftKnee'],\n  ['leftKnee', 'leftAnkle'], ['rightHip', 'rightShoulder'],\n  ['rightElbow', 'rightShoulder'], ['rightElbow', 'rightWrist'],\n  ['rightHip', 'rightKnee'], ['rightKnee', 'rightAnkle'],\n  ['leftShoulder', 'rightShoulder'], ['leftHip', 'rightHip']\n];\n\n/*\n * Define the skeleton. This defines the parent->child relationships of our\n * tree. Arbitrarily this defines the nose as the root of the tree, however\n * since we will infer the displacement for both parent->child and\n * child->parent, we can define the tree root as any node.\n */\nexport const POSE_CHAIN: StringTuple[] = [\n  ['nose', 'leftEye'], ['leftEye', 'leftEar'], ['nose', 'rightEye'],\n  ['rightEye', 'rightEar'], ['nose', 'leftShoulder'],\n  ['leftShoulder', 'leftElbow'], ['leftElbow', 'leftWrist'],\n  ['leftShoulder', 'leftHip'], ['leftHip', 'leftKnee'],\n  ['leftKnee', 'leftAnkle'], ['nose', 'rightShoulder'],\n  ['rightShoulder', 'rightElbow'], ['rightElbow', 'rightWrist'],\n  ['rightShoulder', 'rightHip'], ['rightHip', 'rightKnee'],\n  ['rightKnee', 'rightAnkle']\n];\n\nexport const CONNECTED_PART_INDICES = CONNECTED_PART_NAMES.map(\n    ([jointNameA, jointNameB]) =>\n        ([PART_IDS[jointNameA], PART_IDS[jointNameB]]));\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NUM_KEYPOINTS} from '../keypoints';\nimport {Padding, Part, TensorBuffer3D, Vector2D} from '../types';\n\nexport function getScale(\n    [height, width]: [number, number],\n    [inputResolutionY, inputResolutionX]: [number, number],\n    padding: Padding): [number, number] {\n  const {top: padT, bottom: padB, left: padL, right: padR} = padding;\n  const scaleY = inputResolutionY / (padT + padB + height);\n  const scaleX = inputResolutionX / (padL + padR + width);\n  return [scaleX, scaleY];\n}\n\nexport function getOffsetPoint(\n    y: number, x: number, keypoint: number, offsets: TensorBuffer3D): Vector2D {\n  return {\n    y: offsets.get(y, x, keypoint),\n    x: offsets.get(y, x, keypoint + NUM_KEYPOINTS)\n  };\n}\n\nexport function getImageCoords(\n    part: Part, outputStride: number, offsets: TensorBuffer3D): Vector2D {\n  const {heatmapY, heatmapX, id: keypoint} = part;\n  const {y, x} = getOffsetPoint(heatmapY, heatmapX, keypoint, offsets);\n  return {\n    x: part.heatmapX * outputStride + x,\n    y: part.heatmapY * outputStride + y\n  };\n}\n\nexport function fillArray<T>(element: T, size: number): T[] {\n  const result: T[] = new Array(size);\n\n  for (let i = 0; i < size; i++) {\n    result[i] = element;\n  }\n\n  return result;\n}\n\nexport function clamp(a: number, min: number, max: number): number {\n  if (a < min) {\n    return min;\n  }\n  if (a > max) {\n    return max;\n  }\n  return a;\n}\n\nexport function squaredDistance(\n    y1: number, x1: number, y2: number, x2: number): number {\n  const dy = y2 - y1;\n  const dx = x2 - x1;\n  return dy * dy + dx * dx;\n}\n\nexport function addVectors(a: Vector2D, b: Vector2D): Vector2D {\n  return {x: a.x + b.x, y: a.y + b.y};\n}\n\nexport function clampVector(a: Vector2D, min: number, max: number): Vector2D {\n  return {y: clamp(a.y, min, max), x: clamp(a.x, min, max)};\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NUM_KEYPOINTS} from '../keypoints';\nimport {Padding, Pose} from '../types';\n\nimport {getScale} from './util';\n\ninterface Pair {\n  x: number;\n  y: number;\n}\n\nfunction computeDistance(embedding: Pair[], pose: Pose, minPartScore = 0.3) {\n  let distance = 0.0;\n  let numKpt = 0;\n  for (let p = 0; p < embedding.length; p++) {\n    if (pose.keypoints[p].score > minPartScore) {\n      numKpt += 1;\n      distance += (embedding[p].x - pose.keypoints[p].position.x) ** 2 +\n          (embedding[p].y - pose.keypoints[p].position.y) ** 2;\n    }\n  }\n  if (numKpt === 0) {\n    distance = Infinity;\n  } else {\n    distance = distance / numKpt;\n  }\n  return distance;\n}\n\nfunction convertToPositionInOuput(\n    position: Pair, [padT, padL]: [number, number],\n    [scaleX, scaleY]: [number, number], stride: number): Pair {\n  const y = Math.round(((padT + position.y + 1.0) * scaleY - 1.0) / stride);\n  const x = Math.round(((padL + position.x + 1.0) * scaleX - 1.0) / stride);\n  return {x, y};\n}\n\nfunction getEmbedding(\n    location: Pair, keypointIndex: number,\n    convertToPosition: (pair: Pair) => Pair, outputResolutionX: number,\n    longOffsets: Float32Array, refineSteps: number,\n    [height, width]: [number, number]): Pair {\n  const newLocation = convertToPosition(location);\n\n  const nn = newLocation.y * outputResolutionX + newLocation.x;\n  let dy = longOffsets[NUM_KEYPOINTS * (2 * nn) + keypointIndex];\n  let dx = longOffsets[NUM_KEYPOINTS * (2 * nn + 1) + keypointIndex];\n  let y = location.y + dy;\n  let x = location.x + dx;\n  for (let t = 0; t < refineSteps; t++) {\n    y = Math.min(y, height - 1);\n    x = Math.min(x, width - 1);\n    const newPos = convertToPosition({x, y});\n    const nn = newPos.y * outputResolutionX + newPos.x;\n    dy = longOffsets[NUM_KEYPOINTS * (2 * nn) + keypointIndex];\n    dx = longOffsets[NUM_KEYPOINTS * (2 * nn + 1) + keypointIndex];\n    y = y + dy;\n    x = x + dx;\n  }\n\n  return {x, y};\n}\n\nfunction matchEmbeddingToInstance(\n    location: Pair, longOffsets: Float32Array, poses: Pose[],\n    numKptForMatching: number, [padT, padL]: [number, number],\n    [scaleX, scaleY]: [number, number], outputResolutionX: number,\n    [height, width]: [number, number], stride: number,\n    refineSteps: number): number {\n  const embed: Pair[] = [];\n  const convertToPosition = (pair: Pair) =>\n      convertToPositionInOuput(pair, [padT, padL], [scaleX, scaleY], stride);\n\n  for (let keypointsIndex = 0; keypointsIndex < numKptForMatching;\n       keypointsIndex++) {\n    const embedding = getEmbedding(\n        location, keypointsIndex, convertToPosition, outputResolutionX,\n        longOffsets, refineSteps, [height, width]);\n\n    embed.push(embedding);\n  }\n\n  let kMin = -1;\n  let kMinDist = Infinity;\n  for (let k = 0; k < poses.length; k++) {\n    const dist = computeDistance(embed, poses[k]);\n    if (dist < kMinDist) {\n      kMin = k;\n      kMinDist = dist;\n    }\n  }\n  return kMin;\n}\n\nfunction getOutputResolution(\n    [inputResolutionY, inputResolutionX]: [number, number],\n    stride: number): [number, number] {\n  const outputResolutionX = Math.round((inputResolutionX - 1.0) / stride + 1.0);\n  const outputResolutionY = Math.round((inputResolutionY - 1.0) / stride + 1.0);\n  return [outputResolutionX, outputResolutionY];\n}\n\nexport function decodeMultipleMasksCPU(\n    segmentation: Uint8Array, longOffsets: Float32Array,\n    posesAboveScore: Pose[], height: number, width: number, stride: number,\n    [inHeight, inWidth]: [number, number], padding: Padding,\n    refineSteps: number, numKptForMatching = 5): Uint8Array[] {\n  const dataArrays =\n      posesAboveScore.map(x => new Uint8Array(height * width).fill(0));\n\n  const {top: padT, left: padL} = padding;\n\n  const [scaleX, scaleY] =\n      getScale([height, width], [inHeight, inWidth], padding);\n  const [outputResolutionX, ] =\n    getOutputResolution([inHeight, inWidth], stride);\n  for (let i = 0; i < height; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      const n = i * width + j;\n      const prob = segmentation[n];\n      if (prob === 1) {\n        const kMin = matchEmbeddingToInstance(\n            {x: j, y: i}, longOffsets, posesAboveScore, numKptForMatching,\n            [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width],\n            stride, refineSteps);\n        if (kMin >= 0) {\n          dataArrays[kMin][n] = 1;\n        }\n      }\n    }\n  }\n\n  return dataArrays;\n}\n\nexport function decodeMultiplePartMasksCPU(\n    segmentation: Uint8Array, longOffsets: Float32Array,\n    partSegmentaion: Uint8Array, posesAboveScore: Pose[], height: number,\n    width: number, stride: number, [inHeight, inWidth]: [number, number],\n    padding: Padding, refineSteps: number,\n    numKptForMatching = 5): Int32Array[] {\n  const dataArrays =\n      posesAboveScore.map(x => new Int32Array(height * width).fill(-1));\n\n  const {top: padT, left: padL} = padding;\n\n  const [scaleX, scaleY] =\n      getScale([height, width], [inHeight, inWidth], padding);\n  const [outputResolutionX, ] =\n    getOutputResolution([inHeight, inWidth], stride);\n\n  for (let i = 0; i < height; i += 1) {\n    for (let j = 0; j < width; j += 1) {\n      const n = i * width + j;\n      const prob = segmentation[n];\n      if (prob === 1) {\n        const kMin = matchEmbeddingToInstance(\n            {x: j, y: i}, longOffsets, posesAboveScore, numKptForMatching,\n            [padT, padL], [scaleX, scaleY], outputResolutionX, [height, width],\n            stride, refineSteps);\n        if (kMin >= 0) {\n          dataArrays[kMin][n] = partSegmentaion[n];\n        }\n      }\n    }\n  }\n\n  return dataArrays;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {NUM_KEYPOINTS} from '../keypoints';\nimport {Padding, Pose} from '../types';\nimport {getScale} from './util';\n\nexport function decodeMultipleMasksWebGl(\n    segmentation: tf.Tensor2D, longOffsets: tf.Tensor3D,\n    posesAboveScore: Pose[], height: number, width: number, stride: number,\n    [inHeight, inWidth]: [number, number], padding: Padding,\n    refineSteps: number, minKptScore: number,\n    maxNumPeople: number): tf.Tensor2D {\n  // The height/width of the image/canvas itself.\n  const [origHeight, origWidth] = segmentation.shape;\n  // The height/width of the output of the model.\n  const [outHeight, outWidth] = longOffsets.shape.slice(0, 2);\n\n  const shapedLongOffsets: tf.Tensor4D =\n      longOffsets.reshape([outHeight, outWidth, 2, NUM_KEYPOINTS]);\n\n  // Make pose tensor of shape [MAX_NUM_PEOPLE, NUM_KEYPOINTS, 3] where\n  // the last 3 coordinates correspond to the score, h and w coordinate of that\n  // keypoint.\n  const poseVals = new Float32Array(maxNumPeople * NUM_KEYPOINTS * 3).fill(0.0);\n  for (let i = 0; i < posesAboveScore.length; i++) {\n    const poseOffset = i * NUM_KEYPOINTS * 3;\n    const pose = posesAboveScore[i];\n    for (let kp = 0; kp < NUM_KEYPOINTS; kp++) {\n      const keypoint = pose.keypoints[kp];\n      const offset = poseOffset + kp * 3;\n      poseVals[offset] = keypoint.score;\n      poseVals[offset + 1] = keypoint.position.y;\n      poseVals[offset + 2] = keypoint.position.x;\n    }\n  }\n\n  const [scaleX, scaleY] =\n      getScale([height, width], [inHeight, inWidth], padding);\n\n  const posesTensor = tf.tensor(poseVals, [maxNumPeople, NUM_KEYPOINTS, 3]);\n\n  const {top: padT, left: padL} = padding;\n\n  const program: tf.webgl.GPGPUProgram = {\n    variableNames: ['segmentation', 'longOffsets', 'poses'],\n    outputShape: [origHeight, origWidth],\n    userCode: `\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, ${padT}, ${scaleY}, ${stride});\n      float stridedW = convertToPositionInOutputFloat(\n        w, ${padL}, ${scaleX}, ${stride});\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < ${maxNumPeople}; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < ${NUM_KEYPOINTS}; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < ${refineSteps}; s++) {\n            int yRounded = round(min(y, float(${height - 1.0})));\n            int xRounded = round(min(x, float(${width - 1.0})));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, ${padT}, ${scaleY}, ${stride});\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, ${padL}, ${scaleX}, ${stride});\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > ${minKptScore}) {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  `\n  };\n  const webglBackend = tf.backend() as tf.webgl.MathBackendWebGL;\n  return webglBackend.compileAndRun(\n      program, [segmentation, shapedLongOffsets, posesTensor]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport {getBackend} from '@tensorflow/tfjs-core';\n\nimport {Padding, PartSegmentation, PersonSegmentation, Pose} from '../types';\n\nimport {decodeMultipleMasksCPU, decodeMultiplePartMasksCPU} from './decode_multiple_masks_cpu';\nimport {decodeMultipleMasksWebGl} from './decode_multiple_masks_webgl';\n\nexport function toPersonKSegmentation(\n    segmentation: tf.Tensor2D, k: number): tf.Tensor2D {\n  return tf.tidy(\n      () => (segmentation.equal(tf.scalar(k)).toInt() as tf.Tensor2D));\n}\n\nexport function toPersonKPartSegmentation(\n    segmentation: tf.Tensor2D, bodyParts: tf.Tensor2D, k: number): tf.Tensor2D {\n  return tf.tidy(\n      () => segmentation.equal(tf.scalar(k))\n                .toInt()\n                .mul(bodyParts.add(1))\n                .sub(1));\n}\n\nfunction isWebGlBackend() {\n  return getBackend() === 'webgl';\n}\n\nexport async function decodePersonInstanceMasks(\n    segmentation: tf.Tensor2D, longOffsets: tf.Tensor3D, poses: Pose[],\n    height: number, width: number, stride: number,\n    [inHeight, inWidth]: [number, number], padding: Padding, minPoseScore = 0.2,\n    refineSteps = 8, minKeypointScore = 0.3,\n    maxNumPeople = 10): Promise<PersonSegmentation[]> {\n  // Filter out poses with smaller score.\n  const posesAboveScore = poses.filter(pose => pose.score >= minPoseScore);\n\n  let personSegmentationsData: Uint8Array[];\n\n  if (isWebGlBackend()) {\n    const personSegmentations = tf.tidy(() => {\n      const masksTensor = decodeMultipleMasksWebGl(\n          segmentation, longOffsets, posesAboveScore, height, width, stride,\n          [inHeight, inWidth], padding, refineSteps, minKeypointScore,\n          maxNumPeople);\n\n      return posesAboveScore.map(\n          (_, k) => toPersonKSegmentation(masksTensor, k));\n    });\n\n    personSegmentationsData =\n        (await Promise.all(personSegmentations.map(mask => mask.data())) as\n         Uint8Array[]);\n\n    personSegmentations.forEach(x => x.dispose());\n  } else {\n    const segmentationsData = await segmentation.data() as Uint8Array;\n    const longOffsetsData = await longOffsets.data() as Float32Array;\n\n    personSegmentationsData = decodeMultipleMasksCPU(\n        segmentationsData, longOffsetsData, posesAboveScore, height, width,\n        stride, [inHeight, inWidth], padding, refineSteps);\n  }\n\n  return personSegmentationsData.map(\n      (data, i) => ({data, pose: posesAboveScore[i], width, height}));\n}\n\nexport async function decodePersonInstancePartMasks(\n    segmentation: tf.Tensor2D, longOffsets: tf.Tensor3D,\n    partSegmentation: tf.Tensor2D, poses: Pose[], height: number, width: number,\n    stride: number, [inHeight, inWidth]: [number, number], padding: Padding,\n    minPoseScore = 0.2, refineSteps = 8, minKeypointScore = 0.3,\n    maxNumPeople = 10): Promise<PartSegmentation[]> {\n  const posesAboveScore = poses.filter(pose => pose.score >= minPoseScore);\n\n  let partSegmentationsByPersonData: Int32Array[];\n\n  if (isWebGlBackend()) {\n    const partSegmentations = tf.tidy(() => {\n      const masksTensor = decodeMultipleMasksWebGl(\n          segmentation, longOffsets, posesAboveScore, height, width, stride,\n          [inHeight, inWidth], padding, refineSteps, minKeypointScore,\n          maxNumPeople);\n\n      return posesAboveScore.map(\n          (_, k) =>\n              toPersonKPartSegmentation(masksTensor, partSegmentation, k));\n    });\n\n    partSegmentationsByPersonData =\n        (await Promise.all(partSegmentations.map(x => x.data()))) as\n        Int32Array[];\n\n    partSegmentations.forEach(x => x.dispose());\n  } else {\n    const segmentationsData = await segmentation.data() as Uint8Array;\n    const longOffsetsData = await longOffsets.data() as Float32Array;\n    const partSegmentaionData = await partSegmentation.data() as Uint8Array;\n\n    partSegmentationsByPersonData = decodeMultiplePartMasksCPU(\n        segmentationsData, longOffsetsData, partSegmentaionData,\n        posesAboveScore, height, width, stride, [inHeight, inWidth], padding,\n        refineSteps);\n  }\n\n  return partSegmentationsByPersonData.map(\n      (data, k) => ({pose: posesAboveScore[k], data, height, width}));\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// algorithm based on Coursera Lecture from Algorithms, Part 1:\n// https://www.coursera.org/learn/algorithms-part1/lecture/ZjoSM/heapsort\n\nfunction half(k: number) {\n  return Math.floor(k / 2);\n}\n\nexport class MaxHeap<T> {\n  private priorityQueue: T[];\n  private numberOfElements: number;\n  private getElementValue: (element: T) => number;\n\n  constructor(maxSize: number, getElementValue: (element: T) => number) {\n    this.priorityQueue = new Array(maxSize);\n    this.numberOfElements = -1;\n    this.getElementValue = getElementValue;\n  }\n\n  public enqueue(x: T): void {\n    this.priorityQueue[++this.numberOfElements] = x;\n    this.swim(this.numberOfElements);\n  }\n\n  public dequeue(): T {\n    const max = this.priorityQueue[0];\n    this.exchange(0, this.numberOfElements--);\n    this.sink(0);\n    this.priorityQueue[this.numberOfElements + 1] = null;\n    return max;\n  }\n\n  public empty(): boolean {\n    return this.numberOfElements === -1;\n  }\n\n  public size(): number {\n    return this.numberOfElements + 1;\n  }\n\n  public all(): T[] {\n    return this.priorityQueue.slice(0, this.numberOfElements + 1);\n  }\n\n  public max(): T {\n    return this.priorityQueue[0];\n  }\n\n  private swim(k: number): void {\n    while (k > 0 && this.less(half(k), k)) {\n      this.exchange(k, half(k));\n      k = half(k);\n    }\n  }\n\n  private sink(k: number): void {\n    while (2 * k <= this.numberOfElements) {\n      let j = 2 * k;\n      if (j < this.numberOfElements && this.less(j, j + 1)) {\n        j++;\n      }\n      if (!this.less(k, j)) {\n        break;\n      }\n      this.exchange(k, j);\n      k = j;\n    }\n  }\n\n  private getValueAt(i: number): number {\n    return this.getElementValue(this.priorityQueue[i]);\n  }\n\n  private less(i: number, j: number): boolean {\n    return this.getValueAt(i) < this.getValueAt(j);\n  }\n\n  private exchange(i: number, j: number): void {\n    const t = this.priorityQueue[i];\n    this.priorityQueue[i] = this.priorityQueue[j];\n    this.priorityQueue[j] = t;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {PartWithScore, TensorBuffer3D} from '../types';\n\nimport {MaxHeap} from './max_heap';\n\nfunction scoreIsMaximumInLocalWindow(\n    keypointId: number, score: number, heatmapY: number, heatmapX: number,\n    localMaximumRadius: number, scores: TensorBuffer3D): boolean {\n  const [height, width] = scores.shape;\n\n  let localMaximum = true;\n  const yStart = Math.max(heatmapY - localMaximumRadius, 0);\n  const yEnd = Math.min(heatmapY + localMaximumRadius + 1, height);\n  for (let yCurrent = yStart; yCurrent < yEnd; ++yCurrent) {\n    const xStart = Math.max(heatmapX - localMaximumRadius, 0);\n    const xEnd = Math.min(heatmapX + localMaximumRadius + 1, width);\n    for (let xCurrent = xStart; xCurrent < xEnd; ++xCurrent) {\n      if (scores.get(yCurrent, xCurrent, keypointId) > score) {\n        localMaximum = false;\n        break;\n      }\n    }\n    if (!localMaximum) {\n      break;\n    }\n  }\n\n  return localMaximum;\n}\n\n/**\n * Builds a priority queue with part candidate positions for a specific image in\n * the batch. For this we find all local maxima in the score maps with score\n * values above a threshold. We create a single priority queue across all parts.\n */\nexport function buildPartWithScoreQueue(\n    scoreThreshold: number, localMaximumRadius: number,\n    scores: TensorBuffer3D): MaxHeap<PartWithScore> {\n  const [height, width, numKeypoints] = scores.shape;\n\n  const queue = new MaxHeap<PartWithScore>(\n      height * width * numKeypoints, ({score}) => score);\n\n  for (let heatmapY = 0; heatmapY < height; ++heatmapY) {\n    for (let heatmapX = 0; heatmapX < width; ++heatmapX) {\n      for (let keypointId = 0; keypointId < numKeypoints; ++keypointId) {\n        const score = scores.get(heatmapY, heatmapX, keypointId);\n\n        // Only consider parts with score greater or equal to threshold as\n        // root candidates.\n        if (score < scoreThreshold) {\n          continue;\n        }\n\n        // Only consider keypoints whose score is maximum in a local window.\n        if (scoreIsMaximumInLocalWindow(\n                keypointId, score, heatmapY, heatmapX, localMaximumRadius,\n                scores)) {\n          queue.enqueue({score, part: {heatmapY, heatmapX, id: keypointId}});\n        }\n      }\n    }\n  }\n\n  return queue;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NumberTuple, PART_IDS, PART_NAMES, POSE_CHAIN} from '../keypoints';\nimport {Keypoint, PartWithScore, TensorBuffer3D, Vector2D} from '../types';\n\nimport {clamp, getOffsetPoint} from './util';\nimport {addVectors, getImageCoords} from './util';\n\nconst parentChildrenTuples: NumberTuple[] = POSE_CHAIN.map(\n    ([parentJoinName, childJoinName]): NumberTuple =>\n        ([PART_IDS[parentJoinName], PART_IDS[childJoinName]]));\n\nconst parentToChildEdges: number[] =\n    parentChildrenTuples.map(([, childJointId]) => childJointId);\n\nconst childToParentEdges: number[] =\n    parentChildrenTuples.map(([\n                               parentJointId,\n                             ]) => parentJointId);\n\nfunction getDisplacement(\n    edgeId: number, point: Vector2D, displacements: TensorBuffer3D): Vector2D {\n  const numEdges = displacements.shape[2] / 2;\n  return {\n    y: displacements.get(point.y, point.x, edgeId),\n    x: displacements.get(point.y, point.x, numEdges + edgeId)\n  };\n}\n\nfunction getStridedIndexNearPoint(\n    point: Vector2D, outputStride: number, height: number,\n    width: number): Vector2D {\n  return {\n    y: clamp(Math.round(point.y / outputStride), 0, height - 1),\n    x: clamp(Math.round(point.x / outputStride), 0, width - 1)\n  };\n}\n\n/**\n * We get a new keypoint along the `edgeId` for the pose instance, assuming\n * that the position of the `idSource` part is already known. For this, we\n * follow the displacement vector from the source to target part (stored in\n * the `i`-t channel of the displacement tensor). The displaced keypoint\n * vector is refined using the offset vector by `offsetRefineStep` times.\n */\nfunction traverseToTargetKeypoint(\n    edgeId: number, sourceKeypoint: Keypoint, targetKeypointId: number,\n    scoresBuffer: TensorBuffer3D, offsets: TensorBuffer3D, outputStride: number,\n    displacements: TensorBuffer3D, offsetRefineStep = 2): Keypoint {\n  const [height, width] = scoresBuffer.shape;\n\n  // Nearest neighbor interpolation for the source->target displacements.\n  const sourceKeypointIndices = getStridedIndexNearPoint(\n      sourceKeypoint.position, outputStride, height, width);\n\n  const displacement =\n      getDisplacement(edgeId, sourceKeypointIndices, displacements);\n\n  const displacedPoint = addVectors(sourceKeypoint.position, displacement);\n  let targetKeypoint = displacedPoint;\n  for (let i = 0; i < offsetRefineStep; i++) {\n    const targetKeypointIndices =\n        getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\n\n    const offsetPoint = getOffsetPoint(\n        targetKeypointIndices.y, targetKeypointIndices.x, targetKeypointId,\n        offsets);\n\n    targetKeypoint = addVectors(\n        {\n          x: targetKeypointIndices.x * outputStride,\n          y: targetKeypointIndices.y * outputStride\n        },\n        {x: offsetPoint.x, y: offsetPoint.y});\n  }\n  const targetKeyPointIndices =\n      getStridedIndexNearPoint(targetKeypoint, outputStride, height, width);\n  const score = scoresBuffer.get(\n      targetKeyPointIndices.y, targetKeyPointIndices.x, targetKeypointId);\n\n  return {position: targetKeypoint, part: PART_NAMES[targetKeypointId], score};\n}\n\n/**\n * Follows the displacement fields to decode the full pose of the object\n * instance given the position of a part that acts as root.\n *\n * @return An array of decoded keypoints and their scores for a single pose\n */\nexport function decodePose(\n    root: PartWithScore, scores: TensorBuffer3D, offsets: TensorBuffer3D,\n    outputStride: number, displacementsFwd: TensorBuffer3D,\n    displacementsBwd: TensorBuffer3D): Keypoint[] {\n  const numParts = scores.shape[2];\n  const numEdges = parentToChildEdges.length;\n\n  const instanceKeypoints: Keypoint[] = new Array(numParts);\n  // Start a new detection instance at the position of the root.\n  const {part: rootPart, score: rootScore} = root;\n  const rootPoint = getImageCoords(rootPart, outputStride, offsets);\n\n  instanceKeypoints[rootPart.id] = {\n    score: rootScore,\n    part: PART_NAMES[rootPart.id],\n    position: rootPoint\n  };\n\n  // Decode the part positions upwards in the tree, following the backward\n  // displacements.\n  for (let edge = numEdges - 1; edge >= 0; --edge) {\n    const sourceKeypointId = parentToChildEdges[edge];\n    const targetKeypointId = childToParentEdges[edge];\n    if (instanceKeypoints[sourceKeypointId] &&\n        !instanceKeypoints[targetKeypointId]) {\n      instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(\n          edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores,\n          offsets, outputStride, displacementsBwd);\n    }\n  }\n\n  // Decode the part positions downwards in the tree, following the forward\n  // displacements.\n  for (let edge = 0; edge < numEdges; ++edge) {\n    const sourceKeypointId = childToParentEdges[edge];\n    const targetKeypointId = parentToChildEdges[edge];\n    if (instanceKeypoints[sourceKeypointId] &&\n        !instanceKeypoints[targetKeypointId]) {\n      instanceKeypoints[targetKeypointId] = traverseToTargetKeypoint(\n          edge, instanceKeypoints[sourceKeypointId], targetKeypointId, scores,\n          offsets, outputStride, displacementsFwd);\n    }\n  }\n\n  return instanceKeypoints;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Keypoint, Pose, TensorBuffer3D} from '../types';\n\nimport {buildPartWithScoreQueue} from './build_part_with_score_queue';\nimport {decodePose} from './decode_pose';\nimport {getImageCoords, squaredDistance} from './util';\n\nfunction withinNmsRadiusOfCorrespondingPoint(\n    poses: Pose[], squaredNmsRadius: number, {x, y}: {x: number, y: number},\n    keypointId: number): boolean {\n  return poses.some(({keypoints}) => {\n    const correspondingKeypoint = keypoints[keypointId].position;\n    return squaredDistance(\n               y, x, correspondingKeypoint.y, correspondingKeypoint.x) <=\n        squaredNmsRadius;\n  });\n}\n\n/* Score the newly proposed object instance without taking into account\n * the scores of the parts that overlap with any previously detected\n * instance.\n */\nfunction getInstanceScore(\n    existingPoses: Pose[], squaredNmsRadius: number,\n    instanceKeypoints: Keypoint[]): number {\n  let notOverlappedKeypointScores = instanceKeypoints.reduce(\n      (result, {position, score}, keypointId): number => {\n        if (!withinNmsRadiusOfCorrespondingPoint(\n                existingPoses, squaredNmsRadius, position, keypointId)) {\n          result += score;\n        }\n        return result;\n      }, 0.0);\n\n  return notOverlappedKeypointScores /= instanceKeypoints.length;\n}\n\n// A point (y, x) is considered as root part candidate if its score is a\n// maximum in a window |y - y'| <= kLocalMaximumRadius, |x - x'| <=\n// kLocalMaximumRadius.\nconst kLocalMaximumRadius = 1;\n\n/**\n * Detects multiple poses and finds their parts from part scores and\n * displacement vectors. It returns up to `maxDetections` object instance\n * detections in decreasing root score order. It works as follows: We first\n * create a priority queue with local part score maxima above\n * `scoreThreshold`, considering all parts at the same time. Then we\n * iteratively pull the top  element of the queue (in decreasing score order)\n * and treat it as a root candidate for a new object instance. To avoid\n * duplicate detections, we reject the root candidate if it is within a disk\n * of `nmsRadius` pixels from the corresponding part of a previously detected\n * instance, which is a form of part-based non-maximum suppression (NMS). If\n * the root candidate passes the NMS check, we start a new object instance\n * detection, treating the corresponding part as root and finding the\n * positions of the remaining parts by following the displacement vectors\n * along the tree-structured part graph. We assign to the newly detected\n * instance a score equal to the sum of scores of its parts which have not\n * been claimed by a previous instance (i.e., those at least `nmsRadius`\n * pixels away from the corresponding part of all previously detected\n * instances), divided by the total number of parts `numParts`.\n *\n * @param heatmapScores 3-D tensor with shape `[height, width, numParts]`.\n * The value of heatmapScores[y, x, k]` is the score of placing the `k`-th\n * object part at position `(y, x)`.\n *\n * @param offsets 3-D tensor with shape `[height, width, numParts * 2]`.\n * The value of [offsets[y, x, k], offsets[y, x, k + numParts]]` is the\n * short range offset vector of the `k`-th  object part at heatmap\n * position `(y, x)`.\n *\n * @param displacementsFwd 3-D tensor of shape\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\n * number of edges (parent-child pairs) in the tree. It contains the forward\n * displacements between consecutive part from the root towards the leaves.\n *\n * @param displacementsBwd 3-D tensor of shape\n * `[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\n * number of edges (parent-child pairs) in the tree. It contains the backward\n * displacements between consecutive part from the root towards the leaves.\n *\n * @param outputStride The output stride that was used when feed-forwarding\n * through the PoseNet model.  Must be 32, 16, or 8.\n *\n * @param maxPoseDetections Maximum number of returned instance detections per\n * image.\n *\n * @param scoreThreshold Only return instance detections that have root part\n * score greater or equal to this value. Defaults to 0.5.\n *\n * @param nmsRadius Non-maximum suppression part distance. It needs to be\n * strictly positive. Two parts suppress each other if they are less than\n * `nmsRadius` pixels away. Defaults to 20.\n *\n * @return An array of poses and their scores, each containing keypoints and\n * the corresponding keypoint scores.\n */\nexport function decodeMultiplePoses(\n    scoresBuffer: TensorBuffer3D, offsetsBuffer: TensorBuffer3D,\n    displacementsFwdBuffer: TensorBuffer3D,\n    displacementsBwdBuffer: TensorBuffer3D, outputStride: number,\n    maxPoseDetections: number, scoreThreshold = 0.5, nmsRadius = 20): Pose[] {\n  const poses: Pose[] = [];\n\n  const queue = buildPartWithScoreQueue(\n      scoreThreshold, kLocalMaximumRadius, scoresBuffer);\n\n  const squaredNmsRadius = nmsRadius * nmsRadius;\n\n  // Generate at most maxDetections object instances per image in\n  // decreasing root part score order.\n  while (poses.length < maxPoseDetections && !queue.empty()) {\n    // The top element in the queue is the next root candidate.\n    const root = queue.dequeue();\n\n    // Part-based non-maximum suppression: We reject a root candidate if it\n    // is within a disk of `nmsRadius` pixels from the corresponding part of\n    // a previously detected instance.\n    const rootImageCoords =\n        getImageCoords(root.part, outputStride, offsetsBuffer);\n    if (withinNmsRadiusOfCorrespondingPoint(\n            poses, squaredNmsRadius, rootImageCoords, root.part.id)) {\n      continue;\n    }\n\n    // Start a new detection instance at the position of the root.\n    const keypoints = decodePose(\n        root, scoresBuffer, offsetsBuffer, outputStride, displacementsFwdBuffer,\n        displacementsBwdBuffer);\n\n    const score = getInstanceScore(poses, squaredNmsRadius, keypoints);\n\n    poses.push({keypoints, score});\n  }\n\n  return poses;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {BaseModel} from './base_model';\n\nconst imageNetMean = [-123.15, -115.90, -103.06];\n\nexport class ResNet extends BaseModel {\n  preprocessInput(input: tf.Tensor3D): tf.Tensor3D {\n    return input.add(imageNetMean);\n  }\n\n  nameOutputResults(results: tf.Tensor3D[]) {\n    const [\n      displacementBwd,\n      displacementFwd,\n      heatmap,\n      longOffsets,\n      offsets,\n      partHeatmaps,\n      segmentation,\n      partOffsets,\n  ] = results;\n    return {\n      offsets,\n      segmentation,\n      partHeatmaps,\n      longOffsets,\n      heatmap,\n      displacementFwd,\n      displacementBwd,\n      partOffsets\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst RESNET50_BASE_URL =\n    'https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/';\nconst MOBILENET_BASE_URL =\n    'https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/';\n\n// The BodyPix 2.0 ResNet50 models use the latest TensorFlow.js 1.0 model\n// format.\nexport function resNet50SavedModel(stride: number, quantBytes: number): string {\n  const graphJson = `model-stride${stride}.json`;\n  // quantBytes=4 corresponding to the non-quantized full-precision SavedModel.\n  if (quantBytes === 4) {\n    return RESNET50_BASE_URL + `float/` + graphJson;\n  } else {\n    return RESNET50_BASE_URL + `quant${quantBytes}/` + graphJson;\n  }\n}\n\n// The BodyPix 2.0 MobileNetV1 models use the latest TensorFlow.js 1.0 model\n// format.\nexport function mobileNetSavedModel(\n    stride: number, multiplier: number, quantBytes: number): string {\n  const toStr: {[key: number]: string} = {1.0: '100', 0.75: '075', 0.50: '050'};\n  const graphJson = `model-stride${stride}.json`;\n  // quantBytes=4 corresponding to the non-quantized full-precision SavedModel.\n  if (quantBytes === 4) {\n    return MOBILENET_BASE_URL + `float/${toStr[multiplier]}/` + graphJson;\n  } else {\n    return MOBILENET_BASE_URL + `quant${quantBytes}/${toStr[multiplier]}/` +\n        graphJson;\n  }\n}\n","\n/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfconv from '@tensorflow/tfjs-converter';\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport {BaseModel} from './base_model';\nimport {decodeOnlyPartSegmentation, decodePartSegmentation, toMaskTensor} from './decode_part_map';\nimport {MobileNet} from './mobilenet';\nimport {decodePersonInstanceMasks, decodePersonInstancePartMasks} from './multi_person/decode_instance_masks';\nimport {decodeMultiplePoses} from './multi_person/decode_multiple_poses';\nimport {ResNet} from './resnet';\nimport {mobileNetSavedModel, resNet50SavedModel} from './saved_models';\nimport {BodyPixArchitecture, BodyPixInput, BodyPixInternalResolution, BodyPixMultiplier, BodyPixOutputStride, BodyPixQuantBytes, Padding} from './types';\nimport {PartSegmentation, PersonSegmentation, SemanticPartSegmentation, SemanticPersonSegmentation} from './types';\nimport {getInputSize, padAndResizeTo, scaleAndCropToInputTensorShape, scaleAndFlipPoses, toInputResolutionHeightAndWidth, toTensorBuffers3D} from './util';\n\nconst APPLY_SIGMOID_ACTIVATION = true;\nconst FLIP_POSES_AFTER_SCALING = false;\n\n/**\n * BodyPix model loading is configurable using the following config dictionary.\n *\n * `architecture`: BodyPixArchitecture. It determines which BodyPix architecture\n * to load. The supported architectures are: MobileNetV1 and ResNet50.\n *\n * `outputStride`: Specifies the output stride of the BodyPix model.\n * The smaller the value, the larger the output resolution, and more accurate\n * the model at the cost of speed. Set this to a larger value to increase speed\n * at the cost of accuracy. Stride 32 is supported for ResNet and\n * stride 8,16,32 are supported for various MobileNetV1 models.\n *\n * `multiplier`: An optional number with values: 1.01, 1.0, 0.75, or\n * 0.50. The value is used only by MobileNet architecture. It is the float\n * multiplier for the depth (number of channels) for all convolution ops.\n * The larger the value, the larger the size of the layers, and more accurate\n * the model at the cost of speed. Set this to a smaller value to increase speed\n * at the cost of accuracy.\n *\n * `modelUrl`: An optional string that specifies custom url of the model. This\n * is useful for area/countries that don't have access to the model hosted on\n * GCP.\n *\n * `quantBytes`: An optional number with values: 1, 2, or 4.  This parameter\n * affects weight quantization in the models. The available options are\n * 1 byte, 2 bytes, and 4 bytes. The higher the value, the larger the model size\n * and thus the longer the loading time, the lower the value, the shorter the\n * loading time but lower the accuracy.\n */\nexport interface ModelConfig {\n  architecture: BodyPixArchitecture;\n  outputStride: BodyPixOutputStride;\n  multiplier?: BodyPixMultiplier;\n  modelUrl?: string;\n  quantBytes?: BodyPixQuantBytes;\n}\n\n// The default configuration for loading MobileNetV1 based BodyPix.\n//\n// (And for references, the default configuration for loading ResNet\n// based PoseNet is also included).\n//\n// ```\n// const RESNET_CONFIG = {\n//   architecture: 'ResNet50',\n//   outputStride: 32,\n//   quantBytes: 4,\n// } as ModelConfig;\n// ```\n\nconst MOBILENET_V1_CONFIG = {\n  architecture: 'MobileNetV1',\n  outputStride: 16,\n  quantBytes: 4,\n  multiplier: 0.75,\n} as ModelConfig;\n\nconst VALID_ARCHITECTURE: BodyPixArchitecture[] = ['MobileNetV1', 'ResNet50'];\nconst VALID_STRIDE: {[id: string]: BodyPixOutputStride[]} = {\n  'MobileNetV1': [8, 16, 32],\n  'ResNet50': [32, 16]\n};\nconst VALID_MULTIPLIER: {[id: string]: BodyPixMultiplier[]} = {\n  'MobileNetV1': [0.50, 0.75, 1.0],\n  'ResNet50': [1.0]\n};\nconst VALID_QUANT_BYTES: BodyPixQuantBytes[] = [1, 2, 4];\n\nfunction validateModelConfig(config: ModelConfig): ModelConfig {\n  config = config || MOBILENET_V1_CONFIG;\n\n  if (config.architecture == null) {\n    config.architecture = 'MobileNetV1';\n  }\n  if (VALID_ARCHITECTURE.indexOf(config.architecture) < 0) {\n    throw new Error(\n        `Invalid architecture ${config.architecture}. ` +\n        `Should be one of ${VALID_ARCHITECTURE}`);\n  }\n  if (config.outputStride == null) {\n    config.outputStride = 16;\n  }\n  if (VALID_STRIDE[config.architecture].indexOf(config.outputStride) < 0) {\n    throw new Error(\n        `Invalid outputStride ${config.outputStride}. ` +\n        `Should be one of ${VALID_STRIDE[config.architecture]} ` +\n        `for architecture ${config.architecture}.`);\n  }\n\n  if (config.multiplier == null) {\n    config.multiplier = 1.0;\n  }\n  if (VALID_MULTIPLIER[config.architecture].indexOf(config.multiplier) < 0) {\n    throw new Error(\n        `Invalid multiplier ${config.multiplier}. ` +\n        `Should be one of ${VALID_MULTIPLIER[config.architecture]} ` +\n        `for architecture ${config.architecture}.`);\n  }\n\n  if (config.quantBytes == null) {\n    config.quantBytes = 4;\n  }\n  if (VALID_QUANT_BYTES.indexOf(config.quantBytes) < 0) {\n    throw new Error(\n        `Invalid quantBytes ${config.quantBytes}. ` +\n        `Should be one of ${VALID_QUANT_BYTES} ` +\n        `for architecture ${config.architecture}.`);\n  }\n\n  return config;\n}\n\n/**\n * BodyPix inference is configurable using the following config dictionary.\n *\n * `flipHorizontal`: If the left-right keypoint of poses/part segmentation\n * should be flipped/mirrored horizontally. This should be set to true for\n * videos where the video is by default flipped horizontally (i.e. a webcam),\n * and you want the person & body part segmentation to be returned in the proper\n * orientation.\n *\n * `internalResolution`: Defaults to 'medium'. The internal resolution\n * percentage that the input is resized to before inference. The larger the\n * internalResolution the more accurate the model at the cost of slower\n * prediction times. Available values are 'low', 'medium', 'high', 'full', or a\n * percentage value between 0 and 1. The values 'low', 'medium', 'high', and\n * 'full' map to 0.25, 0.5, 0.75, and 1.0 correspondingly.\n *\n * `segmentationThreshold`: The minimum that segmentation values must\n * have to be considered part of the person. Affects the generation of the\n * segmentation mask. More specifically, it is the threshold used to binarize\n * the intermediate person segmentation probability. The probability of each\n * pixel belongs to a person is in range [0, 1]. If the probability is greater\n * than the `segmentationThreshold`, it will be set to 1 otherwise 0.\n *\n */\nexport interface InferenceConfig {\n  flipHorizontal?: boolean;\n  internalResolution?: BodyPixInternalResolution;\n  segmentationThreshold?: number;\n}\n\n/**\n * Person Inference Config\n *\n * `maxDetections`: Defaults to 10. Maximum number of person pose detections per\n * image.\n *\n * `scoreThreshold`: Defaults to 0.4. Only return person pose that have root\n * part score greater or equal to this value.\n *\n * `nmsRadius`: Defaults to 20. Non-maximum suppression part distance in pixels.\n * It needs to be strictly positive. Two pose keypoints suppress each other if\n * they are less than `nmsRadius` pixels away.\n */\nexport interface PersonInferenceConfig extends InferenceConfig {\n  maxDetections?: number;\n  scoreThreshold?: number;\n  nmsRadius?: number;\n}\n\n/**\n * Multiple Person Instance Inference Config\n *\n * `maxDetections`: Defaults to 10. Maximum number of returned instance\n * segmentation and pose detections per image.\n *\n * `scoreThreshold`: Defaults to 0.4. Only returns and uses person\n * poses for instance segmentation assignment when the pose has root part score\n * greater or equal to this value.\n *\n * `nmsRadius`: Defaults to 20. Non-maximum suppression part distance in pixels.\n * It needs to be strictly positive. Two parts suppress each other if they are\n * less than `nmsRadius` pixels away.\n *\n * `minKeypointScore`: Default to 0.3. Keypoints above the score are used\n * for matching and assigning segmentation mask to each person.\n *\n * `refineSteps`: Default to 10. The number of refinement steps used when\n * assigning the instance segmentation. It needs to be strictly positive. The\n * larger the higher the accuracy and slower the inference.\n *\n */\nexport interface MultiPersonInstanceInferenceConfig extends InferenceConfig {\n  maxDetections?: number;\n  scoreThreshold?: number;\n  nmsRadius?: number;\n  minKeypointScore?: number;\n  refineSteps?: number;\n}\n\nexport const PERSON_INFERENCE_CONFIG: PersonInferenceConfig = {\n  flipHorizontal: false,\n  internalResolution: 'medium',\n  segmentationThreshold: 0.7,\n  maxDetections: 10,\n  scoreThreshold: 0.4,\n  nmsRadius: 20,\n};\n\nexport const MULTI_PERSON_INSTANCE_INFERENCE_CONFIG:\n    MultiPersonInstanceInferenceConfig = {\n      flipHorizontal: false,\n      internalResolution: 'medium',\n      segmentationThreshold: 0.7,\n      maxDetections: 10,\n      scoreThreshold: 0.4,\n      nmsRadius: 20,\n      minKeypointScore: 0.3,\n      refineSteps: 10\n    };\n\nfunction validatePersonInferenceConfig(config: PersonInferenceConfig) {\n  const {segmentationThreshold, maxDetections, scoreThreshold, nmsRadius} =\n      config;\n\n  if (segmentationThreshold < 0.0 || segmentationThreshold > 1.0) {\n    throw new Error(\n        `segmentationThreshold ${segmentationThreshold}. ` +\n        `Should be in range [0.0, 1.0]`);\n  }\n\n  if (maxDetections <= 0) {\n    throw new Error(\n        `Invalid maxDetections ${maxDetections}. ` +\n        `Should be > 0`);\n  }\n\n  if (scoreThreshold < 0.0 || scoreThreshold > 1.0) {\n    throw new Error(\n        `Invalid scoreThreshold ${scoreThreshold}. ` +\n        `Should be in range [0.0, 1.0]`);\n  }\n\n  if (nmsRadius <= 0) {\n    throw new Error(`Invalid nmsRadius ${nmsRadius}.`);\n  }\n}\n\nfunction validateMultiPersonInstanceInferenceConfig(\n    config: MultiPersonInstanceInferenceConfig) {\n  const {\n    segmentationThreshold,\n    maxDetections,\n    scoreThreshold,\n    nmsRadius,\n    minKeypointScore,\n    refineSteps\n  } = config;\n\n  if (segmentationThreshold < 0.0 || segmentationThreshold > 1.0) {\n    throw new Error(\n        `segmentationThreshold ${segmentationThreshold}. ` +\n        `Should be in range [0.0, 1.0]`);\n  }\n\n  if (maxDetections <= 0) {\n    throw new Error(\n        `Invalid maxDetections ${maxDetections}. ` +\n        `Should be > 0`);\n  }\n\n  if (scoreThreshold < 0.0 || scoreThreshold > 1.0) {\n    throw new Error(\n        `Invalid scoreThreshold ${scoreThreshold}. ` +\n        `Should be in range [0.0, 1.0]`);\n  }\n\n  if (nmsRadius <= 0) {\n    throw new Error(`Invalid nmsRadius ${nmsRadius}.`);\n  }\n\n  if (minKeypointScore < 0 || minKeypointScore > 1) {\n    throw new Error(\n        `Invalid minKeypointScore ${minKeypointScore}.` +\n        `Should be in range [0.0, 1.0]`);\n  }\n\n  if (refineSteps <= 0 || refineSteps > 20) {\n    throw new Error(\n        `Invalid refineSteps ${refineSteps}.` +\n        `Should be in range [1, 20]`);\n  }\n}\n\nexport class BodyPix {\n  baseModel: BaseModel;\n\n  constructor(net: BaseModel) {\n    this.baseModel = net;\n  }\n\n  private predictForPersonSegmentation(input: tf.Tensor3D): {\n    segmentLogits: tf.Tensor3D,\n    heatmapScores: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n  } {\n    const {\n      segmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n    } = this.baseModel.predict(input);\n    return {\n      segmentLogits: segmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n    };\n  }\n\n  private predictForPersonSegmentationAndPart(input: tf.Tensor3D): {\n    segmentLogits: tf.Tensor3D,\n    partHeatmapLogits: tf.Tensor3D,\n    heatmapScores: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n  } {\n    const {\n      segmentation,\n      partHeatmaps,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd\n    } = this.baseModel.predict(input);\n    return {\n      segmentLogits: segmentation,\n      partHeatmapLogits: partHeatmaps,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n    };\n  }\n\n  private predictForMultiPersonInstanceSegmentationAndPart(input: tf.Tensor3D):\n      {\n        segmentLogits: tf.Tensor3D,\n        longOffsets: tf.Tensor3D,\n        heatmapScores: tf.Tensor3D,\n        offsets: tf.Tensor3D,\n        displacementFwd: tf.Tensor3D,\n        displacementBwd: tf.Tensor3D,\n        partHeatmaps: tf.Tensor3D\n      } {\n    const {\n      segmentation,\n      longOffsets,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      partHeatmaps,\n    } = this.baseModel.predict(input);\n    return {\n      segmentLogits: segmentation,\n      longOffsets,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      partHeatmaps\n    };\n  }\n\n  /**\n   * Given an image with people, returns a dictionary of all intermediate\n   * tensors including: 1) a binary array with 1 for the pixels that are part of\n   * the person, and 0 otherwise, 2) heatmapScores, 3) offsets, and 4) paddings.\n   *\n   * @param input ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement)\n   * The input image to feed through the network.\n   *\n   * @param internalResolution Defaults to 'medium'. The internal resolution\n   * that the input is resized to before inference. The larger the\n   * internalResolution the more accurate the model at the cost of slower\n   * prediction times. Available values are 'low', 'medium', 'high', 'full', or\n   * a percentage value between 0 and 1. The values 'low', 'medium', 'high', and\n   * 'full' map to 0.25, 0.5, 0.75, and 1.0 correspondingly.\n   *\n   * @param segmentationThreshold The minimum that segmentation values must have\n   * to be considered part of the person. Affects the generation of the\n   * segmentation mask.\n   *\n   * @return A dictionary containing `segmentation`, `heatmapScores`, `offsets`,\n   * and `padding`:\n   * - `segmentation`: A 2d Tensor with 1 for the pixels that are part of the\n   * person, and 0 otherwise. The width and height correspond to the same\n   * dimensions of the input image.\n   * - `heatmapScores`: A 3d Tensor of the keypoint heatmaps used by\n   * pose estimation decoding.\n   * - `offsets`: A 3d Tensor of the keypoint offsets used by pose\n   * estimation decoding.\n   * - `displacementFwd`: A 3d Tensor of the keypoint forward displacement used\n   * by pose estimation decoding.\n   * - `displacementBwd`: A 3d Tensor of the keypoint backward displacement used\n   * by pose estimation decoding.\n   * - `padding`: The padding (unit pixels) being applied to the input image\n   * before it is fed into the model.\n   */\n  segmentPersonActivation(\n      input: BodyPixInput, internalResolution: BodyPixInternalResolution,\n      segmentationThreshold = 0.5): {\n    segmentation: tf.Tensor2D,\n    heatmapScores: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n    padding: Padding,\n    internalResolutionHeightAndWidth: [number, number]\n  } {\n    const [height, width] = getInputSize(input);\n    const internalResolutionHeightAndWidth = toInputResolutionHeightAndWidth(\n        internalResolution, this.baseModel.outputStride, [height, width]);\n    const {resized, padding} =\n        padAndResizeTo(input, internalResolutionHeightAndWidth);\n\n    const {\n      segmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd\n    } = tf.tidy(() => {\n      const {\n        segmentLogits,\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd\n      } = this.predictForPersonSegmentation(resized);\n\n      const [resizedHeight, resizedWidth] = resized.shape;\n\n      const scaledSegmentScores = scaleAndCropToInputTensorShape(\n          segmentLogits, [height, width], [resizedHeight, resizedWidth],\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n\n      return {\n        segmentation:\n            toMaskTensor(scaledSegmentScores.squeeze(), segmentationThreshold),\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd,\n      };\n    });\n    resized.dispose();\n    return {\n      segmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      padding,\n      internalResolutionHeightAndWidth\n    };\n  }\n\n  /**\n   * Given an image with many people, returns a PersonSegmentation dictionary\n   * that contains the segmentation mask for all people and a single pose.\n   *\n   * Note: The segmentation mask returned by this method covers all people but\n   * the pose works well for one person. If you want to estimate instance-level\n   * multiple person segmentation & pose for each person, use\n   * `segmentMultiPerson` instead.\n   *\n   * @param input ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement)\n   * The input image to feed through the network.\n   *\n   * @param config PersonInferenceConfig object that contains\n   * parameters for the BodyPix inference using person decoding.\n   *\n   * @return A SemanticPersonSegmentation dictionary that contains height,\n   * width, the flattened binary segmentation mask and the poses for all people.\n   * The width and height correspond to the same dimensions of the input image.\n   * - `height`: The height of the segmentation data in pixel unit.\n   * - `width`: The width of the segmentation data in pixel unit.\n   * - `data`: The flattened Uint8Array of segmentation data. 1 means the pixel\n   * belongs to a person and 0 means the pixel doesn't belong to a person. The\n   * size of the array is equal to `height` x `width` in row-major order.\n   * - `allPoses`: The 2d poses of all people.\n   */\n  async segmentPerson(\n      input: BodyPixInput,\n      config: PersonInferenceConfig = PERSON_INFERENCE_CONFIG):\n      Promise<SemanticPersonSegmentation> {\n    config = {...PERSON_INFERENCE_CONFIG, ...config};\n\n    validatePersonInferenceConfig(config);\n\n    const {\n      segmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      padding,\n      internalResolutionHeightAndWidth\n    } =\n        this.segmentPersonActivation(\n            input, config.internalResolution, config.segmentationThreshold);\n\n    const [height, width] = segmentation.shape;\n\n    const result = await segmentation.data() as Uint8Array;\n    segmentation.dispose();\n\n    const [scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf] =\n        await toTensorBuffers3D(\n            [heatmapScores, offsets, displacementFwd, displacementBwd]);\n\n    let poses = decodeMultiplePoses(\n        scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf,\n        this.baseModel.outputStride, config.maxDetections,\n        config.scoreThreshold, config.nmsRadius);\n\n    poses = scaleAndFlipPoses(\n        poses, [height, width], internalResolutionHeightAndWidth, padding,\n        FLIP_POSES_AFTER_SCALING);\n\n    heatmapScores.dispose();\n    offsets.dispose();\n    displacementFwd.dispose();\n    displacementBwd.dispose();\n\n    return {height, width, data: result, allPoses: poses};\n  }\n\n  /**\n   * Given an image with multiple people, returns an *array* of\n   * PersonSegmentation object. Each element in the array corresponding to one\n   * of the people in the input image. In other words, it predicts\n   * instance-level multiple person segmentation & pose for each person.\n   *\n   * The model does standard ImageNet pre-processing before inferring through\n   * the model. The image pixels should have values [0-255].\n   *\n   * @param input\n   * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement) The input\n   * image to feed through the network.\n   *\n   * @param config MultiPersonInferenceConfig object that contains\n   * parameters for the BodyPix inference using multi-person decoding.\n   *\n   * @return An array of PersonSegmentation object, each containing a width,\n   * height, a binary array (1 for the pixels that are part of the\n   * person, and 0 otherwise) and 2D pose. The array size corresponds to the\n   * number of pixels in the image. The width and height correspond to the\n   * dimensions of the image the binary array is shaped to, which are the same\n   * dimensions of the input image.\n   */\n  async segmentMultiPerson(\n      input: BodyPixInput,\n      config: MultiPersonInstanceInferenceConfig =\n          MULTI_PERSON_INSTANCE_INFERENCE_CONFIG):\n      Promise<PersonSegmentation[]> {\n    config = {...MULTI_PERSON_INSTANCE_INFERENCE_CONFIG, ...config};\n    validateMultiPersonInstanceInferenceConfig(config);\n    const [height, width] = getInputSize(input);\n    const internalResolutionHeightAndWidth = toInputResolutionHeightAndWidth(\n        config.internalResolution, this.baseModel.outputStride,\n        [height, width]);\n\n    const {resized, padding} =\n        padAndResizeTo(input, internalResolutionHeightAndWidth);\n    const {\n      segmentation,\n      longOffsets,\n      heatmapScoresRaw,\n      offsetsRaw,\n      displacementFwdRaw,\n      displacementBwdRaw,\n    } = tf.tidy(() => {\n      const {\n        segmentLogits,\n        longOffsets,\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd,\n      } = this.predictForMultiPersonInstanceSegmentationAndPart(resized);\n      const scaledSegmentScores = scaleAndCropToInputTensorShape(\n          segmentLogits, [height, width], internalResolutionHeightAndWidth,\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n      const longOffsetsResized = false;\n      let scaledLongOffsets;\n      if (longOffsetsResized) {\n        scaledLongOffsets = scaleAndCropToInputTensorShape(\n            longOffsets, [height, width], internalResolutionHeightAndWidth,\n            [[padding.top, padding.bottom], [padding.left, padding.right]],\n            APPLY_SIGMOID_ACTIVATION);\n      } else {\n        scaledLongOffsets = longOffsets;\n      }\n\n      const segmentation = toMaskTensor(\n          scaledSegmentScores.squeeze(), config.segmentationThreshold);\n\n      return {\n        segmentation,\n        longOffsets: scaledLongOffsets,\n        heatmapScoresRaw: heatmapScores,\n        offsetsRaw: offsets,\n        displacementFwdRaw: displacementFwd,\n        displacementBwdRaw: displacementBwd,\n      };\n    });\n\n    const [scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf] =\n        await toTensorBuffers3D([\n          heatmapScoresRaw, offsetsRaw, displacementFwdRaw, displacementBwdRaw\n        ]);\n\n    let poses = decodeMultiplePoses(\n        scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf,\n        this.baseModel.outputStride, config.maxDetections,\n        config.scoreThreshold, config.nmsRadius);\n\n    poses = scaleAndFlipPoses(\n        poses, [height, width], internalResolutionHeightAndWidth, padding,\n        FLIP_POSES_AFTER_SCALING);\n\n    const instanceMasks = await decodePersonInstanceMasks(\n        segmentation, longOffsets, poses, height, width,\n        this.baseModel.outputStride, internalResolutionHeightAndWidth, padding,\n        config.scoreThreshold, config.refineSteps, config.minKeypointScore,\n        config.maxDetections);\n\n    resized.dispose();\n    segmentation.dispose();\n    longOffsets.dispose();\n    heatmapScoresRaw.dispose();\n    offsetsRaw.dispose();\n    displacementFwdRaw.dispose();\n    displacementBwdRaw.dispose();\n\n    return instanceMasks;\n  }\n\n  /**\n   * Given an image with many people, returns a dictionary containing: height,\n   * width, a tensor with a part id from 0-24 for the pixels that are\n   * part of a corresponding body part, and -1 otherwise. This does standard\n   * ImageNet pre-processing before inferring through the model.  The image\n   * should pixels should have values [0-255].\n   *\n   * @param input ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement)\n   * The input image to feed through the network.\n   *\n   * @param internalResolution Defaults to 'medium'. The internal resolution\n   * percentage that the input is resized to before inference. The larger the\n   * internalResolution the more accurate the model at the cost of slower\n   * prediction times. Available values are 'low', 'medium', 'high', 'full', or\n   * a percentage value between 0 and 1. The values 'low', 'medium', 'high', and\n   * 'full' map to 0.25, 0.5, 0.75, and 1.0 correspondingly.\n   *\n   * @param segmentationThreshold The minimum that segmentation values must have\n   * to be considered part of the person.  Affects the clipping of the colored\n   * part image.\n   *\n   * @return  A dictionary containing `partSegmentation`, `heatmapScores`,\n   * `offsets`, and `padding`:\n   * - `partSegmentation`: A 2d Tensor with a part id from 0-24 for\n   * the pixels that are part of a corresponding body part, and -1 otherwise.\n   * - `heatmapScores`: A 3d Tensor of the keypoint heatmaps used by\n   * single-person pose estimation decoding.\n   * - `offsets`: A 3d Tensor of the keypoint offsets used by single-person pose\n   * estimation decoding.\n   * - `displacementFwd`: A 3d Tensor of the keypoint forward displacement\n   * used by pose estimation decoding.\n   * - `displacementBwd`: A 3d Tensor of the keypoint backward displacement used\n   * by pose estimation decoding.\n   * - `padding`: The padding (unit pixels) being applied to the input image\n   * before it is fed into the model.\n   */\n  segmentPersonPartsActivation(\n      input: BodyPixInput, internalResolution: BodyPixInternalResolution,\n      segmentationThreshold = 0.5): {\n    partSegmentation: tf.Tensor2D,\n    heatmapScores: tf.Tensor3D,\n    offsets: tf.Tensor3D,\n    displacementFwd: tf.Tensor3D,\n    displacementBwd: tf.Tensor3D,\n    padding: Padding,\n    internalResolutionHeightAndWidth: [number, number]\n  } {\n    const [height, width] = getInputSize(input);\n    const internalResolutionHeightAndWidth = toInputResolutionHeightAndWidth(\n        internalResolution, this.baseModel.outputStride, [height, width]);\n    const {\n      resized,\n      padding,\n    } = padAndResizeTo(input, internalResolutionHeightAndWidth);\n\n    const {\n      partSegmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd\n    } = tf.tidy(() => {\n      const {\n        segmentLogits,\n        partHeatmapLogits,\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd\n      } = this.predictForPersonSegmentationAndPart(resized);\n\n      const [resizedHeight, resizedWidth] = resized.shape;\n\n      const scaledSegmentScores = scaleAndCropToInputTensorShape(\n          segmentLogits, [height, width], [resizedHeight, resizedWidth],\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n\n      const scaledPartHeatmapScore = scaleAndCropToInputTensorShape(\n          partHeatmapLogits, [height, width], [resizedHeight, resizedWidth],\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n      const segmentation =\n          toMaskTensor(scaledSegmentScores.squeeze(), segmentationThreshold);\n      return {\n        partSegmentation:\n            decodePartSegmentation(segmentation, scaledPartHeatmapScore),\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd,\n      };\n    });\n    resized.dispose();\n    return {\n      partSegmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      padding,\n      internalResolutionHeightAndWidth\n    };\n  }\n\n  /**\n   * Given an image with many people, returns a PartSegmentation dictionary that\n   * contains the body part segmentation mask for all people and a single pose.\n   *\n   * Note: The body part segmentation mask returned by this method covers all\n   * people but the pose works well when there is one person. If you want to\n   * estimate instance-level multiple person body part segmentation & pose for\n   * each person, use `segmentMultiPersonParts` instead.\n   *\n   * @param input ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement)\n   * The input image to feed through the network.\n   *\n   * @param config PersonInferenceConfig object that contains\n   * parameters for the BodyPix inference using single person decoding.\n   *\n   * @return A SemanticPartSegmentation dictionary that contains height, width,\n   * the flattened binary segmentation mask and the pose for the person. The\n   * width and height correspond to the same dimensions of the input image.\n   * - `height`: The height of the person part segmentation data in pixel unit.\n   * - `width`: The width of the person part segmentation data in pixel unit.\n   * - `data`: The flattened Int32Array of person part segmentation data with a\n   * part id from 0-24 for the pixels that are part of a corresponding body\n   * part, and -1 otherwise. The size of the array is equal to `height` x\n   * `width` in row-major order.\n   * - `allPoses`: The 2d poses of all people.\n   */\n  async segmentPersonParts(\n      input: BodyPixInput,\n      config: PersonInferenceConfig = PERSON_INFERENCE_CONFIG):\n      Promise<SemanticPartSegmentation> {\n    config = {...PERSON_INFERENCE_CONFIG, ...config};\n\n    validatePersonInferenceConfig(config);\n    const {\n      partSegmentation,\n      heatmapScores,\n      offsets,\n      displacementFwd,\n      displacementBwd,\n      padding,\n      internalResolutionHeightAndWidth\n    } =\n        this.segmentPersonPartsActivation(\n            input, config.internalResolution, config.segmentationThreshold);\n\n    const [height, width] = partSegmentation.shape;\n    const data = await partSegmentation.data() as Int32Array;\n    partSegmentation.dispose();\n\n    const [scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf] =\n        await toTensorBuffers3D(\n            [heatmapScores, offsets, displacementFwd, displacementBwd]);\n\n    let poses = decodeMultiplePoses(\n        scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf,\n        this.baseModel.outputStride, config.maxDetections,\n        config.scoreThreshold, config.nmsRadius);\n\n    poses = scaleAndFlipPoses(\n        poses, [height, width], internalResolutionHeightAndWidth, padding,\n        FLIP_POSES_AFTER_SCALING);\n\n    heatmapScores.dispose();\n    offsets.dispose();\n    displacementFwd.dispose();\n    displacementBwd.dispose();\n\n    return {height, width, data, allPoses: poses};\n  }\n\n  /**\n   * Given an image with multiple people, returns an *array* of PartSegmentation\n   * object. Each element in the array corresponding to one\n   * of the people in the input image. In other words, it predicts\n   * instance-level multiple person body part segmentation & pose for each\n   * person.\n   *\n   * This does standard ImageNet pre-processing before inferring through\n   * the model. The image pixels should have values [0-255].\n   *\n   * @param input\n   * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement) The input\n   * image to feed through the network.\n   *\n   * @param config MultiPersonInferenceConfig object that contains\n   * parameters for the BodyPix inference using multi-person decoding.\n   *\n   * @return An array of PartSegmentation object, each containing a width,\n   * height, a flattened array (with part id from 0-24 for the pixels that are\n   * part of a corresponding body part, and -1 otherwise) and 2D pose. The width\n   * and height correspond to the dimensions of the image. Each flattened part\n   * segmentation array size is equal to `height` x `width`.\n   */\n  async segmentMultiPersonParts(\n      input: BodyPixInput,\n      config: MultiPersonInstanceInferenceConfig =\n          MULTI_PERSON_INSTANCE_INFERENCE_CONFIG): Promise<PartSegmentation[]> {\n    config = {...MULTI_PERSON_INSTANCE_INFERENCE_CONFIG, ...config};\n\n    validateMultiPersonInstanceInferenceConfig(config);\n    const [height, width] = getInputSize(input);\n    const internalResolutionHeightAndWidth = toInputResolutionHeightAndWidth(\n        config.internalResolution, this.baseModel.outputStride,\n        [height, width]);\n    const {resized, padding} =\n        padAndResizeTo(input, internalResolutionHeightAndWidth);\n    const {\n      segmentation,\n      longOffsets,\n      heatmapScoresRaw,\n      offsetsRaw,\n      displacementFwdRaw,\n      displacementBwdRaw,\n      partSegmentation,\n    } = tf.tidy(() => {\n      const {\n        segmentLogits,\n        longOffsets,\n        heatmapScores,\n        offsets,\n        displacementFwd,\n        displacementBwd,\n        partHeatmaps\n      } = this.predictForMultiPersonInstanceSegmentationAndPart(resized);\n\n      // decoding with scaling.\n      const scaledSegmentScores = scaleAndCropToInputTensorShape(\n          segmentLogits, [height, width], internalResolutionHeightAndWidth,\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n\n      // decoding with scaling.\n      const scaledPartSegmentationScores = scaleAndCropToInputTensorShape(\n          partHeatmaps, [height, width], internalResolutionHeightAndWidth,\n          [[padding.top, padding.bottom], [padding.left, padding.right]],\n          APPLY_SIGMOID_ACTIVATION);\n\n      const scaledLongOffsets = longOffsets;\n      const segmentation = toMaskTensor(\n          scaledSegmentScores.squeeze(), config.segmentationThreshold);\n      const partSegmentation =\n          decodeOnlyPartSegmentation(scaledPartSegmentationScores);\n      return {\n        segmentation,\n        longOffsets: scaledLongOffsets,\n        heatmapScoresRaw: heatmapScores,\n        offsetsRaw: offsets,\n        displacementFwdRaw: displacementFwd,\n        displacementBwdRaw: displacementBwd,\n        partSegmentation\n      };\n    });\n\n    const [scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf] =\n        await toTensorBuffers3D([\n          heatmapScoresRaw, offsetsRaw, displacementFwdRaw, displacementBwdRaw\n        ]);\n\n    let poses = decodeMultiplePoses(\n        scoresBuf, offsetsBuf, displacementsFwdBuf, displacementsBwdBuf,\n        this.baseModel.outputStride, config.maxDetections,\n        config.scoreThreshold, config.nmsRadius);\n\n    poses = scaleAndFlipPoses(\n        poses, [height, width], internalResolutionHeightAndWidth, padding,\n        FLIP_POSES_AFTER_SCALING);\n\n    const instanceMasks = await decodePersonInstancePartMasks(\n        segmentation, longOffsets, partSegmentation, poses, height, width,\n        this.baseModel.outputStride, internalResolutionHeightAndWidth, padding,\n        config.scoreThreshold, config.refineSteps, config.minKeypointScore,\n        config.maxDetections);\n\n    resized.dispose();\n    segmentation.dispose();\n    longOffsets.dispose();\n    heatmapScoresRaw.dispose();\n    offsetsRaw.dispose();\n    displacementFwdRaw.dispose();\n    displacementBwdRaw.dispose();\n    partSegmentation.dispose();\n\n    return instanceMasks;\n  }\n\n  public dispose() {\n    this.baseModel.dispose();\n  }\n}\n\n/**\n * Loads the MobileNet BodyPix model.\n */\nasync function loadMobileNet(config: ModelConfig): Promise<BodyPix> {\n  const outputStride = config.outputStride;\n  const quantBytes = config.quantBytes;\n  const multiplier = config.multiplier;\n  if (tf == null) {\n    throw new Error(\n        `Cannot find TensorFlow.js. If you are using a <script> tag, please ` +\n        `also include @tensorflow/tfjs on the page before using this\n        model.`);\n  }\n\n  const url = mobileNetSavedModel(outputStride, multiplier, quantBytes);\n  const graphModel = await tfconv.loadGraphModel(config.modelUrl || url);\n  const mobilenet = new MobileNet(graphModel, outputStride);\n  return new BodyPix(mobilenet);\n}\n\n/**\n * Loads the ResNet BodyPix model.\n */\nasync function loadResNet(config: ModelConfig): Promise<BodyPix> {\n  const outputStride = config.outputStride;\n  const quantBytes = config.quantBytes;\n  if (tf == null) {\n    throw new Error(\n        `Cannot find TensorFlow.js. If you are using a <script> tag, please ` +\n        `also include @tensorflow/tfjs on the page before using this\n        model.`);\n  }\n\n  const url = resNet50SavedModel(outputStride, quantBytes);\n  const graphModel = await tfconv.loadGraphModel(config.modelUrl || url);\n  const resnet = new ResNet(graphModel, outputStride);\n  return new BodyPix(resnet);\n}\n\n/**\n * Loads the BodyPix model instance from a checkpoint, with the ResNet\n * or MobileNet architecture. The model to be loaded is configurable using the\n * config dictionary ModelConfig. Please find more details in the\n * documentation of the ModelConfig.\n *\n * @param config ModelConfig dictionary that contains parameters for\n * the BodyPix loading process. Please find more details of each parameters\n * in the documentation of the ModelConfig interface. The predefined\n * `MOBILENET_V1_CONFIG` and `RESNET_CONFIG` can also be used as references\n * for defining your customized config.\n */\nexport async function load(config: ModelConfig = MOBILENET_V1_CONFIG):\n    Promise<BodyPix> {\n  config = validateModelConfig(config);\n  if (config.architecture === 'ResNet50') {\n    return loadResNet(config);\n  } else if (config.architecture === 'MobileNetV1') {\n    return loadMobileNet(config);\n  } else {\n    return null;\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst throwSet = new WeakSet();\n\n// prettier-ignore\ntype Promisify<T> =\n  T extends { [proxyMarker]: boolean }\n    ? Promise<Remote<T>>\n    : T extends (...args: infer R1) => infer R2\n        ? (...args: R1) => Promisify<R2>\n        : Promise<T>;\n\n// prettier-ignore\nexport type Remote<T> =\n  (\n    T extends (...args: infer R1) => infer R2\n      ? (...args: R1) => Promisify<R2>\n      : unknown\n  ) &\n  (\n    T extends { new (...args: infer R1): infer R2 }\n      ? { new (...args: R1): Promise<Remote<R2>> }\n      : unknown\n  ) &\n  (\n    T extends Object\n      ? { [K in keyof T]: Remote<T[K]> }\n      : unknown\n  ) &\n  (\n    T extends string\n      ? Promise<string>\n      : unknown\n  ) &\n  (\n    T extends number\n      ? Promise<number>\n      : unknown\n  ) &\n  (\n    T extends boolean\n      ? Promise<boolean>\n      : unknown\n  ) & {\n    [createEndpoint]: MessagePort;\n    [releaseProxy]: () => void;\n  };\n\ndeclare var x: Remote<number>;\n\ndeclare var y: PromiseLike<number>;\n\nexport interface TransferHandler {\n  canHandle(obj: any): boolean;\n  serialize(obj: any): [any, Transferable[]];\n  deserialize(obj: any): any;\n}\n\nexport const transferHandlers = new Map<string, TransferHandler>([\n  [\n    \"proxy\",\n    {\n      canHandle: obj => obj && obj[proxyMarker],\n      serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n      },\n      deserialize: (port: MessagePort) => {\n        port.start();\n        return wrap(port);\n      }\n    }\n  ],\n  [\n    \"throw\",\n    {\n      canHandle: obj => throwSet.has(obj),\n      serialize(obj) {\n        const isError = obj instanceof Error;\n        let serialized = obj;\n        if (isError) {\n          serialized = {\n            isError,\n            message: obj.message,\n            stack: obj.stack\n          };\n        }\n        return [serialized, []];\n      },\n      deserialize(obj) {\n        if ((obj as any).isError) {\n          throw Object.assign(new Error(), obj);\n        }\n        throw obj;\n      }\n    }\n  ]\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message)\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (e) {\n      returnValue = e;\n      throwSet.add(e);\n    }\n    Promise.resolve(returnValue)\n      .catch(e => {\n        throwSet.add(e);\n        return e;\n      })\n      .then(returnValue => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function() {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map(p => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map(p => p.toString()),\n          value\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map(p => p.toString()),\n          argumentList\n        },\n        transferables\n      ).then(fromWireValue);\n    }\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & { [proxyMarker]: true } {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import { load as loadBodyPix, BodyPix } from '@tensorflow-models/body-pix'\nimport { expose, transfer } from 'comlink'\nimport { Config } from './Parent.worker'\nimport { SemanticPersonSegmentation } from '@tensorflow-models/body-pix/dist/types'\n\ndeclare const self: Worker\n\nexport class ChildWorker {\n  private number!: number\n  private config!: Config\n  private inputCanvas!: OffscreenCanvas\n\n  private bodyPixLoading = false\n  private bodyPix: BodyPix | null = null\n\n  public async init(num: number, config: Config) {\n    this.number = num\n    this.config = config\n    this.inputCanvas = new OffscreenCanvas(config.width, config.height)\n    await this.loadBodyPix()\n  }\n\n  private async loadBodyPix() {\n    if (this.bodyPixLoading) return\n\n    this.bodyPixLoading = true\n    this.bodyPix = await loadBodyPix()\n    this.bodyPixLoading = false\n  }\n\n  private _getPersonSeg(\n    bodyPix: BodyPix,\n    input: ImageBitmap,\n    theshold: number\n  ) {\n    if (this.config.debugFlag) console.log(`Running: ${this.number}`)\n    const context = this.inputCanvas.getContext('2d')!\n    context.drawImage(input, 0, 0)\n    const imageData = context.getImageData(0, 0, input.width, input.height)\n    return bodyPix.segmentPerson(imageData, {\n      segmentationThreshold: theshold\n      //internalResolution: 'low'\n    })\n  }\n\n  async getPersonSeg(\n    input: ImageBitmap,\n    theshold: number\n  ): Promise<SemanticPersonSegmentation> {\n    const personSeg = await this._getPersonSeg(this.bodyPix!, input, theshold)\n    return transfer(personSeg, [personSeg.data.buffer])\n  }\n}\n\nexpose(ChildWorker, self)\n\n// https://github.com/webpack-contrib/worker-loader/issues/190#issuecomment-488337001\nexport default {} as typeof Worker & (new () => Worker)\n"],"sourceRoot":""}